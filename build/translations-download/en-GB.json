{
    "common": {
        "action": {
            "connect": "Connect",
            "disable": "Disable",
            "disconnect": "Disconnect",
            "enable": "Enable",
            "pause": "Pause",
            "reload": "Reload",
            "restart": "Restart",
            "start": "Start",
            "stop": "Stop",
            "toggle": "Toggle"
        },
        "config_flow": {
            "abort": {
                "already_configured_account": "Account is already configured",
                "oauth2_authorize_url_timeout": "Timeout generating authorise URL.",
                "unknown_authorize_url_generation": "Unknown error generating an authorise URL."
            }
        }
    },
    "component": {
        "accuweather": {
            "entity": {
                "sensor": {
                    "air_quality_0d": {
                        "name": "Air quality today",
                        "state": {
                            "good": "Good",
                            "hazardous": "Hazardous",
                            "high": "High",
                            "low": "Low",
                            "moderate": "Moderate",
                            "unhealthy": "Unhealthy"
                        }
                    },
                    "air_quality_1d": {
                        "name": "Air quality day 1",
                        "state": {
                            "good": "Good",
                            "hazardous": "Hazardous",
                            "high": "High",
                            "low": "Low",
                            "moderate": "Moderate",
                            "unhealthy": "Unhealthy"
                        }
                    },
                    "air_quality_2d": {
                        "name": "Air quality day 2",
                        "state": {
                            "good": "Good",
                            "hazardous": "Hazardous",
                            "high": "High",
                            "low": "Low",
                            "moderate": "Moderate",
                            "unhealthy": "Unhealthy"
                        }
                    },
                    "air_quality_3d": {
                        "name": "Air quality day 3",
                        "state": {
                            "good": "Good",
                            "hazardous": "Hazardous",
                            "high": "High",
                            "low": "Low",
                            "moderate": "Moderate",
                            "unhealthy": "Unhealthy"
                        }
                    },
                    "air_quality_4d": {
                        "name": "Air quality day 4",
                        "state": {
                            "good": "Good",
                            "hazardous": "Hazardous",
                            "high": "High",
                            "low": "Low",
                            "moderate": "Moderate",
                            "unhealthy": "Unhealthy"
                        }
                    },
                    "apparent_temperature": {
                        "name": "Apparent temperature"
                    },
                    "cloud_ceiling": {
                        "name": "Cloud ceiling"
                    },
                    "cloud_cover": {
                        "name": "Cloud cover"
                    },
                    "cloud_cover_day_0d": {
                        "name": "Cloud cover today"
                    },
                    "cloud_cover_day_1d": {
                        "name": "Cloud cover day 1"
                    },
                    "cloud_cover_day_2d": {
                        "name": "Cloud cover day 2"
                    },
                    "cloud_cover_day_3d": {
                        "name": "Cloud cover day 3"
                    },
                    "cloud_cover_day_4d": {
                        "name": "Cloud cover day 4"
                    },
                    "cloud_cover_night_0d": {
                        "name": "Cloud cover tonight"
                    },
                    "cloud_cover_night_1d": {
                        "name": "Cloud cover night 1"
                    },
                    "cloud_cover_night_2d": {
                        "name": "Cloud cover night 2"
                    },
                    "cloud_cover_night_3d": {
                        "name": "Cloud cover night 3"
                    },
                    "cloud_cover_night_4d": {
                        "name": "Cloud cover night 4"
                    },
                    "condition_day_0d": {
                        "name": "Condition today"
                    },
                    "condition_day_1d": {
                        "name": "Condition day 1"
                    },
                    "condition_day_2d": {
                        "name": "Condition day 2"
                    },
                    "condition_day_3d": {
                        "name": "Condition day 3"
                    },
                    "condition_day_4d": {
                        "name": "Condition day 4"
                    },
                    "condition_night_0d": {
                        "name": "Condition tonight"
                    },
                    "condition_night_1d": {
                        "name": "Condition night 1"
                    },
                    "condition_night_2d": {
                        "name": "Condition night 2"
                    },
                    "condition_night_3d": {
                        "name": "Condition night 3"
                    },
                    "condition_night_4d": {
                        "name": "Condition night 4"
                    },
                    "dew_point": {
                        "name": "Dew point"
                    },
                    "grass_pollen_0d": {
                        "name": "Grass pollen today",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "grass_pollen_1d": {
                        "name": "Grass pollen day 1",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "grass_pollen_2d": {
                        "name": "Grass pollen day 2",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "grass_pollen_3d": {
                        "name": "Grass pollen day 3",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "grass_pollen_4d": {
                        "name": "Grass pollen day 4",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "hours_of_sun_0d": {
                        "name": "Hours of sun today"
                    },
                    "hours_of_sun_1d": {
                        "name": "Hours of sun day 1"
                    },
                    "hours_of_sun_2d": {
                        "name": "Hours of sun day 2"
                    },
                    "hours_of_sun_3d": {
                        "name": "Hours of sun day 3"
                    },
                    "hours_of_sun_4d": {
                        "name": "Hours of sun day 4"
                    },
                    "mold_pollen": {
                        "state_attributes": {
                            "level": {
                                "name": "Level"
                            }
                        }
                    },
                    "mold_pollen_0d": {
                        "name": "Mould pollen today",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "mold_pollen_1d": {
                        "name": "Mould pollen day 1",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "mold_pollen_2d": {
                        "name": "Mould pollen day 2",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "mold_pollen_3d": {
                        "name": "Mould pollen day 3",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "mold_pollen_4d": {
                        "name": "Mold pollen day 4",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "pressure_tendency": {
                        "name": "Pressure tendency"
                    },
                    "ragweed_pollen_0d": {
                        "name": "Ragweed pollen today",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "ragweed_pollen_1d": {
                        "name": "Ragweed pollen day 1",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "ragweed_pollen_2d": {
                        "name": "Ragweed pollen day 2",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "ragweed_pollen_3d": {
                        "name": "Ragweed pollen day 3",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "ragweed_pollen_4d": {
                        "name": "Ragweed pollen day 4",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "realfeel_temperature": {
                        "name": "RealFeel temperature"
                    },
                    "realfeel_temperature_max_0d": {
                        "name": "RealFeel temperature max today"
                    },
                    "realfeel_temperature_max_1d": {
                        "name": "RealFeel temperature max day 1"
                    },
                    "realfeel_temperature_max_2d": {
                        "name": "RealFeel temperature max day 2"
                    },
                    "realfeel_temperature_max_3d": {
                        "name": "RealFeel temperature max day 3"
                    },
                    "realfeel_temperature_max_4d": {
                        "name": "RealFeel temperature max day 4"
                    },
                    "realfeel_temperature_min_0d": {
                        "name": "RealFeel temperature min today"
                    },
                    "realfeel_temperature_min_1d": {
                        "name": "RealFeel temperature min day 1"
                    },
                    "realfeel_temperature_min_2d": {
                        "name": "RealFeel temperature min day 2"
                    },
                    "realfeel_temperature_min_3d": {
                        "name": "RealFeel temperature min day 3"
                    },
                    "realfeel_temperature_min_4d": {
                        "name": "RealFeel temperature min day 4"
                    },
                    "realfeel_temperature_shade": {
                        "name": "RealFeel temperature shade"
                    },
                    "realfeel_temperature_shade_max_0d": {
                        "name": "RealFeel temperature shade max today"
                    },
                    "realfeel_temperature_shade_max_1d": {
                        "name": "RealFeel temperature shade max day 1"
                    },
                    "realfeel_temperature_shade_max_2d": {
                        "name": "RealFeel temperature shade max day 2"
                    },
                    "realfeel_temperature_shade_max_3d": {
                        "name": "RealFeel temperature shade max day 3"
                    },
                    "realfeel_temperature_shade_max_4d": {
                        "name": "RealFeel temperature shade max day 4"
                    },
                    "realfeel_temperature_shade_min_0d": {
                        "name": "RealFeel temperature shade min today"
                    },
                    "realfeel_temperature_shade_min_1d": {
                        "name": "RealFeel temperature shade min day 1"
                    },
                    "realfeel_temperature_shade_min_2d": {
                        "name": "RealFeel temperature shade min day 2"
                    },
                    "realfeel_temperature_shade_min_3d": {
                        "name": "RealFeel temperature shade min day 3"
                    },
                    "realfeel_temperature_shade_min_4d": {
                        "name": "RealFeel temperature shade min day 4"
                    },
                    "solar_irradiance_day_0d": {
                        "name": "Solar irradiance today"
                    },
                    "solar_irradiance_day_1d": {
                        "name": "Solar irradiance day 1"
                    },
                    "solar_irradiance_day_2d": {
                        "name": "Solar irradiance day 2"
                    },
                    "solar_irradiance_day_3d": {
                        "name": "Solar irradiance day 3"
                    },
                    "solar_irradiance_day_4d": {
                        "name": "Solar irradiance day 4"
                    },
                    "solar_irradiance_night_0d": {
                        "name": "Solar irradiance tonight"
                    },
                    "solar_irradiance_night_1d": {
                        "name": "Solar irradiance night 1"
                    },
                    "solar_irradiance_night_2d": {
                        "name": "Solar irradiance night 2"
                    },
                    "solar_irradiance_night_3d": {
                        "name": "Solar irradiance night 3"
                    },
                    "solar_irradiance_night_4d": {
                        "name": "Solar irradiance night 4"
                    },
                    "thunderstorm_probability_day_0d": {
                        "name": "Thunderstorm probability today"
                    },
                    "thunderstorm_probability_day_1d": {
                        "name": "Thunderstorm probability day 1"
                    },
                    "thunderstorm_probability_day_2d": {
                        "name": "Thunderstorm probability day 2"
                    },
                    "thunderstorm_probability_day_3d": {
                        "name": "Thunderstorm probability day 3"
                    },
                    "thunderstorm_probability_day_4d": {
                        "name": "Thunderstorm probability day 4"
                    },
                    "thunderstorm_probability_night_0d": {
                        "name": "Thunderstorm probability tonight"
                    },
                    "thunderstorm_probability_night_1d": {
                        "name": "Thunderstorm probability night 1"
                    },
                    "thunderstorm_probability_night_2d": {
                        "name": "Thunderstorm probability night 2"
                    },
                    "thunderstorm_probability_night_3d": {
                        "name": "Thunderstorm probability night 3"
                    },
                    "thunderstorm_probability_night_4d": {
                        "name": "Thunderstorm probability night 4"
                    },
                    "tree_pollen_0d": {
                        "name": "Tree pollen today",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "tree_pollen_1d": {
                        "name": "Tree pollen day 1",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "tree_pollen_2d": {
                        "name": "Tree pollen day 2",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "tree_pollen_3d": {
                        "name": "Tree pollen day 3",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "tree_pollen_4d": {
                        "name": "Tree pollen day 4",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "uv_index": {
                        "name": "UV index"
                    },
                    "uv_index_0d": {
                        "name": "UV index today",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "uv_index_1d": {
                        "name": "UV index day 1",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "uv_index_2d": {
                        "name": "UV index day 2",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "uv_index_3d": {
                        "name": "UV index day 3",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "uv_index_4d": {
                        "name": "UV index day 4",
                        "state_attributes": {
                            "level": {
                                "name": "Level",
                                "state": {
                                    "good": "Good",
                                    "hazardous": "Hazardous",
                                    "high": "High",
                                    "low": "Low",
                                    "moderate": "Moderate",
                                    "unhealthy": "Unhealthy"
                                }
                            }
                        }
                    },
                    "wet_bulb_temperature": {
                        "name": "Wet bulb temperature"
                    },
                    "wind_chill_temperature": {
                        "name": "Wind chill temperature"
                    },
                    "wind_gust_speed_day_0d": {
                        "name": "Wind gust speed today"
                    },
                    "wind_gust_speed_day_1d": {
                        "name": "Wind gust speed day 1"
                    },
                    "wind_gust_speed_day_2d": {
                        "name": "Wind gust speed day 2"
                    },
                    "wind_gust_speed_day_3d": {
                        "name": "Wind gust speed day 3"
                    },
                    "wind_gust_speed_day_4d": {
                        "name": "Wind gust speed day 4"
                    },
                    "wind_gust_speed_night_0d": {
                        "name": "Wind gust speed tonight"
                    },
                    "wind_gust_speed_night_1d": {
                        "name": "Wind gust speed night 1"
                    },
                    "wind_gust_speed_night_2d": {
                        "name": "Wind gust speed night 2"
                    },
                    "wind_gust_speed_night_3d": {
                        "name": "Wind gust speed night 3"
                    },
                    "wind_gust_speed_night_4d": {
                        "name": "Wind gust speed night 4"
                    },
                    "wind_speed_day_0d": {
                        "name": "Wind speed today"
                    },
                    "wind_speed_day_1d": {
                        "name": "Wind speed day 1"
                    },
                    "wind_speed_day_2d": {
                        "name": "Wind speed day 2"
                    },
                    "wind_speed_day_3d": {
                        "name": "Wind speed day 3"
                    },
                    "wind_speed_night_0d": {
                        "name": "Wind speed tonight"
                    },
                    "wind_speed_night_1d": {
                        "name": "Wind speed night 1"
                    },
                    "wind_speed_night_2d": {
                        "name": "Wind speed night 2"
                    },
                    "wind_speed_night_3d": {
                        "name": "Wind speed night 3"
                    },
                    "wind_speed_night_4d": {
                        "name": "Wind speed night 4"
                    }
                }
            }
        },
        "airnow": {
            "entity": {
                "sensor": {
                    "station": {
                        "name": "PM2.5 reporting station"
                    }
                }
            }
        },
        "airthings": {
            "entity": {
                "sensor": {
                    "mold": {
                        "name": "Mould"
                    }
                }
            }
        },
        "airvisual_pro": {
            "entity": {
                "sensor": {
                    "outdoor_air_quality_index": {
                        "name": "Outdoor air quality index"
                    },
                    "pm01": {
                        "name": "PM0.1"
                    }
                }
            }
        },
        "alarm_control_panel": {
            "services": {
                "alarm_arm_away": {
                    "description": "Sets the alarm to: _armed, no one home_.",
                    "fields": {
                        "code": {
                            "description": "Code to arm the alarm.",
                            "name": "Code"
                        }
                    },
                    "name": "Arm away"
                },
                "alarm_arm_custom_bypass": {
                    "description": "Arms the alarm while allowing to bypass a custom area.",
                    "fields": {
                        "code": {
                            "description": "Code to arm the alarm.",
                            "name": "Code"
                        }
                    },
                    "name": "Arm with custom bypass"
                },
                "alarm_arm_home": {
                    "description": "Sets the alarm to: _armed, but someone is home_.",
                    "fields": {
                        "code": {
                            "description": "Code to arm the alarm.",
                            "name": "Code"
                        }
                    },
                    "name": "Arm home"
                },
                "alarm_arm_night": {
                    "description": "Sets the alarm to: _armed for the night_.",
                    "fields": {
                        "code": {
                            "description": "Code to arm the alarm.",
                            "name": "Code"
                        }
                    },
                    "name": "Arm night"
                },
                "alarm_arm_vacation": {
                    "description": "Sets the alarm to: _armed for holiday_.",
                    "fields": {
                        "code": {
                            "description": "Code to arm the alarm.",
                            "name": "Code"
                        }
                    },
                    "name": "Arm holiday mode"
                },
                "alarm_disarm": {
                    "description": "Disarms the alarm.",
                    "fields": {
                        "code": {
                            "description": "Code to disarm the alarm.",
                            "name": "Code"
                        }
                    },
                    "name": "Disarm"
                },
                "alarm_trigger": {
                    "description": "Enables an external alarm trigger.",
                    "fields": {
                        "code": {
                            "description": "Code to arm the alarm.",
                            "name": "Code"
                        }
                    },
                    "name": "Trigger"
                }
            }
        },
        "ambient_station": {
            "entity": {
                "sensor": {
                    "pm25_aqi_24h_average": {
                        "name": "PM2.5 AQI 24 hour average"
                    },
                    "pm25_indoor": {
                        "name": "PM2.5 indoor"
                    },
                    "pm25_indoor_24h_average": {
                        "name": "PM2.5 indoor 24 hour average"
                    },
                    "pm25_indoor_aqi": {
                        "name": "PM2.5 indoor AQI"
                    },
                    "pm25_indoor_aqi_24h_average": {
                        "name": "PM2.5 indoor AQI"
                    },
                    "relative_pressure": {
                        "name": "Relative pressure"
                    },
                    "soil_humidity_10": {
                        "name": "Soil humidity 10"
                    },
                    "soil_humidity_1": {
                        "name": "Soil humidity 1"
                    },
                    "soil_humidity_2": {
                        "name": "Soil humidity 2"
                    },
                    "soil_humidity_3": {
                        "name": "Soil humidity 3"
                    },
                    "soil_humidity_4": {
                        "name": "Soil humidity 4"
                    },
                    "soil_humidity_5": {
                        "name": "Soil humidity 5"
                    },
                    "soil_humidity_6": {
                        "name": "Soil humidity 6"
                    },
                    "soil_humidity_7": {
                        "name": "Soil humidity 7"
                    },
                    "soil_humidity_8": {
                        "name": "Soil humidity 8"
                    },
                    "soil_humidity_9": {
                        "name": "Soil humidity 9"
                    },
                    "soil_temperature_10": {
                        "name": "Soil temperature 10"
                    },
                    "soil_temperature_1": {
                        "name": "Soil temperature 1"
                    },
                    "soil_temperature_2": {
                        "name": "Soil temperature 2"
                    },
                    "soil_temperature_3": {
                        "name": "Soil temperature 3"
                    },
                    "soil_temperature_4": {
                        "name": "Soil temperature 4"
                    },
                    "soil_temperature_5": {
                        "name": "Soil temperature 5"
                    },
                    "soil_temperature_6": {
                        "name": "Soil temperature 6"
                    },
                    "soil_temperature_7": {
                        "name": "Soil temperature 7"
                    },
                    "soil_temperature_8": {
                        "name": "Soil temperature 8"
                    },
                    "soil_temperature_9": {
                        "name": "Soil temperature 9"
                    },
                    "temperature_10": {
                        "name": "Temperature 10"
                    },
                    "temperature_1": {
                        "name": "Temperature 1"
                    },
                    "temperature_2": {
                        "name": "Temperature 2"
                    },
                    "temperature_3": {
                        "name": "Temperature 3"
                    },
                    "temperature_4": {
                        "name": "Temperature 4"
                    },
                    "temperature_5": {
                        "name": "Temperature 5"
                    },
                    "temperature_6": {
                        "name": "Temperature 6"
                    },
                    "temperature_7": {
                        "name": "Temperature 7"
                    },
                    "temperature_8": {
                        "name": "Temperature 8"
                    },
                    "temperature_9": {
                        "name": "Temperature 9"
                    },
                    "uv_index": {
                        "name": "UV index"
                    },
                    "weekly_rain": {
                        "name": "Weekly rain"
                    },
                    "wind_average_10m": {
                        "name": "Wind average 10 minutes"
                    },
                    "wind_average_2m": {
                        "name": "Wind average 2 minutes"
                    },
                    "wind_direction": {
                        "name": "Wind direction"
                    },
                    "wind_direction_average_10m": {
                        "name": "Wind direction average 10 minutes"
                    },
                    "wind_direction_average_2m": {
                        "name": "Wind direction average 2 minutes"
                    },
                    "wind_gust": {
                        "name": "Wind gust"
                    },
                    "wind_gust_direction": {
                        "name": "Wind gust direction"
                    },
                    "yearly_rain": {
                        "name": "Yearly rain"
                    }
                }
            }
        },
        "amcrest": {
            "services": {
                "set_color_bw": {
                    "description": "Sets camera colour mode.",
                    "fields": {
                        "color_bw": {
                            "description": "Colour mode.",
                            "name": "Colour"
                        }
                    },
                    "name": "Set colour"
                }
            }
        },
        "androidtv_remote": {
            "options": {
                "step": {
                    "init": {
                        "data": {
                            "enable_ime": "Enable IME. Needed for getting the current app. Disable for devices that show 'Use keyboard on mobile device screen' instead of the on screen keyboard."
                        }
                    }
                }
            }
        },
        "asuswrt": {
            "entity": {
                "sensor": {
                    "24ghz_temperature": {
                        "name": "2.4GHz Temperature"
                    },
                    "5ghz_temperature": {
                        "name": "5GHz Temperature"
                    },
                    "cpu_temperature": {
                        "name": "CPU Temperature"
                    },
                    "devices_connected": {
                        "name": "Devices connected"
                    },
                    "download": {
                        "name": "Download"
                    },
                    "download_speed": {
                        "name": "Download speed"
                    },
                    "load_avg_15m": {
                        "name": "Average load (15m)"
                    },
                    "load_avg_1m": {
                        "name": "Average load (1m)"
                    },
                    "load_avg_5m": {
                        "name": "Average load (5m)"
                    },
                    "upload": {
                        "name": "Upload"
                    },
                    "upload_speed": {
                        "name": "Upload speed"
                    }
                }
            }
        },
        "aurora_abb_powerone": {
            "config": {
                "step": {
                    "user": {
                        "data": {
                            "address": "Inverter Address"
                        }
                    }
                }
            }
        },
        "balboa": {
            "options": {
                "step": {
                    "init": {
                        "data": {
                            "sync_time": "Keep your Balboa spa's time synchronised with Home Assistant"
                        }
                    }
                }
            }
        },
        "binary_sensor": {
            "entity_component": {
                "power": {
                    "name": "Power"
                }
            }
        },
        "braviatv": {
            "config": {
                "step": {
                    "authorize": {
                        "description": "Make sure that «Control remotely» is enabled on your TV, go to: \nSettings -> Network -> Remote device settings -> Control remotely. \n\nThere are two authorisation methods: PIN code or PSK (Pre-Shared Key). \nAuthorisation via PSK is recommended as more stable.",
                        "title": "Authorise Sony Bravia TV"
                    }
                }
            }
        },
        "brother": {
            "entity": {
                "sensor": {
                    "color_pages": {
                        "name": "Colour pages"
                    }
                }
            }
        },
        "color_extractor": {
            "services": {
                "turn_on": {
                    "description": "Sets the light RGB to the predominant colour found in the image provided by URL or file path.",
                    "fields": {
                        "color_extract_path": {
                            "description": "The full system path to the image we want to extract RGB values from. Must be allowed in allowlist_external_dirs."
                        },
                        "color_extract_url": {
                            "description": "The URL of the image we want to extract RGB values from. Must be allowed in allowlist_external_urls."
                        }
                    }
                }
            }
        },
        "conversation": {
            "services": {
                "process": {
                    "name": "Process"
                }
            }
        },
        "cover": {
            "services": {
                "close_cover": {
                    "description": "Closes a cover."
                },
                "close_cover_tilt": {
                    "description": "Tilts a cover to close.",
                    "name": "Close tilt"
                },
                "open_cover": {
                    "description": "Opens a cover."
                },
                "open_cover_tilt": {
                    "description": "Tilts a cover open.",
                    "name": "Open tilt"
                },
                "set_cover_position": {
                    "description": "Moves a cover to a specific position.",
                    "fields": {
                        "position": {
                            "description": "Target position.",
                            "name": "Position"
                        }
                    },
                    "name": "Set position"
                },
                "set_cover_tilt_position": {
                    "description": "Moves a cover tilt to a specific position.",
                    "fields": {
                        "tilt_position": {
                            "description": "Target tilt position.",
                            "name": "Tilt position"
                        }
                    },
                    "name": "Set tilt position"
                },
                "stop_cover": {
                    "name": "Stop"
                },
                "stop_cover_tilt": {
                    "description": "Stops a tilting cover movement.",
                    "name": "Stop tilt"
                },
                "toggle": {
                    "description": "Toggles a cover open\/closed.",
                    "name": "Toggle"
                },
                "toggle_cover_tilt": {
                    "description": "Toggles a cover tilt open\/closed.",
                    "name": "Toggle tilt"
                }
            }
        },
        "daikin": {
            "entity": {
                "sensor": {
                    "compressor_energy_consumption": {
                        "name": "Compressor energy consumption"
                    },
                    "compressor_estimated_power_consumption": {
                        "name": "Compressor estimated power consumption"
                    },
                    "compressor_frequency": {
                        "name": "Compressor frequency"
                    },
                    "cool_energy_consumption": {
                        "name": "Cool energy consumption"
                    },
                    "energy_consumption": {
                        "name": "Energy consumption"
                    },
                    "heat_energy_consumption": {
                        "name": "Heat energy consumption"
                    },
                    "inside_temperature": {
                        "name": "Inside temperature"
                    },
                    "outside_temperature": {
                        "name": "Outside temperature"
                    },
                    "target_humidity": {
                        "name": "Target humidity"
                    }
                }
            }
        },
        "date": {
            "services": {
                "set_value": {
                    "description": "Sets the date.",
                    "fields": {
                        "date": {
                            "description": "The date to set.",
                            "name": "Date"
                        }
                    },
                    "name": "Set date"
                }
            }
        },
        "datetime": {
            "services": {
                "set_value": {
                    "description": "Sets the date\/time for a datetime entity.",
                    "fields": {
                        "datetime": {
                            "description": "The date\/time to set. The time zone of the Home Assistant instance is assumed.",
                            "name": "Date & Time"
                        }
                    },
                    "name": "Set date\/time"
                }
            }
        },
        "demo": {
            "entity": {
                "event": {
                    "push": {
                        "state_attributes": {
                            "event_type": {
                                "state": {
                                    "pressed": "Pressed"
                                }
                            }
                        }
                    }
                }
            },
            "services": {
                "randomize_device_tracker_data": {
                    "name": "Randomise device tracker data"
                }
            }
        },
        "denonavr": {
            "services": {
                "set_dynamic_eq": {
                    "fields": {
                        "dynamic_eq": {
                            "name": "Dynamic equaliser"
                        }
                    },
                    "name": "Set dynamic equaliser"
                }
            }
        },
        "ecobee": {
            "config": {
                "step": {
                    "authorize": {
                        "description": "Please authorise this app at https:\/\/www.ecobee.com\/consumerportal\/index.html with PIN code:\n\n{pin}\n\nThen, press Submit.",
                        "title": "Authorise app on ecobee.com"
                    }
                }
            }
        },
        "electric_kiwi": {
            "config": {
                "abort": {
                    "already_configured": "Account is already configured",
                    "authorize_url_timeout": "Timeout generating authorise URL."
                },
                "step": {
                    "reauth_confirm": {
                        "description": "The Electric Kiwi integration needs to re-authenticate your account"
                    }
                }
            },
            "entity": {
                "sensor": {
                    "hopfreepowerend": {
                        "name": "Hour of free power end"
                    },
                    "hopfreepowerstart": {
                        "name": "Hour of free power start"
                    }
                }
            }
        },
        "elkm1": {
            "services": {
                "alarm_bypass": {
                    "fields": {
                        "code": {
                            "description": "An code to authorise the bypass of the alarm control panel."
                        }
                    }
                },
                "alarm_clear_bypass": {
                    "fields": {
                        "code": {
                            "description": "An code to authorise the bypass clear of the alarm control panel."
                        }
                    }
                },
                "sensor_zone_bypass": {
                    "fields": {
                        "code": {
                            "description": "An code to authorise the bypass of the zone."
                        }
                    }
                }
            }
        },
        "enphase_envoy": {
            "entity": {
                "binary_sensor": {
                    "grid_status": {
                        "name": "Grid status"
                    }
                },
                "sensor": {
                    "current_power_consumption": {
                        "name": "Current power consumption"
                    },
                    "current_power_production": {
                        "name": "Current power production"
                    },
                    "daily_consumption": {
                        "name": "Energy consumption today"
                    },
                    "daily_production": {
                        "name": "Energy production today"
                    },
                    "last_reported": {
                        "name": "Last reported"
                    },
                    "lifetime_consumption": {
                        "name": "Lifetime energy consumption"
                    },
                    "lifetime_production": {
                        "name": "Lifetime energy production"
                    },
                    "seven_days_consumption": {
                        "name": "Energy consumption last seven days"
                    },
                    "seven_days_production": {
                        "name": "Energy production last seven days"
                    }
                }
            }
        },
        "epson": {
            "services": {
                "select_cmode": {
                    "description": "Selects colour mode of Epson projector.",
                    "fields": {
                        "cmode": {
                            "name": "Colour mode"
                        }
                    },
                    "name": "Select colour mode"
                }
            }
        },
        "esphome": {
            "entity": {
                "climate": {
                    "climate": {
                        "state_attributes": {
                            "fan_mode": {
                                "state": {
                                    "quiet": "Quiet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "event": {
            "entity_component": {
                "_": {
                    "state_attributes": {
                        "event_type": {
                            "name": "Event type"
                        },
                        "event_types": {
                            "name": "Event types"
                        }
                    }
                },
                "button": {
                    "name": "Button"
                },
                "doorbell": {
                    "name": "Doorbell"
                },
                "motion": {
                    "name": "Motion"
                }
            },
            "title": "Event"
        },
        "ezviz": {
            "entity": {
                "binary_sensor": {
                    "alarm_schedules_enabled": {
                        "name": "Alarm schedules enabled"
                    },
                    "encrypted": {
                        "name": "Encryption"
                    }
                },
                "button": {
                    "ptz_down": {
                        "name": "PTZ down"
                    },
                    "ptz_left": {
                        "name": "PTZ left"
                    },
                    "ptz_right": {
                        "name": "PTZ right"
                    },
                    "ptz_up": {
                        "name": "PTZ up"
                    }
                },
                "image": {
                    "last_motion_image": {
                        "name": "Last motion image"
                    }
                },
                "select": {
                    "alarm_sound_mode": {
                        "name": "Warning sound",
                        "state": {
                            "intensive": "Intensive",
                            "silent": "Silent",
                            "soft": "Soft"
                        }
                    }
                },
                "sensor": {
                    "alarm_sound_mod": {
                        "name": "Alarm sound level"
                    },
                    "last_alarm_pic": {
                        "name": "Last alarm picture URL"
                    },
                    "last_alarm_time": {
                        "name": "Last alarm time"
                    },
                    "last_alarm_type_code": {
                        "name": "Last alarm type code"
                    },
                    "last_alarm_type_name": {
                        "name": "Last alarm type name"
                    },
                    "local_ip": {
                        "name": "Local IP"
                    },
                    "pir_status": {
                        "name": "PIR status"
                    },
                    "seconds_last_trigger": {
                        "name": "Seconds since last trigger"
                    },
                    "supported_channels": {
                        "name": "Supported channels"
                    },
                    "wan_ip": {
                        "name": "WAN IP"
                    }
                },
                "switch": {
                    "all_day_video_recording": {
                        "name": "All day video recording"
                    },
                    "audio": {
                        "name": "Audio"
                    },
                    "auto_sleep": {
                        "name": "Auto sleep"
                    },
                    "flicker_light_on_movement": {
                        "name": "Flicker light on movement"
                    },
                    "follow_movement": {
                        "name": "Follow movement"
                    },
                    "infrared_light": {
                        "name": "Infrared light"
                    },
                    "motion_tracking": {
                        "name": "Motion tracking"
                    },
                    "pir_motion_activated_light": {
                        "name": "PIR motion activated light"
                    },
                    "privacy": {
                        "name": "Privacy"
                    },
                    "sleep": {
                        "name": "Sleep"
                    },
                    "status_light": {
                        "name": "Status light"
                    },
                    "tamper_alarm": {
                        "name": "Tamper alarm"
                    }
                }
            },
            "issues": {
                "service_deprecation_alarm_sound_level": {
                    "fix_flow": {
                        "step": {
                            "confirm": {
                                "description": "Ezviz Alarm sound level service is deprecated and will be removed.\nTo set the Alarm sound level, you can instead use the `select.select_option` service targetting the Warning sound entity.\n\nPlease remove this service from your automations and scripts and select **submit** to close this issue.",
                                "title": "Ezviz Alarm sound level service is being removed"
                            }
                        }
                    },
                    "title": "Ezviz Alarm sound level service is being removed"
                },
                "service_depreciation_ptz": {
                    "fix_flow": {
                        "step": {
                            "confirm": {
                                "description": "EZVIZ PTZ service is deprecated and will be removed.\nTo move the camera, you can instead use the `button.press` service targetting the PTZ* entities.\n\nPlease remove the use of this service from your automations and scripts and select **submit** to close this issue.",
                                "title": "EZVIZ PTZ service is being removed"
                            }
                        }
                    },
                    "title": "EZVIZ PTZ service is being removed"
                }
            }
        },
        "fan": {
            "services": {
                "oscillate": {
                    "name": "Oscillate"
                },
                "set_direction": {
                    "description": "Sets the fan rotation direction.",
                    "fields": {
                        "direction": {
                            "description": "Direction to rotate.",
                            "name": "Direction"
                        }
                    },
                    "name": "Set direction"
                },
                "set_percentage": {
                    "description": "Sets the fan speed.",
                    "fields": {
                        "percentage": {
                            "description": "Speed of the fan.",
                            "name": "Percentage"
                        }
                    },
                    "name": "Set speed"
                },
                "set_preset_mode": {
                    "description": "Sets preset mode.",
                    "fields": {
                        "preset_mode": {
                            "description": "Preset mode.",
                            "name": "Preset mode"
                        }
                    },
                    "name": "Set preset mode"
                },
                "toggle": {
                    "description": "Toggles the fan on\/off.",
                    "name": "Toggle"
                },
                "turn_off": {
                    "description": "Turns fan off."
                },
                "turn_on": {
                    "description": "Turns fan on.",
                    "fields": {
                        "percentage": {
                            "description": "Speed of the fan.",
                            "name": "Percentage"
                        },
                        "preset_mode": {
                            "description": "Preset mode.",
                            "name": "Preset mode"
                        }
                    }
                }
            }
        },
        "flux_led": {
            "options": {
                "step": {
                    "init": {
                        "data": {
                            "custom_effect_colors": "Custom Effect: List of 1 to 16 [R,G,B] colours. Example: [255,0,255],[60,128,0]",
                            "custom_effect_speed_pct": "Custom Effect: Speed in percents for the effect that switch colours.",
                            "custom_effect_transition": "Custom Effect: Type of transition between the colours."
                        }
                    }
                }
            },
            "services": {
                "set_custom_effect": {
                    "fields": {
                        "colors": {
                            "description": "List of colours for the custom effect (RGB). (Max 16 Colours).",
                            "name": "Colours"
                        }
                    }
                },
                "set_music_mode": {
                    "fields": {
                        "background_color": {
                            "description": "The background RGB colour (Addressable models only).",
                            "name": "Background colour"
                        },
                        "foreground_color": {
                            "description": "The foreground RGB colour.",
                            "name": "Foreground colour"
                        }
                    }
                },
                "set_zones": {
                    "fields": {
                        "colors": {
                            "description": "List of colours for each zone (RGB). The length of each zone is the number of pixels per segment divided by the number of colours. (Max 2048 Colours).",
                            "name": "Colours"
                        }
                    }
                }
            }
        },
        "forecast_solar": {
            "config": {
                "step": {
                    "user": {
                        "data": {
                            "modules_power": "Total Watt peak power of your solar modules"
                        }
                    }
                }
            },
            "entity": {
                "sensor": {
                    "energy_current_hour": {
                        "name": "Estimated energy production - this hour"
                    },
                    "energy_next_hour": {
                        "name": "Estimated energy production - next hour"
                    },
                    "energy_production_today": {
                        "name": "Estimated energy production - today"
                    },
                    "energy_production_today_remaining": {
                        "name": "Estimated energy production - remaining today"
                    },
                    "energy_production_tomorrow": {
                        "name": "Estimated energy production - tomorrow"
                    },
                    "power_highest_peak_time_today": {
                        "name": "Highest power peak time - today"
                    },
                    "power_highest_peak_time_tomorrow": {
                        "name": "Highest power peak time - tomorrow"
                    },
                    "power_production_next_12hours": {
                        "name": "Estimated power production - next 12 hours"
                    },
                    "power_production_next_24hours": {
                        "name": "Estimated power production - next 24 hours"
                    },
                    "power_production_next_hour": {
                        "name": "Estimated power production - next hour"
                    },
                    "power_production_now": {
                        "name": "Estimated power production - now"
                    }
                }
            }
        },
        "fronius": {
            "entity": {
                "sensor": {
                    "led_color": {
                        "name": "LED colour"
                    }
                }
            }
        },
        "frontend": {
            "selector": {
                "mode": {
                    "options": {
                        "dark": "Dark",
                        "light": "Light"
                    }
                }
            },
            "services": {
                "reload_themes": {
                    "description": "Reloads themes from the YAML-configuration.",
                    "name": "Reload themes"
                },
                "set_theme": {
                    "description": "Sets the default theme Home Assistant uses. Can be overridden by a user.",
                    "fields": {
                        "mode": {
                            "description": "Theme mode.",
                            "name": "Mode"
                        },
                        "name": {
                            "description": "Name of a theme.",
                            "name": "Theme"
                        }
                    },
                    "name": "Set the default theme"
                }
            }
        },
        "gardena_bluetooth": {
            "config": {
                "error": {
                    "cannot_connect": "Failed to connect: {error}"
                }
            },
            "entity": {
                "binary_sensor": {
                    "valve_connected_state": {
                        "name": "Valve connection"
                    }
                },
                "button": {
                    "factory_reset": {
                        "name": "Factory reset"
                    }
                },
                "number": {
                    "manual_watering_time": {
                        "name": "Manual watering time"
                    },
                    "rain_pause": {
                        "name": "Rain pause"
                    },
                    "remaining_open_set": {
                        "name": "Open for"
                    },
                    "remaining_open_time": {
                        "name": "Remaining open time"
                    },
                    "season_pause": {
                        "name": "Season pause"
                    }
                },
                "sensor": {
                    "activation_reason": {
                        "name": "Activation reason"
                    },
                    "remaining_open_timestamp": {
                        "name": "Valve closing"
                    }
                }
            }
        },
        "geniushub": {
            "services": {
                "set_switch_override": {
                    "description": "Overrides switch for a given duration.",
                    "fields": {
                        "duration": {
                            "name": "Duration"
                        }
                    },
                    "name": "Set switch override"
                },
                "set_zone_mode": {
                    "description": "Set the zone to an operating mode.",
                    "fields": {
                        "entity_id": {
                            "description": "The zone's entity_id.",
                            "name": "Entity"
                        },
                        "mode": {
                            "description": "One of: off, timer or footprint."
                        }
                    }
                }
            }
        },
        "geocaching": {
            "entity": {
                "sensor": {
                    "awarded_favorite_points": {
                        "name": "Awarded favourite points"
                    },
                    "favorite_points": {
                        "name": "Favourite points"
                    }
                }
            }
        },
        "github": {
            "config": {
                "progress": {
                    "wait_for_device": "1. Open {url} \n2.Paste the following key to authorise the integration: \n```\n{code}\n```\n"
                }
            }
        },
        "goodwe": {
            "entity": {
                "button": {
                    "synchronize_clock": {
                        "name": "Synchronise inverter clock"
                    }
                }
            }
        },
        "google_assistant": {
            "entity": {
                "button": {
                    "sync_devices": {
                        "name": "Synchronise devices"
                    }
                }
            }
        },
        "google_mail": {
            "services": {
                "set_vacation": {
                    "fields": {
                        "end": {
                            "name": "End"
                        },
                        "message": {
                            "description": "Body of the email.",
                            "name": "Message"
                        },
                        "plain_text": {
                            "description": "Choose to send message in plain text or HTML.",
                            "name": "Plain text"
                        },
                        "restrict_contacts": {
                            "description": "Restrict automatic reply to contacts.",
                            "name": "Restrict to contacts"
                        },
                        "restrict_domain": {
                            "description": "Restrict automatic reply to domain. This only affects GSuite accounts.",
                            "name": "Restrict to domain"
                        },
                        "start": {
                            "description": "First day of the holiday.",
                            "name": "Start"
                        },
                        "title": {
                            "description": "The subject for the email.",
                            "name": "Title"
                        }
                    },
                    "name": "Set holiday"
                }
            }
        },
        "google_sheets": {
            "services": {
                "append_sheet": {
                    "description": "Appends data to a worksheet in Google Sheets.",
                    "fields": {
                        "config_entry": {
                            "description": "The sheet to add data to.",
                            "name": "Sheet"
                        },
                        "data": {
                            "description": "Data to be appended to the worksheet. This puts the values on a new row underneath the matching column (key). Any new key is placed on the top of a new column.",
                            "name": "Data"
                        },
                        "worksheet": {
                            "description": "Name of the worksheet. Defaults to the first one in the document.",
                            "name": "Worksheet"
                        }
                    },
                    "name": "Append to sheet"
                }
            }
        },
        "group": {
            "services": {
                "reload": {
                    "description": "Reloads group configuration, entities, and notify services from YAML-configuration.",
                    "name": "Reload"
                },
                "remove": {
                    "description": "Removes a group.",
                    "fields": {
                        "object_id": {
                            "description": "Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id].",
                            "name": "Object ID"
                        }
                    },
                    "name": "Remove"
                },
                "set": {
                    "description": "Creates\/Updates a user group.",
                    "fields": {
                        "add_entities": {
                            "description": "List of members to be added to the group. Cannot be used in combination with `Entities` or `Remove entities`.",
                            "name": "Add entities"
                        },
                        "all": {
                            "description": "Enable this option if the group should only be used when all entities are in state `on`.",
                            "name": "All"
                        },
                        "entities": {
                            "description": "List of all members in the group. Cannot be used in combination with `Add entities` or `Remove entities`.",
                            "name": "Entities"
                        },
                        "icon": {
                            "description": "Name of the icon for the group.",
                            "name": "Icon"
                        },
                        "name": {
                            "description": "Name of the group."
                        },
                        "object_id": {
                            "description": "Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id].",
                            "name": "Object ID"
                        },
                        "remove_entities": {
                            "description": "List of members to be removed from a group. Cannot be used in combination with `Entities` or `Add entities`.",
                            "name": "Remove entities"
                        }
                    },
                    "name": "Set"
                }
            }
        },
        "guardian": {
            "services": {
                "pair_sensor": {
                    "description": "Adds a new paired sensor to the valve controller.",
                    "fields": {
                        "device_id": {
                            "description": "The valve controller to add the sensor to."
                        },
                        "uid": {
                            "description": "The UID of the paired sensor.",
                            "name": "UID"
                        }
                    },
                    "name": "Pair sensor"
                },
                "unpair_sensor": {
                    "description": "Removes a paired sensor from the valve controller.",
                    "fields": {
                        "device_id": {
                            "description": "The valve controller to remove the sensor from."
                        },
                        "uid": {
                            "description": "The UID of the paired sensor.",
                            "name": "UID"
                        }
                    },
                    "name": "Unpair sensor"
                },
                "upgrade_firmware": {
                    "description": "Upgrades the device firmware.",
                    "fields": {
                        "device_id": {
                            "description": "The valve controller whose firmware should be upgraded."
                        },
                        "filename": {
                            "description": "The firmware filename.",
                            "name": "Filename"
                        },
                        "port": {
                            "description": "The port on which the firmware file is served."
                        },
                        "url": {
                            "description": "The URL of the server hosting the firmware file."
                        }
                    },
                    "name": "Upgrade firmware"
                }
            }
        },
        "habitica": {
            "services": {
                "api_call": {
                    "description": "Calls Habitica API.",
                    "fields": {
                        "args": {
                            "description": "Any additional JSON or URL parameter arguments. See apidoc mentioned for path. Example uses same API endpoint.",
                            "name": "Args"
                        },
                        "name": {
                            "description": "Habitica's username to call for."
                        },
                        "path": {
                            "description": "Items from API URL in form of an array with method attached at the end. Consult https:\/\/habitica.com\/apidoc\/. Example uses https:\/\/habitica.com\/apidoc\/#api-Task-CreateUserTasks."
                        }
                    },
                    "name": "API name"
                }
            }
        },
        "harmony": {
            "services": {
                "change_channel": {
                    "description": "Sends change channel command to the Harmony HUB.",
                    "fields": {
                        "channel": {
                            "description": "Channel number to change to.",
                            "name": "Channel"
                        }
                    },
                    "name": "Change channel"
                },
                "sync": {
                    "description": "Syncs the remote's configuration.",
                    "name": "Sync"
                }
            }
        },
        "hassio": {
            "services": {
                "addon_restart": {
                    "description": "Restarts an add-on.",
                    "fields": {
                        "addon": {
                            "description": "The add-on slug.",
                            "name": "Add-on"
                        }
                    },
                    "name": "Restart add-on."
                },
                "addon_start": {
                    "description": "Starts an add-on.",
                    "fields": {
                        "addon": {
                            "description": "The add-on slug.",
                            "name": "Add-on"
                        }
                    },
                    "name": "Start add-on"
                },
                "addon_stdin": {
                    "description": "Writes data to add-on stdin.",
                    "fields": {
                        "addon": {
                            "description": "The add-on slug.",
                            "name": "Add-on"
                        }
                    },
                    "name": "Write data to add-on stdin."
                },
                "addon_stop": {
                    "description": "Stops an add-on.",
                    "fields": {
                        "addon": {
                            "description": "The add-on slug.",
                            "name": "Add-on"
                        }
                    },
                    "name": "Stop add-on."
                },
                "addon_update": {
                    "description": "Updates an add-on. This service should be used with caution since add-on updates can contain breaking changes. It is highly recommended that you review release notes\/change logs before updating an add-on.",
                    "fields": {
                        "addon": {
                            "description": "The add-on slug.",
                            "name": "Add-on"
                        }
                    },
                    "name": "Update add-on."
                },
                "backup_full": {
                    "description": "Creates a full backup.",
                    "fields": {
                        "compressed": {
                            "description": "Compresses the backup files.",
                            "name": "Compressed"
                        },
                        "location": {
                            "description": "Name of a backup network storage to host backups."
                        },
                        "name": {
                            "description": "Optional (default = current date and time)."
                        }
                    }
                },
                "restore_partial": {
                    "fields": {
                        "homeassistant": {
                            "description": "Restores Home Assistant."
                        }
                    },
                    "name": "Restore from partial backup."
                }
            }
        },
        "hdmi_cec": {
            "services": {
                "power_on": {
                    "description": "Power on all devices which supports it.",
                    "name": "Power on"
                },
                "select_device": {
                    "description": "Select HDMI device."
                }
            }
        },
        "heos": {
            "services": {
                "sign_in": {
                    "fields": {
                        "username": {
                            "description": "The username or email of the HEOS account."
                        }
                    },
                    "name": "Sign in"
                },
                "sign_out": {
                    "description": "Signs the controller out of the HEOS account.",
                    "name": "Sign out"
                }
            }
        },
        "hive": {
            "services": {
                "boost_heating": {
                    "description": "To be deprecated please use boost_heating_on.",
                    "fields": {
                        "temperature": {
                            "description": "Set the target temperature for the boost period.",
                            "name": "Temperature"
                        },
                        "time_period": {
                            "description": "Set the time period for the boost.",
                            "name": "Time period"
                        }
                    },
                    "name": "Boost heating (to be deprecated)"
                },
                "boost_heating_off": {
                    "description": "Sets the boost mode OFF.",
                    "fields": {
                        "entity_id": {
                            "description": "Select entity_id to turn boost off.",
                            "name": "Entity ID"
                        }
                    },
                    "name": "Boost heating off"
                },
                "boost_heating_on": {
                    "description": "Sets the boost mode ON defining the period of time and the desired target temperature for the boost.",
                    "fields": {
                        "temperature": {
                            "description": "Set the target temperature for the boost period.",
                            "name": "Temperature"
                        },
                        "time_period": {
                            "description": "Set the time period for the boost.",
                            "name": "Time Period"
                        }
                    },
                    "name": "Boost heating on"
                },
                "boost_hot_water": {
                    "description": "Sets the boost mode ON or OFF defining the period of time for the boost.",
                    "fields": {
                        "entity_id": {
                            "description": "Select entity_id to boost.",
                            "name": "Entity ID"
                        },
                        "on_off": {
                            "description": "Set the boost function on or off."
                        },
                        "time_period": {
                            "description": "Set the time period for the boost.",
                            "name": "Time period"
                        }
                    },
                    "name": "Boost hotwater"
                }
            }
        },
        "home_connect": {
            "services": {
                "change_setting": {
                    "description": "Changes a setting."
                },
                "set_option_active": {
                    "fields": {
                        "key": {
                            "description": "Key of the option.",
                            "name": "Key"
                        },
                        "value": {
                            "description": "Value of the option.",
                            "name": "Value"
                        }
                    },
                    "name": "Set active programme option"
                },
                "set_option_selected": {
                    "description": "Sets an option for the selected programme.",
                    "fields": {
                        "device_id": {
                            "description": "ID of the device.",
                            "name": "Device ID"
                        },
                        "key": {
                            "description": "Key of the option.",
                            "name": "Key"
                        },
                        "value": {
                            "description": "Value of the option.",
                            "name": "Value"
                        }
                    },
                    "name": "Set selected programme option"
                },
                "start_program": {
                    "description": "Selects a programme and starts it.",
                    "fields": {
                        "device_id": {
                            "description": "ID of the device.",
                            "name": "Device ID"
                        },
                        "key": {
                            "description": "Key of the option.",
                            "name": "Option key"
                        },
                        "program": {
                            "description": "Programme to select.",
                            "name": "Programme"
                        },
                        "unit": {
                            "description": "Unit for the option.",
                            "name": "Option unit"
                        },
                        "value": {
                            "description": "Value of the option.",
                            "name": "Option value"
                        }
                    },
                    "name": "Start programme"
                }
            }
        },
        "home_plus_control": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL."
                }
            }
        },
        "homeassistant": {
            "issues": {
                "storage_corruption": {
                    "fix_flow": {
                        "step": {
                            "confirm": {
                                "description": "The `{storage_key}` storage could not be parsed and has been renamed to `{corrupt_path}` to allow Home Assistant to continue.\n\nA default `{storage_key}` may have been created automatically.\n\nIf you made manual edits to the storage file, fix any syntax errors in `{corrupt_path}`, restore the file to the original path `{original_path}`, and restart Home Assistant. Otherwise, restore the system from a backup.\n\nClick SUBMIT below to confirm you have repaired the file or restored from a backup.\n\nThe exact error was: {error}",
                                "title": "Storage corruption detected for `{storage_key}`"
                            }
                        }
                    },
                    "title": "Storage corruption detected for `{storage_key}`"
                }
            },
            "services": {
                "turn_on": {
                    "description": "Generic service to turn devices on under any domain.",
                    "name": "Generic turn on"
                },
                "update_entity": {
                    "description": "Forces one or more entities to update its data.",
                    "name": "Update entity"
                }
            }
        },
        "homeassistant_hardware": {
            "silabs_multiprotocol_hardware": {
                "options": {
                    "step": {
                        "change_channel": {
                            "description": "Start a channel change for your Zigbee and Thread networks.\n\nNote: this is an advanced operation and can leave your Thread and Zigbee networks inoperable if the new channel is congested. Depending on existing network conditions, many of your devices may not migrate to the new channel and will require re-joining before they start working again. Use with caution.\n\nOnce you selected **Submit**, the channel change starts quietly in the background and will finish after a few minutes."
                        }
                    }
                }
            }
        },
        "homeassistant_sky_connect": {
            "options": {
                "step": {
                    "change_channel": {
                        "description": "Start a channel change for your Zigbee and Thread networks.\n\nNote: this is an advanced operation and can leave your Thread and Zigbee networks inoperable if the new channel is congested. Depending on existing network conditions, many of your devices may not migrate to the new channel and will require re-joining before they start working again. Use with caution.\n\nOnce you selected **Submit**, the channel change starts quietly in the background and will finish after a few minutes."
                    }
                }
            }
        },
        "homeassistant_yellow": {
            "options": {
                "step": {
                    "change_channel": {
                        "description": "Start a channel change for your Zigbee and Thread networks.\n\nNote: this is an advanced operation and can leave your Thread and Zigbee networks inoperable if the new channel is congested. Depending on existing network conditions, many of your devices may not migrate to the new channel and will require re-joining before they start working again. Use with caution.\n\nOnce you selected **Submit**, the channel change starts quietly in the background and will finish after a few minutes."
                    }
                }
            }
        },
        "homekit": {
            "config": {
                "step": {
                    "user": {
                        "description": "Choose the domains to be included. All supported entities in the domain will be included except for categorised entities. A separate HomeKit instance in accessory mode will be created for each tv media player, activity based remote, lock, and camera."
                    }
                }
            },
            "options": {
                "step": {
                    "exclude": {
                        "description": "All “{domains}” entities will be included except for the excluded entities and categorised entities."
                    },
                    "include": {
                        "description": "Select entities from each domain in “{domains}”. The include will cover the entire domain if you do not select any entities for a given domain."
                    }
                }
            },
            "services": {
                "reload": {
                    "description": "Reloads homekit and re-process YAML-configuration.",
                    "name": "Reload"
                },
                "reset_accessory": {
                    "description": "Resets a HomeKit accessory.",
                    "name": "Reset accessory"
                },
                "unpair": {
                    "description": "Forcefully removes all pairings from an accessory to allow re-pairing. Use this service if the accessory is no longer responsive, and you want to avoid deleting and re-adding the entry. Room locations, and accessory preferences will be lost."
                }
            }
        },
        "homekit_controller": {
            "entity": {
                "event": {
                    "button": {
                        "state_attributes": {
                            "event_type": {
                                "state": {
                                    "double_press": "Double press",
                                    "long_press": "Long press",
                                    "single_press": "Single press"
                                }
                            }
                        }
                    },
                    "doorbell": {
                        "state_attributes": {
                            "event_type": {
                                "state": {
                                    "double_press": "Double press",
                                    "long_press": "Long press",
                                    "single_press": "Single press"
                                }
                            }
                        }
                    }
                }
            }
        },
        "homematic": {
            "services": {
                "set_device_value": {
                    "fields": {
                        "value_type": {
                            "name": "Value type"
                        }
                    },
                    "name": "Set device value"
                },
                "set_install_mode": {
                    "description": "Set a RPC XML interface into installation mode.",
                    "fields": {
                        "address": {
                            "description": "Address of homematic device or BidCoS-RF to learn.",
                            "name": "Address"
                        },
                        "interface": {
                            "description": "Select the given interface into install mode.",
                            "name": "Interface"
                        },
                        "mode": {
                            "description": "1= Normal mode \/ 2= Remove exists old links."
                        },
                        "time": {
                            "description": "Time to run in install mode.",
                            "name": "Time"
                        }
                    },
                    "name": "Set install mode"
                },
                "set_variable_value": {
                    "description": "Sets the name of a node.",
                    "fields": {
                        "entity_id": {
                            "description": "Name(s) of homematic central to set value.",
                            "name": "Entity"
                        },
                        "name": {
                            "description": "Name of the variable to set."
                        },
                        "value": {
                            "description": "New value.",
                            "name": "Value"
                        }
                    },
                    "name": "Set variable value"
                },
                "virtualkey": {
                    "description": "Presses a virtual key from CCU\/Homegear or simulate keypress.",
                    "fields": {
                        "address": {
                            "description": "Address of homematic device or BidCoS-RF for virtual remote.",
                            "name": "Address"
                        },
                        "channel": {
                            "description": "Channel for calling a keypress.",
                            "name": "Channel"
                        },
                        "interface": {
                            "description": "Set an interface value.",
                            "name": "Interface"
                        },
                        "param": {
                            "description": "Event to send i.e. PRESS_LONG, PRESS_SHORT.",
                            "name": "Param"
                        }
                    },
                    "name": "Virtual key"
                }
            }
        },
        "homematicip_cloud": {
            "services": {
                "dump_hap_config": {
                    "fields": {
                        "anonymize": {
                            "description": "Should the Configuration be anonymised?",
                            "name": "Anonymise"
                        },
                        "config_output_file_prefix": {
                            "name": "Config output file prefix"
                        },
                        "config_output_path": {
                            "description": "(Default is 'Your home-assistant config directory') Path where to store the config.",
                            "name": "Config output path"
                        }
                    },
                    "name": "Dump hap config"
                },
                "reset_energy_counter": {
                    "description": "Resets the energy counter of a measuring entity.",
                    "fields": {
                        "entity_id": {
                            "description": "The ID of the measuring entity. Use 'all' keyword to reset all energy counters.",
                            "name": "Entity"
                        }
                    },
                    "name": "Reset energy counter"
                },
                "set_active_climate_profile": {
                    "description": "Sets the active climate profile index.",
                    "fields": {
                        "climate_profile_index": {
                            "description": "The index of the climate profile.",
                            "name": "Climate profile index"
                        },
                        "entity_id": {
                            "description": "The ID of the climate entity. Use 'all' keyword to switch the profile for all entities.",
                            "name": "Entity"
                        }
                    },
                    "name": "Set active climate profile"
                }
            }
        },
        "html5": {
            "services": {
                "dismiss": {
                    "description": "Dismisses an HTML5 notification.",
                    "fields": {
                        "data": {
                            "description": "Extended information of notification. Supports tag.",
                            "name": "Data"
                        },
                        "target": {
                            "description": "An array of targets.",
                            "name": "Target"
                        }
                    },
                    "name": "Dismiss"
                }
            }
        },
        "huawei_lte": {
            "services": {
                "clear_traffic_statistics": {
                    "description": "Clears traffic statistics.",
                    "fields": {
                        "url": {
                            "description": "URL of router to clear; optional when only one is configured."
                        }
                    },
                    "name": "Clear traffic statistics"
                },
                "reboot": {
                    "description": "Reboots router.",
                    "fields": {
                        "url": {
                            "description": "URL of router to reboot; optional when only one is configured."
                        }
                    },
                    "name": "Reboot"
                },
                "resume_integration": {
                    "description": "Resumes suspended integration.",
                    "fields": {
                        "url": {
                            "description": "URL of router to resume integration for; optional when only one is configured."
                        }
                    }
                }
            }
        },
        "hue": {
            "entity": {
                "event": {
                    "button": {
                        "state_attributes": {
                            "event_type": {
                                "state": {
                                    "double_short_release": "Double press",
                                    "initial_press": "Initial press",
                                    "long_press": "Long press",
                                    "long_release": "Long release",
                                    "repeat": "Repeat",
                                    "short_release": "Short press"
                                }
                            }
                        }
                    },
                    "rotary": {
                        "name": "Rotary",
                        "state_attributes": {
                            "event_type": {
                                "state": {
                                    "clock_wise": "Clockwise",
                                    "counter_clock_wise": "Counter clockwise"
                                }
                            }
                        }
                    }
                }
            }
        },
        "humidifier": {
            "services": {
                "set_humidity": {
                    "description": "Sets the target humidity.",
                    "fields": {
                        "humidity": {
                            "description": "Target humidity.",
                            "name": "Humidity"
                        }
                    },
                    "name": "Set humidity"
                },
                "set_mode": {
                    "description": "Sets the humidifier operation mode.",
                    "fields": {
                        "mode": {
                            "description": "Operation mode. For example, _normal_, _eco_, or _away_. For a list of possible values, refer to the integration documentation.",
                            "name": "Mode"
                        }
                    },
                    "name": "Set mode"
                },
                "toggle": {
                    "description": "Toggles the humidifier on\/off.",
                    "name": "Toggle"
                },
                "turn_off": {
                    "description": "Turns the humidifier off."
                },
                "turn_on": {
                    "description": "Turns the humidifier on."
                }
            }
        },
        "hyperion": {
            "config": {
                "abort": {
                    "auth_required_error": "Failed to determine if authorisation is required"
                },
                "step": {
                    "auth": {
                        "description": "Configure authorisation to your Hyperion Ambilight server"
                    }
                }
            },
            "options": {
                "step": {
                    "init": {
                        "data": {
                            "priority": "Hyperion priority to use for colours and effects"
                        }
                    }
                }
            }
        },
        "icloud": {
            "services": {
                "display_message": {
                    "description": "Displays a message on an Apple device.",
                    "fields": {
                        "account": {
                            "description": "Your iCloud account username (email) or account name.",
                            "name": "Account"
                        },
                        "device_name": {
                            "description": "The name of the Apple device to display the message.",
                            "name": "Device name"
                        },
                        "message": {
                            "description": "The content of your message.",
                            "name": "Message"
                        },
                        "sound": {
                            "description": "To make a sound when displaying the message.",
                            "name": "Sound"
                        }
                    },
                    "name": "Display message"
                },
                "lost_device": {
                    "description": "Makes an Apple device in lost state.",
                    "fields": {
                        "account": {
                            "description": "Your iCloud account username (email) or account name.",
                            "name": "Account"
                        },
                        "device_name": {
                            "description": "The name of the Apple device to set lost.",
                            "name": "Device name"
                        },
                        "message": {
                            "description": "The message to display in lost mode.",
                            "name": "Message"
                        },
                        "number": {
                            "description": "The phone number to call in lost mode (must contain country code).",
                            "name": "Number"
                        }
                    },
                    "name": "Lost device"
                },
                "play_sound": {
                    "description": "Plays sound on an Apple device.",
                    "fields": {
                        "account": {
                            "description": "Your iCloud account username (email) or account name.",
                            "name": "Account"
                        },
                        "device_name": {
                            "description": "The name of the Apple device to play a sound.",
                            "name": "Device name"
                        }
                    },
                    "name": "Play sound"
                },
                "update": {
                    "description": "Updates iCloud devices.",
                    "fields": {
                        "account": {
                            "description": "Your iCloud account username (email) or account name.",
                            "name": "Account"
                        }
                    },
                    "name": "Update"
                }
            }
        },
        "ifttt": {
            "services": {
                "push_alarm_state": {
                    "description": "Updates the alarm state to the specified value.",
                    "fields": {
                        "entity_id": {
                            "description": "Name of the alarm control panel which state has to be updated."
                        }
                    }
                }
            }
        },
        "ihc": {
            "services": {
                "set_runtime_value_bool": {
                    "name": "Set runtime value boolean"
                },
                "set_runtime_value_float": {
                    "description": "Sets a float runtime value on the IHC controller.",
                    "fields": {
                        "value": {
                            "description": "The float value to set.",
                            "name": "Value"
                        }
                    },
                    "name": "Set runtime value float"
                },
                "set_runtime_value_int": {
                    "description": "Sets an integer runtime value on the IHC controller.",
                    "fields": {
                        "controller_id": {
                            "description": "If you have multiple controller, this is the index of your controller\nstarting with 0.\n."
                        },
                        "value": {
                            "description": "The integer value to set.",
                            "name": "Value"
                        }
                    },
                    "name": "Set runtime value integer"
                }
            }
        },
        "imap": {
            "options": {
                "step": {
                    "init": {
                        "data": {
                            "enable_push": "Enable Push-IMAP if the server supports it. Turn off if Push-IMAP updates are unreliable."
                        }
                    }
                }
            }
        },
        "imap_email_content": {
            "issues": {
                "deprecation": {
                    "description": "The IMAP email content integration is deprecated. Your IMAP server configuration was already migrated to the [imap integration](https:\/\/my.home-assistant.io\/redirect\/config_flow_start?domain=imap). To set up a sensor for the IMAP email content, set up a template sensor with the config:\n\n```yaml\n{yaml_example}```\n\nPlease remove the deprecated `imap_email_plaform` sensor configuration from your `configuration.yaml`.\n\nNote that the event filter only filters on the first of the configured allowed senders, customise the filter if needed.\n\nYou can skip this part if you have already set up a template sensor."
                },
                "migration": {
                    "fix_flow": {
                        "step": {
                            "confirm": {
                                "description": "In this step an `imap` config entry will be set up with the following configuration:\n\n```text\nServer\t{server}\nPort\t{port}\nUsername\t{username}\nPassword\t*****\nFolder\t{folder}\n```\n\nSee also: (https:\/\/www.home-assistant.io\/integrations\/imap\/)\n\nFitering configuration on allowed `sender` is part of the template sensor config that can copied and placed in your `configuration.yaml.\n\nNote that the event filter only filters on the first of the configured allowed senders, customise the filter if needed.\n\n```yaml\n{yaml_example}```\nDo not forget to cleanup the your `configuration.yaml` after migration.\n\nSubmit to migrate your IMAP server configuration to an `imap` configuration entry."
                            }
                        }
                    }
                }
            }
        },
        "input_boolean": {
            "services": {
                "reload": {
                    "description": "Reloads helpers from the YAML-configuration.",
                    "name": "Reload"
                },
                "toggle": {
                    "description": "Toggles the helper on\/off.",
                    "name": "Toggle"
                },
                "turn_off": {
                    "description": "Turns off the helper."
                },
                "turn_on": {
                    "description": "Turns on the helper."
                }
            }
        },
        "input_button": {
            "services": {
                "press": {
                    "description": "Mimics the physical button press on the device.",
                    "name": "Press"
                }
            }
        },
        "input_datetime": {
            "services": {
                "reload": {
                    "description": "Reloads helpers from the YAML-configuration.",
                    "name": "Reload"
                },
                "set_datetime": {
                    "description": "Sets the date and\/or time.",
                    "fields": {
                        "date": {
                            "description": "The target date.",
                            "name": "Date"
                        },
                        "datetime": {
                            "description": "The target date & time.",
                            "name": "Date & time"
                        },
                        "time": {
                            "description": "The target time.",
                            "name": "Time"
                        },
                        "timestamp": {
                            "description": "The target date & time, expressed by a UNIX timestamp.",
                            "name": "Timestamp"
                        }
                    },
                    "name": "Set"
                }
            }
        },
        "input_number": {
            "services": {
                "decrement": {
                    "description": "Decrements the current value by 1 step.",
                    "name": "Decrement"
                },
                "increment": {
                    "description": "Increments the value by 1 step.",
                    "name": "Increment"
                },
                "reload": {
                    "description": "Reloads helpers from the YAML-configuration.",
                    "name": "Reload"
                },
                "set_value": {
                    "description": "Sets the value.",
                    "fields": {
                        "value": {
                            "description": "The target value.",
                            "name": "Value"
                        }
                    },
                    "name": "Set"
                }
            }
        },
        "input_select": {
            "services": {
                "reload": {
                    "description": "Reloads helpers from the YAML-configuration.",
                    "name": "Reload"
                },
                "select_first": {
                    "description": "Selects the first option.",
                    "name": "First"
                },
                "select_last": {
                    "description": "Selects the last option.",
                    "name": "Last"
                },
                "select_next": {
                    "description": "Select the next option.",
                    "fields": {
                        "cycle": {
                            "description": "If the option should cycle from the last to the first option on the list.",
                            "name": "Cycle"
                        }
                    },
                    "name": "Next"
                },
                "select_option": {
                    "description": "Selects an option.",
                    "fields": {
                        "option": {
                            "description": "Option to be selected.",
                            "name": "Option"
                        }
                    }
                },
                "select_previous": {
                    "description": "Selects the previous option.",
                    "fields": {
                        "cycle": {
                            "description": "If the option should cycle from the last to the first option on the list.",
                            "name": "Cycle"
                        }
                    },
                    "name": "Previous"
                },
                "set_options": {
                    "description": "Sets the options.",
                    "fields": {
                        "options": {
                            "description": "List of options.",
                            "name": "Options"
                        }
                    },
                    "name": "Set options"
                }
            }
        },
        "input_text": {
            "services": {
                "reload": {
                    "description": "Reloads helpers from the YAML-configuration.",
                    "name": "Reload"
                },
                "set_value": {
                    "description": "Sets the value.",
                    "fields": {
                        "value": {
                            "description": "The target value.",
                            "name": "Value"
                        }
                    },
                    "name": "Set"
                }
            }
        },
        "insteon": {
            "services": {
                "add_all_link": {
                    "description": "Tells the Insteom Modem (IM) start All-Linking mode. Once the IM is in All-Linking mode, press the link button on the device to complete All-Linking.",
                    "fields": {
                        "group": {
                            "description": "All-Link group number.",
                            "name": "Group"
                        },
                        "mode": {
                            "description": "Linking mode controller - IM is controller responder - IM is responder."
                        }
                    },
                    "name": "Add all link"
                },
                "add_default_links": {
                    "description": "Adds the default links between the device and the Insteon Modem (IM).",
                    "fields": {
                        "entity_id": {
                            "name": "Entity"
                        }
                    },
                    "name": "Add default links"
                },
                "delete_all_link": {
                    "description": "Tells the Insteon Modem (IM) to remove an All-Link record from the All-Link Database of the IM and a device. Once the IM is set to delete the link, press the link button on the corresponding device to complete the process.",
                    "fields": {
                        "group": {
                            "description": "All-Link group number.",
                            "name": "Group"
                        }
                    }
                },
                "load_all_link_database": {
                    "fields": {
                        "reload": {
                            "description": "Reloads all records. If true the current records are cleared from memory (does not affect the device) and the records are reloaded. If false the existing records are left in place and only missing records are added. Default is false.",
                            "name": "Reload"
                        }
                    },
                    "name": "Load all link database"
                },
                "print_all_link_database": {
                    "description": "Prints the All-Link Database for a device. Requires that the All-Link Database is loaded into memory.",
                    "fields": {
                        "entity_id": {
                            "description": "Name of the device to print.",
                            "name": "Entity"
                        }
                    },
                    "name": "Print all link database"
                },
                "print_im_all_link_database": {
                    "description": "Prints the All-Link Database for the INSTEON Modem (IM).",
                    "name": "Print IM all link database"
                },
                "scene_off": {
                    "description": "Triggers an INSTEON scene to turn OFF.",
                    "fields": {
                        "group": {
                            "description": "INSTEON group or scene number.",
                            "name": "Group"
                        }
                    },
                    "name": "Scene off"
                },
                "scene_on": {
                    "description": "Triggers an INSTEON scene to turn ON.",
                    "fields": {
                        "group": {
                            "description": "INSTEON group or scene number.",
                            "name": "Group"
                        }
                    },
                    "name": "Scene on"
                },
                "x10_all_lights_off": {
                    "description": "Sends X10 All Lights Off command.",
                    "fields": {
                        "housecode": {
                            "description": "X10 house code.",
                            "name": "Housecode"
                        }
                    },
                    "name": "X10 all lights off"
                },
                "x10_all_lights_on": {
                    "description": "Sends X10 All Lights On command.",
                    "fields": {
                        "housecode": {
                            "description": "X10 house code.",
                            "name": "Housecode"
                        }
                    },
                    "name": "X10 all lights on"
                },
                "x10_all_units_off": {
                    "description": "Tells the Insteom Modem (IM) start All-Linking mode. Once the IM is in All-Linking mode, press the link button on the device to complete All-Linking.",
                    "fields": {
                        "housecode": {
                            "description": "X10 house code.",
                            "name": "Housecode"
                        }
                    },
                    "name": "X10 all units off"
                }
            }
        },
        "intellifire": {
            "entity": {
                "binary_sensor": {
                    "accessory_error": {
                        "name": "Accessory error"
                    },
                    "disabled_error": {
                        "name": "Disabled error"
                    },
                    "ecm_offline_error": {
                        "name": "ECM offline error"
                    },
                    "fan_delay_error": {
                        "name": "Fan delay error"
                    },
                    "fan_error": {
                        "name": "Fan error"
                    },
                    "flame": {
                        "name": "Flame"
                    },
                    "flame_error": {
                        "name": "Flame Error"
                    },
                    "lights_error": {
                        "name": "Lights error"
                    },
                    "maintenance_error": {
                        "name": "Maintenance error"
                    },
                    "offline_error": {
                        "name": "Offline error"
                    },
                    "pilot_flame_error": {
                        "name": "Pilot flame error"
                    },
                    "pilot_light_on": {
                        "name": "Pilot light on"
                    },
                    "soft_lock_out_error": {
                        "name": "Soft lock out error"
                    },
                    "thermostat_on": {
                        "name": "Thermostat on"
                    },
                    "timer_on": {
                        "name": "Timer on"
                    }
                },
                "light": {
                    "lights": {
                        "name": "Lights"
                    }
                },
                "number": {
                    "flame_control": {
                        "name": "Flame control"
                    }
                },
                "sensor": {
                    "connection_quality": {
                        "name": "Connection quality"
                    },
                    "downtime": {
                        "name": "Downtime"
                    },
                    "ecm_latency": {
                        "name": "ECM latency"
                    },
                    "fan_speed": {
                        "name": "Fan Speed"
                    },
                    "flame_height": {
                        "name": "Flame height"
                    },
                    "ipv4_address": {
                        "name": "IP address"
                    },
                    "target_temp": {
                        "name": "Target temperature"
                    },
                    "timer_end_timestamp": {
                        "name": "Timer end"
                    },
                    "uptime": {
                        "name": "Uptime"
                    }
                },
                "switch": {
                    "flame": {
                        "name": "Flame"
                    },
                    "pilot_light": {
                        "name": "Pilot light"
                    }
                }
            }
        },
        "intent_script": {
            "services": {
                "reload": {
                    "description": "Reloads the intent script from the YAML-configuration.",
                    "name": "Reload"
                }
            }
        },
        "iperf3": {
            "services": {
                "speedtest": {
                    "description": "Immediately executes a speed test with iperf3."
                }
            }
        },
        "ipp": {
            "entity": {
                "sensor": {
                    "printer": {
                        "state": {
                            "idle": "Idle",
                            "printing": "Printing",
                            "stopped": "Stopped"
                        }
                    }
                }
            }
        },
        "islamic_prayer_times": {
            "entity": {
                "sensor": {
                    "asr": {
                        "name": "Asr prayer"
                    },
                    "dhuhr": {
                        "name": "Dhuhr prayer"
                    },
                    "fajr": {
                        "name": "Fajr prayer"
                    },
                    "isha": {
                        "name": "Isha prayer"
                    },
                    "maghrib": {
                        "name": "Maghrib prayer"
                    },
                    "midnight": {
                        "name": "Midnight time"
                    },
                    "sunrise": {
                        "name": "Sunrise time"
                    }
                }
            }
        },
        "isy994": {
            "services": {
                "get_zwave_parameter": {
                    "description": "Requests a Z-Wave Device parameter via the ISY. The parameter value will be returned as an entity extra state attribute with the name \"ZW_#\" where \"#\" is the parameter number.",
                    "fields": {
                        "parameter": {
                            "description": "The parameter number to retrieve from the device.",
                            "name": "Parameter"
                        }
                    },
                    "name": "Get Z-Wave Parameter"
                },
                "rename_node": {
                    "description": "Renames a node or group (scene) on the ISY. Note: this will not automatically change the Home Assistant Entity Name or Entity ID to match. The entity name and ID will only be updated after calling `isy994.reload` or restarting Home Assistant, and ONLY IF you have not already customised the name within Home Assistant.",
                    "fields": {
                        "name": {
                            "description": "The new name to use within the ISY.",
                            "name": "New Name"
                        }
                    },
                    "name": "Rename Node on ISY"
                },
                "send_node_command": {
                    "description": "Sends a command to an ISY Device using its Home Assistant entity ID. Valid commands are: beep, brighten, dim, disable, enable, fade_down, fade_stop, fade_up, fast_off, fast_on, and query.",
                    "fields": {
                        "command": {
                            "description": "The command to be sent to the device.",
                            "name": "Command"
                        }
                    },
                    "name": "Send node command"
                },
                "send_program_command": {
                    "description": "Sends a command to control an ISY program or folder. Valid commands are run, run_then, run_else, stop, enable, disable, enable_run_at_startup, and disable_run_at_startup.",
                    "fields": {
                        "address": {
                            "description": "The address of the program to control (use either address or name).",
                            "name": "Address"
                        },
                        "command": {
                            "description": "The ISY Program Command to be sent.",
                            "name": "Command"
                        },
                        "isy": {
                            "description": "If you have more than one ISY connected, provide the name of the ISY to query (as shown on the Device Registry or as the top-first node in the ISY Admin Console).  If you have the same program name or address on multiple ISYs, omitting this will run the command on them all.",
                            "name": "ISY"
                        },
                        "name": {
                            "description": "The name of the program to control (use either address or name)."
                        }
                    },
                    "name": "Send program command"
                },
                "send_raw_node_command": {
                    "fields": {
                        "command": {
                            "description": "The ISY REST Command to be sent to the device.",
                            "name": "Command"
                        },
                        "parameters": {
                            "description": "A dict of parameters to be sent in the query string (e.g. for controlling coloured bulbs).",
                            "name": "Parameters"
                        },
                        "unit_of_measurement": {
                            "description": "The ISY Unit of Measurement (UOM) to send with the command, if required.",
                            "name": "Unit of measurement"
                        },
                        "value": {
                            "description": "The integer value to be sent with the command.",
                            "name": "Value"
                        }
                    },
                    "name": "Send raw node command"
                },
                "set_zwave_lock_user_code": {
                    "description": "Sets a Z-Wave Lock User Code via the ISY.",
                    "fields": {
                        "code": {
                            "description": "The code to set for the user.",
                            "name": "Code"
                        },
                        "user_num": {
                            "description": "The user slot number on the lock.",
                            "name": "User Number"
                        }
                    },
                    "name": "Set Z-Wave Lock User Code"
                },
                "set_zwave_parameter": {
                    "description": "Updates a Z-Wave Device parameter via the ISY. The parameter value will also be returned as a entity extra state attribute with the name \"ZW_#\" where \"#\" is the parameter number.",
                    "fields": {
                        "parameter": {
                            "description": "The parameter number to set on the end device.",
                            "name": "Parameter"
                        },
                        "size": {
                            "description": "The size of the parameter, either 1, 2, or 4 bytes.",
                            "name": "Size"
                        },
                        "value": {
                            "description": "The value to set for the parameter. May be an integer or byte string (e.g. \"0xFFFF\").",
                            "name": "Value"
                        }
                    },
                    "name": "Set Z-Wave Parameter"
                }
            }
        },
        "izone": {
            "services": {
                "airflow_max": {
                    "description": "Sets the airflow maximum percent for a zone.",
                    "fields": {
                        "airflow": {
                            "description": "Airflow percent.",
                            "name": "Percent"
                        }
                    },
                    "name": "Set maximum airflow"
                },
                "airflow_min": {
                    "description": "Sets the airflow minimum percent for a zone.",
                    "fields": {
                        "airflow": {
                            "description": "Airflow percent.",
                            "name": "Percent"
                        }
                    },
                    "name": "Set minimum airflow"
                }
            }
        },
        "kaleidescape": {
            "entity": {
                "sensor": {
                    "video_color_depth": {
                        "name": "Video colour depth"
                    },
                    "video_color_eotf": {
                        "name": "Video colour EOTF"
                    },
                    "video_color_sampling": {
                        "name": "Video colour sampling"
                    },
                    "video_color_space": {
                        "name": "Video colour space"
                    }
                }
            }
        },
        "keba": {
            "services": {
                "authorize": {
                    "description": "Authorises a charging process with the predefined RFID tag of the configuration file.",
                    "name": "Authorise"
                },
                "deauthorize": {
                    "description": "Deauthorises the running charging process with the predefined RFID tag of the configuration file.",
                    "name": "Deauthorise"
                },
                "disable": {
                    "description": "Stops the charging process if charging station is authorised.",
                    "name": "Disable"
                },
                "enable": {
                    "description": "Starts a charging process if charging station is authorised.",
                    "name": "Enable"
                },
                "request_data": {
                    "description": "Requesta new data from the charging station.",
                    "name": "Request data"
                },
                "set_current": {
                    "description": "Sets the maximum current for charging processes.",
                    "fields": {
                        "current": {
                            "description": "The maximum current used for the charging process. The value is depending on the DIP-switch settings and the used cable of the charging station.",
                            "name": "Current"
                        }
                    },
                    "name": "Set current"
                },
                "set_energy": {
                    "description": "Sets the energy target after which the charging process stops.",
                    "fields": {
                        "energy": {
                            "description": "The energy target to stop charging. Setting 0 disables the limit.",
                            "name": "Energy"
                        }
                    },
                    "name": "Set energy"
                },
                "set_failsafe": {
                    "description": "Sets the failsafe mode of the charging station. If all parameters are 0, the failsafe mode will be disabled.",
                    "fields": {
                        "failsafe_fallback": {
                            "description": "Fallback current to be set after timeout.",
                            "name": "Failsafe fallback"
                        },
                        "failsafe_persist": {
                            "description": "If failsafe_persist is 0, the failsafe option is only until charging station reboot. If failsafe_persist is 1, the failsafe option will survive a reboot.",
                            "name": "Failsafe persist"
                        },
                        "failsafe_timeout": {
                            "description": "Timeout after which the failsafe mode is triggered, if set_current was not executed during this time.",
                            "name": "Failsafe timeout"
                        }
                    },
                    "name": "Set failsafe"
                }
            }
        },
        "kef": {
            "services": {
                "set_desk_db": {
                    "description": "Sets the \"Desk mode\" slider of the speaker in dB.",
                    "fields": {
                        "db_value": {
                            "description": "Value of the slider.",
                            "name": "DB value"
                        }
                    },
                    "name": "Set desk dB"
                },
                "set_high_hz": {
                    "description": "Sets the \"High-pass mode\" slider of the speaker in Hz.",
                    "fields": {
                        "hz_value": {
                            "description": "Value of the slider.",
                            "name": "Hertz value"
                        }
                    },
                    "name": "Set high hertz"
                },
                "set_low_hz": {
                    "description": "Set the \"Sub out low-pass frequency\" slider of the speaker in Hz.",
                    "fields": {
                        "hz_value": {
                            "description": "Value of the slider.",
                            "name": "Hertz value"
                        }
                    },
                    "name": "Sets low Hertz"
                },
                "set_mode": {
                    "description": "Sets the mode of the speaker.",
                    "fields": {
                        "bass_extension": {
                            "description": "Bass extension.",
                            "name": "Base extension"
                        },
                        "desk_mode": {
                            "description": "Desk mode.",
                            "name": "Desk mode"
                        },
                        "high_pass": {
                            "description": "High-pass mode\".",
                            "name": "High pass"
                        },
                        "phase_correction": {
                            "description": "Phase correction.",
                            "name": "Phase correction"
                        },
                        "sub_polarity": {
                            "description": "Sub polarity.",
                            "name": "Subwoofer polarity"
                        },
                        "wall_mode": {
                            "description": "Wall mode.",
                            "name": "Wall mode"
                        }
                    },
                    "name": "Set mode"
                },
                "set_sub_db": {
                    "description": "Set the \"Sub gain\" slider of the speaker in dB.",
                    "fields": {
                        "db_value": {
                            "description": "Value of the slider.",
                            "name": "DB value"
                        }
                    },
                    "name": "Sets subwoofer dB"
                },
                "set_treble_db": {
                    "description": "Sets desk the \"Treble trim\" slider of the speaker in dB.",
                    "fields": {
                        "db_value": {
                            "description": "Value of the slider.",
                            "name": "DB value"
                        }
                    },
                    "name": "Set treble dB"
                },
                "set_wall_db": {
                    "description": "Sets the \"Wall mode\" slider of the speaker in dB.",
                    "fields": {
                        "db_value": {
                            "description": "Value of the slider.",
                            "name": "DB value"
                        }
                    },
                    "name": "Set wall dB"
                },
                "update_dsp": {
                    "description": "Updates all DSP settings.",
                    "name": "Update DSP"
                }
            }
        },
        "keyboard": {
            "services": {
                "media_next_track": {
                    "description": "Simulates a key press of the \"Media Next Track\" button on Home Assistant's host machine.",
                    "name": "Media next track"
                },
                "media_play_pause": {
                    "description": "Simulates a key press of the \"Media Play\/Pause\" button on Home Assistant's host machine.",
                    "name": "Media play\/pause"
                },
                "media_prev_track": {
                    "description": "Simulates a key press of the \"Media Previous Track\" button on Home Assistant's host machine.",
                    "name": "Media previous track"
                },
                "volume_down": {
                    "description": "Simulates a key press of the \"Volume Down\" button on Home Assistant's host machine.",
                    "name": "Volume down"
                },
                "volume_mute": {
                    "description": "Simulates a key press of the \"Volume Mute\" button on Home Assistant's host machine.",
                    "name": "Volume mute"
                },
                "volume_up": {
                    "description": "Simulates a key press of the \"Volume Up\" button on Home Assistant's host machine.",
                    "name": "Volume up"
                }
            }
        },
        "keymitt_ble": {
            "services": {
                "calibrate": {
                    "description": "Calibration - Set depth, press & hold duration, and operation mode. Warning - this will send a push command to the device.",
                    "fields": {
                        "depth": {
                            "description": "Depth in percent.",
                            "name": "Depth"
                        },
                        "duration": {
                            "description": "Duration in seconds.",
                            "name": "Duration"
                        },
                        "entity_id": {
                            "description": "Name of entity to calibrate.",
                            "name": "Entity"
                        },
                        "mode": {
                            "description": "Normal | invert | toggle."
                        }
                    },
                    "name": "Calibrate"
                }
            }
        },
        "knx": {
            "services": {
                "event_register": {
                    "description": "Add or remove group addresses to knx_event filter for triggering `knx_event`s. Only addresses added with this service can be removed.",
                    "fields": {
                        "address": {
                            "description": "Group address(es) that shall be added or removed. Lists are allowed."
                        }
                    }
                },
                "send": {
                    "fields": {
                        "address": {
                            "name": "Group address"
                        },
                        "payload": {
                            "description": "Payload to send to the bus. Integers are treated as DPT 1\/2\/3 payloads. For DPTs > 6 bits send a list. Each value represents 1 octet (0-255). Pad with 0 to DPT byte length.",
                            "name": "Payload"
                        },
                        "response": {
                            "description": "If set to `True`, the telegram will be sent as a `GroupValueResponse` instead of a `GroupValueWrite`.",
                            "name": "Send as Response"
                        },
                        "type": {
                            "description": "If set, the payload will not be sent as raw bytes, but encoded as given DPT. KNX sensor types are valid values (see https:\/\/www.home-assistant.io\/integrations\/knx\/#value-types).",
                            "name": "Value type"
                        }
                    },
                    "name": "Send to KNX bus"
                }
            }
        },
        "kodi": {
            "services": {
                "add_to_playlist": {
                    "description": "Adds music to the default playlist (i.e. playlistid=0).",
                    "fields": {
                        "artist_name": {
                            "description": "Optional artist name for filtering media.",
                            "name": "Artist name"
                        },
                        "media_id": {
                            "description": "Unique Id of the media entry to add (`songid` or albumid`). If not defined, `media_name` and `artist_name` are needed to search the Kodi music library.",
                            "name": "Media ID"
                        },
                        "media_name": {
                            "description": "Optional media name for filtering media. Can be 'ALL' when `media_type` is 'ALBUM' and `artist_name` is specified, to add all songs from one artist.",
                            "name": "Media name"
                        },
                        "media_type": {
                            "description": "Media type identifier. It must be one of SONG or ALBUM.",
                            "name": "Media type"
                        }
                    },
                    "name": "Add to playlist"
                },
                "call_method": {
                    "description": "Calls a Kodi JSONRPC API method with optional parameters. Results of the Kodi API call will be redirected in a Home Assistant event: `kodi_call_method_result`.",
                    "fields": {
                        "method": {
                            "description": "Name of the Kodi JSONRPC API method to be called.",
                            "name": "Method"
                        }
                    },
                    "name": "Call method"
                }
            }
        },
        "konnected": {
            "config": {
                "abort": {
                    "not_konn_panel": "Not a recognised Konnected.io device"
                }
            },
            "options": {
                "abort": {
                    "not_konn_panel": "Not a recognised Konnected.io device"
                }
            }
        },
        "lametric": {
            "selector": {
                "icon_type": {
                    "options": {
                        "alert": "Alert",
                        "info": "Info",
                        "none": "None"
                    }
                },
                "priority": {
                    "options": {
                        "critical": "Critical",
                        "info": "Info",
                        "warning": "Warning"
                    }
                },
                "sound": {
                    "options": {
                        "alarm1": "Alarm 1",
                        "alarm10": "Alarm 10",
                        "alarm11": "Alarm 11",
                        "alarm12": "Alarm 12",
                        "alarm13": "Alarm 13",
                        "alarm2": "Alarm 2",
                        "alarm3": "Alarm 3",
                        "alarm4": "Alarm 4",
                        "alarm5": "Alarm 5",
                        "alarm6": "Alarm 6",
                        "alarm7": "Alarm 7",
                        "alarm8": "Alarm 8",
                        "alarm9": "Alarm 9",
                        "bicycle": "Bicycle",
                        "car": "Car",
                        "cash": "Cash",
                        "cat": "Cat",
                        "dog": "Dog 1",
                        "dog2": "Dog 2",
                        "energy": "Energy",
                        "knock-knock": "Knock knock",
                        "letter_email": "Letter email",
                        "lose1": "Lose 1",
                        "lose2": "Lose 2",
                        "negative1": "Negative 1",
                        "negative2": "Negative 2",
                        "negative3": "Negative 3",
                        "negative4": "Negative 4",
                        "negative5": "Negative 5",
                        "notification": "Notification 1",
                        "notification2": "Notification 2",
                        "notification3": "Notification 3",
                        "notification4": "Notification 4",
                        "open_door": "Open door",
                        "positive1": "Positive 1",
                        "positive2": "Positive 2",
                        "positive3": "Positive 3",
                        "positive4": "Positive 4",
                        "positive5": "Positive 5",
                        "positive6": "Positive 6",
                        "statistic": "Statistic",
                        "thunder": "Thunder",
                        "water1": "Water 1",
                        "water2": "Water 2",
                        "win": "Win 1",
                        "wind": "Wind"
                    }
                }
            },
            "services": {
                "message": {
                    "name": "Display a message"
                }
            }
        },
        "ld2410_ble": {
            "entity": {
                "sensor": {
                    "detection_distance": {
                        "name": "Detection distance"
                    },
                    "max_motion_gates": {
                        "name": "Max motion gates"
                    },
                    "max_static_gates": {
                        "name": "Max static gates"
                    },
                    "motion_energy_gate_0": {
                        "name": "Motion energy gate 0"
                    },
                    "motion_energy_gate_1": {
                        "name": "Motion energy gate 1"
                    },
                    "motion_energy_gate_2": {
                        "name": "Motion energy gate 2"
                    },
                    "motion_energy_gate_3": {
                        "name": "Motion energy gate 3"
                    },
                    "motion_energy_gate_4": {
                        "name": "Motion energy gate 4"
                    },
                    "motion_energy_gate_5": {
                        "name": "Motion energy gate 5"
                    },
                    "motion_energy_gate_6": {
                        "name": "Motion energy gate 6"
                    },
                    "motion_energy_gate_7": {
                        "name": "Motion energy gate 7"
                    },
                    "motion_energy_gate_8": {
                        "name": "Motion energy gate 8"
                    },
                    "moving_target_distance": {
                        "name": "Moving target distance"
                    },
                    "moving_target_energy": {
                        "name": "Moving target energy"
                    },
                    "static_energy_gate_0": {
                        "name": "Static energy gate 0"
                    },
                    "static_energy_gate_1": {
                        "name": "Static energy gate 1"
                    },
                    "static_energy_gate_2": {
                        "name": "Static energy gate 2"
                    },
                    "static_energy_gate_3": {
                        "name": "Static energy gate 3"
                    },
                    "static_energy_gate_4": {
                        "name": "Static energy gate 4"
                    },
                    "static_energy_gate_5": {
                        "name": "Static energy gate 5"
                    },
                    "static_energy_gate_6": {
                        "name": "Static energy gate 6"
                    },
                    "static_energy_gate_7": {
                        "name": "Static energy gate 7"
                    },
                    "static_energy_gate_8": {
                        "name": "Static energy gate 8"
                    },
                    "static_target_distance": {
                        "name": "Static target distance"
                    },
                    "static_target_energy": {
                        "name": "Static target energy"
                    }
                }
            }
        },
        "lifx": {
            "services": {
                "effect_colorloop": {
                    "description": "Runs an effect with looping colours.",
                    "fields": {
                        "brightness": {
                            "description": "Number indicating brightness of the colour loop, where 1 is the minimum brightness and 255 is the maximum brightness supported by the light."
                        },
                        "brightness_pct": {
                            "description": "Percentage indicating the brightness of the colour loop, where 1 is the minimum brightness and 100 is the maximum brightness supported by the light."
                        },
                        "change": {
                            "description": "Hue movement per period, in degrees on a colour wheel."
                        },
                        "period": {
                            "description": "Duration between colour changes."
                        },
                        "saturation_max": {
                            "description": "Percentage indicating the maximum saturation of the colours in the loop.",
                            "name": "Maximum saturation"
                        },
                        "saturation_min": {
                            "description": "Percentage indicating the minimum saturation of the colours in the loop.",
                            "name": "Minimum saturation"
                        },
                        "spread": {
                            "description": "Maximum hue difference between participating lights, in degrees on a colour wheel.",
                            "name": "Spread"
                        }
                    },
                    "name": "Colour loop effect"
                },
                "effect_morph": {
                    "fields": {
                        "palette": {
                            "description": "List of at least 2 and at most 16 colours as hue (0-360), saturation (0-100), brightness (0-100) and kelvin (1500-900) values to use for this effect. Overrides the theme attribute."
                        },
                        "speed": {
                            "description": "How fast the colours will move."
                        },
                        "theme": {
                            "description": "Predefined colour theme to use for the effect. Overridden by the palette attribute."
                        }
                    }
                },
                "effect_pulse": {
                    "description": "Runs a flash effect by changing to a colour and back.",
                    "fields": {
                        "brightness": {
                            "description": "Number indicating brightness of the temporary colour, where 1 is the minimum brightness and 255 is the maximum brightness supported by the light."
                        },
                        "brightness_pct": {
                            "description": "Percentage indicating the brightness of the temporary colour, where 1 is the minimum brightness and 100 is the maximum brightness supported by the light."
                        },
                        "color_name": {
                            "description": "A human-readable colour name.",
                            "name": "Colour name"
                        },
                        "mode": {
                            "description": "Decides how colours are changed."
                        },
                        "rgb_color": {
                            "description": "The temporary colour in RGB-format.",
                            "name": "RGB colour"
                        }
                    }
                },
                "set_state": {
                    "description": "Sets a colour\/brightness and possibly turn the light on\/off."
                }
            }
        },
        "light": {
            "entity_component": {
                "_": {
                    "state_attributes": {
                        "color_mode": {
                            "name": "Colour mode",
                            "state": {
                                "brightness": "Brightness only",
                                "color_temp": "Colour temperature",
                                "hs": "HS",
                                "onoff": "On\/Off",
                                "rgb": "RGB",
                                "rgbw": "RGBW",
                                "rgbww": "RGBWW",
                                "unknown": "Unknown",
                                "white": "White",
                                "xy": "XY"
                            }
                        },
                        "color_temp": {
                            "name": "Colour temperature (mireds)"
                        },
                        "color_temp_kelvin": {
                            "name": "Colour temperature (Kelvin)"
                        },
                        "max_color_temp_kelvin": {
                            "name": "Maximum colour temperature (Kelvin)"
                        },
                        "max_mireds": {
                            "name": "Maximum colour temperature (mireds)"
                        },
                        "min_color_temp_kelvin": {
                            "name": "Minimum colour temperature (Kelvin)"
                        },
                        "min_mireds": {
                            "name": "Minimum colour temperature (mireds)"
                        },
                        "supported_color_modes": {
                            "name": "Available colour modes",
                            "state": {
                                "brightness": "Brightness only",
                                "color_temp": "Colour Temperature",
                                "hs": "HS",
                                "onoff": "On\/Off",
                                "rgb": "RGB",
                                "rgbw": "RGBW",
                                "rgbww": "RGBWW",
                                "unknown": "Unknown",
                                "white": "White",
                                "xy": "XY"
                            }
                        }
                    }
                }
            },
            "selector": {
                "color_name": {
                    "options": {
                        "aliceblue": "Alice blue",
                        "antiquewhite": "Antique white",
                        "aqua": "Aqua",
                        "aquamarine": "Aquamarine",
                        "azure": "Azure",
                        "beige": "Beige",
                        "bisque": "Bisque",
                        "blanchedalmond": "Blanched almond",
                        "blue": "Blue",
                        "blueviolet": "Blue violet",
                        "brown": "Brown",
                        "burlywood": "Burlywood",
                        "cadetblue": "Cadet blue",
                        "chartreuse": "Chartreuse",
                        "chocolate": "Chocolate",
                        "coral": "Coral",
                        "cornflowerblue": "Cornflower blue",
                        "cornsilk": "Cornsilk",
                        "crimson": "Crimson",
                        "cyan": "Cyan",
                        "darkblue": "Dark blue",
                        "darkcyan": "Dark cyan",
                        "darkgoldenrod": "Dark goldenrod",
                        "darkgray": "Dark grey",
                        "darkgreen": "Dark green",
                        "darkgrey": "Dark grey",
                        "darkkhaki": "Dark khaki",
                        "darkmagenta": "Dark magenta",
                        "darkolivegreen": "Dark olive green",
                        "darkorange": "Dark orange",
                        "darkorchid": "Dark orchid",
                        "darkred": "Dark red",
                        "darksalmon": "Dark salmon",
                        "darkseagreen": "Dark sea green",
                        "darkslateblue": "Dark slate blue",
                        "darkslategray": "Dark slate grey",
                        "darkslategrey": "Dark slate grey",
                        "darkturquoise": "Dark turquoise",
                        "darkviolet": "Dark violet",
                        "deeppink": "Deep pink",
                        "deepskyblue": "Deep sky blue",
                        "dimgray": "Dim grey",
                        "dimgrey": "Dim grey",
                        "dodgerblue": "Dodger blue",
                        "firebrick": "Fire brick",
                        "floralwhite": "Floral white",
                        "forestgreen": "Forest green",
                        "fuchsia": "Fuchsia",
                        "gainsboro": "Gainsboro",
                        "ghostwhite": "Ghost white",
                        "gold": "Gold",
                        "goldenrod": "Goldenrod",
                        "gray": "Grey",
                        "green": "Green",
                        "greenyellow": "Green yellow",
                        "grey": "Grey",
                        "homeassistant": "Home Assistant",
                        "honeydew": "Honeydew",
                        "hotpink": "Hot pink",
                        "indianred": "Indian red",
                        "indigo": "Indigo",
                        "ivory": "Ivory",
                        "khaki": "Khaki",
                        "lavender": "Lavender",
                        "lavenderblush": "Lavender blush",
                        "lawngreen": "Lawn green",
                        "lemonchiffon": "Lemon chiffon",
                        "lightblue": "Light blue",
                        "lightcoral": "Light coral",
                        "lightcyan": "Light cyan",
                        "lightgoldenrodyellow": "Light goldenrod yellow",
                        "lightgray": "Light grey",
                        "lightgreen": "Light green",
                        "lightgrey": "Light grey",
                        "lightpink": "Light pink",
                        "lightsalmon": "Light salmon",
                        "linen": "Linen",
                        "magenta": "Magenta",
                        "maroon": "Maroon",
                        "mediumaquamarine": "Medium aquamarine",
                        "mediumblue": "Medium blue",
                        "mediumorchid": "Medium orchid",
                        "mediumpurple": "Medium purple",
                        "mediumseagreen": "Medium sea green",
                        "mediumslateblue": "Medium slate blue",
                        "mediumspringgreen": "Medium spring green",
                        "mediumturquoise": "Medium turquoise",
                        "mediumvioletred": "Medium violet red",
                        "midnightblue": "Midnight blue",
                        "mintcream": "Mint cream",
                        "mistyrose": "Misty rose",
                        "moccasin": "Moccasin",
                        "navajowhite": "Navajo white",
                        "navy": "Navy",
                        "navyblue": "Navy blue",
                        "oldlace": "Old lace",
                        "olive": "Olive",
                        "olivedrab": "Olive drab",
                        "orange": "Orange",
                        "orangered": "Orange red",
                        "orchid": "Orchid",
                        "palegoldenrod": "Pale goldenrod",
                        "palegreen": "Pale green",
                        "paleturquoise": "Pale turquoise",
                        "palevioletred": "Pale violet red",
                        "papayawhip": "Papaya whip",
                        "peachpuff": "Peach puff",
                        "peru": "Peru",
                        "pink": "Pink",
                        "plum": "Plum",
                        "powderblue": "Powder blue",
                        "purple": "Purple",
                        "red": "Red",
                        "rosybrown": "Rosy brown",
                        "royalblue": "Royal blue",
                        "saddlebrown": "Saddle brown",
                        "salmon": "Salmon",
                        "sandybrown": "Sandy brown",
                        "seagreen": "Sea green",
                        "seashell": "Seashell",
                        "sienna": "Sienna",
                        "silver": "Silver",
                        "skyblue": "Sky blue",
                        "slateblue": "Slate blue",
                        "slategray": "Slate grey",
                        "slategrey": "Slate grey",
                        "snow": "Snow",
                        "springgreen": "Spring green",
                        "steelblue": "Steel blue",
                        "tan": "Tan",
                        "teal": "Teal",
                        "thistle": "Thistle",
                        "tomato": "Tomato",
                        "turquoise": "Turquoise",
                        "violet": "Violet",
                        "wheat": "Wheat",
                        "yellowgreen": "Yellow green"
                    }
                }
            },
            "services": {
                "toggle": {
                    "fields": {
                        "color_name": {
                            "description": "A human-readable colour name",
                            "name": "Colour name"
                        },
                        "color_temp": {
                            "description": "Colour temperature in mireds.",
                            "name": "Colour temperature"
                        },
                        "hs_color": {
                            "description": "Colour in hue\/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100.",
                            "name": "Hue\/Sat colour"
                        },
                        "rgb_color": {
                            "description": "The colour in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue.",
                            "name": "Colour"
                        },
                        "xy_color": {
                            "description": "Colour in XY-format. A list of two decimal numbers between 0 and 1.",
                            "name": "XY-colour"
                        }
                    }
                },
                "turn_on": {
                    "fields": {
                        "color_name": {
                            "description": "A human-readable colour name.",
                            "name": "Colour name"
                        },
                        "color_temp": {
                            "description": "Colour temperature in mireds.",
                            "name": "Colour temperature"
                        },
                        "hs_color": {
                            "description": "Colour in hue\/sat format. A list of two integers. Hue is 0-360 and Sat is 0-100.",
                            "name": "Hue\/Sat colour"
                        },
                        "kelvin": {
                            "description": "Colour temperature in Kelvin.",
                            "name": "Colour temperature"
                        },
                        "rgb_color": {
                            "description": "The colour in RGB format. A list of three integers between 0 and 255 representing the values of red, green, and blue.",
                            "name": "Colour"
                        },
                        "rgbw_color": {
                            "name": "RGBW-colour"
                        },
                        "rgbww_color": {
                            "description": "The colour in RGBWW format. A list of five integers between 0 and 255 representing the values of red, green, blue, cold white, and warm white.",
                            "name": "RGBWW-colour"
                        },
                        "xy_color": {
                            "description": "Colour in XY-format. A list of two decimal numbers between 0 and 1.",
                            "name": "XY-colour"
                        }
                    }
                }
            }
        },
        "lock": {
            "services": {
                "lock": {
                    "description": "Locks a lock.",
                    "fields": {
                        "code": {
                            "description": "Code used to lock the lock.",
                            "name": "Code"
                        }
                    },
                    "name": "Lock"
                },
                "open": {
                    "description": "Opens a lock.",
                    "fields": {
                        "code": {
                            "description": "Code used to open the lock.",
                            "name": "Code"
                        }
                    }
                },
                "unlock": {
                    "description": "Unlocks a lock.",
                    "fields": {
                        "code": {
                            "description": "Code used to unlock the lock.",
                            "name": "Code"
                        }
                    },
                    "name": "Unlock"
                }
            }
        },
        "logbook": {
            "services": {
                "log": {
                    "description": "Creates a custom entry in the logbook.",
                    "fields": {
                        "domain": {
                            "description": "Determines which icon is used in the logbook entry. The icon illustrates the integration domain related to this logbook entry.",
                            "name": "Domain"
                        },
                        "entity_id": {
                            "description": "Entity to reference in the logbook entry.",
                            "name": "Entity ID"
                        },
                        "message": {
                            "description": "Message of the logbook entry.",
                            "name": "Message"
                        },
                        "name": {
                            "description": "Custom name for an entity, can be referenced using an `entity_id`."
                        }
                    },
                    "name": "Log"
                }
            }
        },
        "logger": {
            "selector": {
                "level": {
                    "options": {
                        "critical": "Critical",
                        "debug": "Debug",
                        "error": "Error",
                        "fatal": "Fatal",
                        "info": "Info",
                        "warning": "Warning"
                    }
                }
            },
            "services": {
                "set_default_level": {
                    "description": "Sets the default log level for integrations.",
                    "fields": {
                        "level": {
                            "description": "Default severity level for all integrations.",
                            "name": "Level"
                        }
                    },
                    "name": "Set default level"
                },
                "set_level": {
                    "description": "Sets the log level for one or more integrations.",
                    "name": "Set level"
                }
            }
        },
        "logi_circle": {
            "config": {
                "error": {
                    "authorize_url_timeout": "Timeout generating authorise URL."
                }
            }
        },
        "lovelace": {
            "services": {
                "reload_resources": {
                    "description": "Reloads dashboard resources from the YAML-configuration.",
                    "name": "Reload resources"
                }
            }
        },
        "lyric": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL."
                }
            }
        },
        "matter": {
            "entity": {
                "event": {
                    "push": {
                        "state_attributes": {
                            "event_type": {
                                "state": {
                                    "initial_press": "Initial press",
                                    "long_press": "Long press",
                                    "long_release": "Long release",
                                    "multi_press_complete": "Multi press complete",
                                    "multi_press_ongoing": "Multi press ongoing",
                                    "short_release": "Short release",
                                    "switch_latched": "Switch latched"
                                }
                            }
                        }
                    }
                }
            },
            "services": {
                "open_commissioning_window": {
                    "description": "Allows adding one of your devices to another Matter network by opening the commissioning window for this Matter device for 60 seconds.",
                    "fields": {
                        "device_id": {
                            "description": "The Matter device to add to the other Matter network."
                        }
                    },
                    "name": "Open commissioning window"
                }
            }
        },
        "mazda": {
            "entity": {
                "binary_sensor": {
                    "driver_door": {
                        "name": "Driver door"
                    },
                    "ev_plugged_in": {
                        "name": "Plugged in"
                    },
                    "hood": {
                        "name": "Bonnet"
                    },
                    "passenger_door": {
                        "name": "Passenger door"
                    },
                    "rear_left_door": {
                        "name": "Rear left door"
                    },
                    "rear_right_door": {
                        "name": "Rear right door"
                    },
                    "trunk": {
                        "name": "Trunk"
                    }
                },
                "button": {
                    "refresh_vehicle_status": {
                        "name": "Refresh status"
                    },
                    "start_engine": {
                        "name": "Start engine"
                    },
                    "stop_engine": {
                        "name": "Stop engine"
                    },
                    "turn_off_hazard_lights": {
                        "name": "Turn off hazard lights"
                    },
                    "turn_on_hazard_lights": {
                        "name": "Turn on hazard lights"
                    }
                },
                "sensor": {
                    "ev_charge_level": {
                        "name": "Charge level"
                    },
                    "ev_remaining_range": {
                        "name": "Remaining range"
                    },
                    "front_left_tire_pressure": {
                        "name": "Front left tyre pressure"
                    },
                    "front_right_tire_pressure": {
                        "name": "Front right tyre pressure"
                    },
                    "fuel_distance_remaining": {
                        "name": "Fuel distance remaining"
                    },
                    "fuel_remaining_percentage": {
                        "name": "Fuel remaining percentage"
                    },
                    "odometer": {
                        "name": "Odometer"
                    },
                    "rear_left_tire_pressure": {
                        "name": "Rear left tyre pressure"
                    },
                    "rear_right_tire_pressure": {
                        "name": "Rear right tyre pressure"
                    }
                },
                "switch": {
                    "charging": {
                        "name": "Charging"
                    }
                }
            }
        },
        "media_player": {
            "entity_component": {
                "_": {
                    "state_attributes": {
                        "media_content_type": {
                            "state": {
                                "movie": "Film"
                            }
                        }
                    }
                }
            },
            "selector": {
                "enqueue": {
                    "options": {
                        "add": "Add to queue",
                        "next": "Play next",
                        "play": "Play",
                        "replace": "Play now and clear queue"
                    }
                },
                "repeat": {
                    "options": {
                        "all": "Repeat all",
                        "off": "Off",
                        "one": "Repeat one"
                    }
                }
            },
            "services": {
                "clear_playlist": {
                    "description": "Clears the playlist.",
                    "name": "Clear playlist"
                },
                "join": {
                    "description": "Groups media players together for synchronous playback. Only works on supported multiroom audio systems.",
                    "fields": {
                        "group_members": {
                            "description": "The players which will be synced with the playback specified in `target`.",
                            "name": "Group members"
                        }
                    },
                    "name": "Join"
                },
                "media_next_track": {
                    "description": "Selects the next track.",
                    "name": "Next"
                },
                "select_sound_mode": {
                    "fields": {
                        "sound_mode": {
                            "name": "Sound mode"
                        }
                    },
                    "name": "Select sound mode"
                },
                "select_source": {
                    "description": "Sends the media player the command to change input source.",
                    "fields": {
                        "source": {
                            "description": "Name of the source to switch to. Platform dependent.",
                            "name": "Source"
                        }
                    },
                    "name": "Select source"
                },
                "shuffle_set": {
                    "description": "Playback mode that selects the media in randomised order.",
                    "fields": {
                        "shuffle": {
                            "description": "Whether shuffle mode is enabled.",
                            "name": "Shuffle"
                        }
                    },
                    "name": "Shuffle"
                },
                "toggle": {
                    "description": "Toggles a media player on\/off.",
                    "name": "Toggle"
                },
                "turn_off": {
                    "description": "Turns off the power of the media player."
                },
                "turn_on": {
                    "description": "Turns on the power of the media player."
                },
                "unjoin": {
                    "description": "Removes the player from a group. Only works on platforms which support player groups.",
                    "name": "Unjoin"
                },
                "volume_down": {
                    "description": "Turns down the volume.",
                    "name": "Turn down volume"
                },
                "volume_mute": {
                    "description": "Mutes or unmutes the media player.",
                    "fields": {
                        "is_volume_muted": {
                            "description": "Defines whether it is muted.",
                            "name": "Muted"
                        }
                    },
                    "name": "Mute\/unmute volume"
                },
                "volume_set": {
                    "description": "Sets the volume level.",
                    "fields": {
                        "volume_level": {
                            "description": "The volume. 0 is inaudible, 1 is the maximum volume.",
                            "name": "Level"
                        }
                    },
                    "name": "Set volume"
                },
                "volume_up": {
                    "description": "Turns up the volume.",
                    "name": "Turn up volume"
                }
            }
        },
        "melcloud": {
            "issues": {
                "deprecated_yaml_import_issue_cannot_connect": {
                    "title": "The MELCloud YAML configuration import failed"
                },
                "deprecated_yaml_import_issue_invalid_auth": {
                    "description": "Configuring MELCloud using YAML is being removed but there was an authentication error importing your YAML configuration.\n\nCorrect the YAML configuration and restart Home Assistant to try again or remove the MELCloud YAML configuration from your configuration.yaml file and continue to [set up the integration](\/config\/integrations\/dashboard\/add?domain=melcoud) manually.",
                    "title": "The MELCloud YAML configuration import failed"
                }
            }
        },
        "modern_forms": {
            "entity": {
                "binary_sensor": {
                    "fan_sleep_timer_active": {
                        "name": "Fan sleep timer active"
                    },
                    "light_sleep_timer_active": {
                        "name": "Light sleep timer active"
                    }
                },
                "sensor": {
                    "fan_timer_remaining_time": {
                        "name": "Fan sleep time"
                    },
                    "light_timer_remaining_time": {
                        "name": "Light sleep time"
                    }
                },
                "switch": {
                    "adaptive_learning": {
                        "name": "Adaptive learning"
                    },
                    "away_mode": {
                        "name": "Away mode"
                    }
                }
            }
        },
        "moon": {
            "entity": {
                "sensor": {
                    "phase": {
                        "name": "Phase"
                    }
                }
            }
        },
        "motioneye": {
            "entity": {
                "sensor": {
                    "actions": {
                        "name": "Actions"
                    }
                },
                "switch": {
                    "motion_detection": {
                        "name": "Motion detection"
                    },
                    "movies": {
                        "name": "Films"
                    },
                    "still_images": {
                        "name": "Still images"
                    },
                    "text_overlay": {
                        "name": "Text overlay"
                    },
                    "upload_enabled": {
                        "name": "Upload enabled"
                    },
                    "video_streaming": {
                        "name": "Video streaming"
                    }
                }
            },
            "options": {
                "step": {
                    "init": {
                        "data": {
                            "webhook_set_overwrite": "Overwrite unrecognised webhooks"
                        }
                    }
                }
            }
        },
        "mqtt": {
            "issues": {
                "entity_name_is_device_name_discovery": {
                    "description": "Some MQTT entities have an entity name equal to the device name. This is not expected. The entity name is set to `null` as a work-a-round to avoid a duplicate name. Please inform the maintainer of the software application that supplies the affected entities to fix this issue.\n\nList of affected entities:\n\n{config}",
                    "title": "Discovered MQTT entities with a name that is equal to the device name"
                },
                "entity_name_is_device_name_yaml": {
                    "description": "Some MQTT entities have an entity name equal to the device name. This is not expected. The entity name is set to `null` as a work-a-round to avoid a duplicate name. Please update your configuration and restart Home Assistant to fix this issue.\n\nList of affected entities:\n\n{config}",
                    "title": "Manual configured MQTT entities with a name that is equal to the device name"
                },
                "entity_name_startswith_device_name_discovery": {
                    "description": "Some MQTT entities have an entity name that starts with the device name. This is not expected. To avoid a duplicate name the device name prefix is stripped of the entity name as a work-a-round. Please inform the maintainer of the software application that supplies the affected entities to fix this issue. \n\nList of affected entities:\n\n{config}",
                    "title": "Discovered entities with a name that starts with the device name"
                },
                "entity_name_startswith_device_name_yaml": {
                    "description": "Some MQTT entities have an entity name that starts with the device name. This is not expected. To avoid a duplicate name the device name prefix is stripped of the entity name as a work-a-round. Please update your configuration and restart Home Assistant to fix this issue. \n\nList of affected entities:\n\n{config}",
                    "title": "Manually configured MQTT entities with a name that starts with the device name"
                }
            },
            "services": {
                "dump": {
                    "description": "Writes all messages on a specific topic into the `mqtt_dump.txt` file in your configuration folder.",
                    "fields": {
                        "duration": {
                            "description": "How long we should listen for messages in seconds.",
                            "name": "Duration"
                        },
                        "topic": {
                            "description": "Topic to listen to."
                        }
                    },
                    "name": "Export"
                },
                "publish": {
                    "description": "Publishes a message to an MQTT topic.",
                    "fields": {
                        "payload": {
                            "description": "The payload to publish.",
                            "name": "Payload"
                        },
                        "payload_template": {
                            "description": "Template to render as a payload value. If a payload is provided, the template is ignored.",
                            "name": "Payload template"
                        },
                        "qos": {
                            "description": "Quality of Service to use. O. At most once. 1: At least once. 2: Exactly once.",
                            "name": "QoS"
                        },
                        "retain": {
                            "description": "If the message should have the retain flag set. If set, the broker stores the most recent message on a topic.",
                            "name": "Retain"
                        },
                        "topic": {
                            "description": "Topic to publish to."
                        }
                    },
                    "name": "Publish"
                },
                "reload": {
                    "description": "Reloads MQTT entities from the YAML-configuration.",
                    "name": "Reload"
                }
            }
        },
        "mutesync": {
            "entity": {
                "binary_sensor": {
                    "in_meeting": {
                        "name": "In meeting"
                    },
                    "muted": {
                        "name": "Muted"
                    }
                }
            }
        },
        "neato": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL."
                }
            }
        },
        "nest": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL.",
                    "unknown_authorize_url_generation": "Unknown error generating an authorise URL."
                },
                "step": {
                    "device_project_upgrade": {
                        "description": "Update the Nest Device Access Project with your new OAuth Client ID ([more info]({more_info_url}))\n1. Go to the [Device Access Console]({device_access_console_url}).\n1. Click the bin icon next to *OAuth Client ID*.\n1. Click the `...` overflow menu and *Add Client ID*.\n1. Enter your new OAuth Client ID and click **Add**.\n\nYour OAuth Client ID is: `{client_id}`"
                    },
                    "link": {
                        "description": "To link your Nest account, [authorise your account]({url}).\n\nAfter authorisation, copy-paste the provided PIN code below."
                    }
                }
            }
        },
        "netatmo": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL."
                }
            }
        },
        "nextcloud": {
            "entity": {
                "binary_sensor": {
                    "nextcloud_system_debug": {
                        "name": "Debug enabled"
                    },
                    "nextcloud_system_enable_avatars": {
                        "name": "Avatars enabled"
                    },
                    "nextcloud_system_enable_previews": {
                        "name": "Previews enabled"
                    },
                    "nextcloud_system_filelocking_enabled": {
                        "name": "Filelocking enabled"
                    }
                },
                "sensor": {
                    "nextcloud_activeusers_last1hour": {
                        "name": "Amount of active users last hour"
                    },
                    "nextcloud_activeusers_last24hours": {
                        "name": "Amount of active users last day"
                    },
                    "nextcloud_activeusers_last5minutes": {
                        "name": "Amount of active users last 5 minutes"
                    },
                    "nextcloud_database_type": {
                        "name": "Database type"
                    },
                    "nextcloud_database_version": {
                        "name": "Database version"
                    },
                    "nextcloud_server_php_max_execution_time": {
                        "name": "PHP max execution time"
                    },
                    "nextcloud_server_php_memory_limit": {
                        "name": "PHP memory limit"
                    },
                    "nextcloud_server_php_upload_max_filesize": {
                        "name": "PHP upload maximum filesize"
                    },
                    "nextcloud_server_php_version": {
                        "name": "PHP version"
                    },
                    "nextcloud_server_webserver": {
                        "name": "Webserver"
                    },
                    "nextcloud_shares_num_fed_shares_received": {
                        "name": "Amount of shares received"
                    },
                    "nextcloud_shares_num_fed_shares_sent": {
                        "name": "Amount of shares sent"
                    },
                    "nextcloud_shares_num_shares": {
                        "name": "Amount of shares"
                    },
                    "nextcloud_shares_num_shares_groups": {
                        "name": "Amount of group shares"
                    },
                    "nextcloud_shares_num_shares_link": {
                        "name": "Amount of link shares"
                    },
                    "nextcloud_shares_num_shares_link_no_password": {
                        "name": "Amount of passwordless link shares"
                    },
                    "nextcloud_shares_num_shares_mail": {
                        "name": "Amount of mail shares"
                    },
                    "nextcloud_shares_num_shares_room": {
                        "name": "Amount of room shares"
                    },
                    "nextcloud_shares_num_shares_user": {
                        "name": "Amount of user shares"
                    },
                    "nextcloud_shares_permissions_3_1": {
                        "name": "Permissions 3.1"
                    },
                    "nextcloud_storage_num_files": {
                        "name": "Amount of files"
                    },
                    "nextcloud_storage_num_storages": {
                        "name": "Amount of storages"
                    },
                    "nextcloud_storage_num_storages_home": {
                        "name": "Amount of storages at home"
                    },
                    "nextcloud_storage_num_storages_local": {
                        "name": "Amount of local storages"
                    },
                    "nextcloud_storage_num_storages_other": {
                        "name": "Amount of other storages"
                    },
                    "nextcloud_storage_num_users": {
                        "name": "Amount of user"
                    },
                    "nextcloud_system_apps_app_updates_calendar": {
                        "name": "Calendar updates"
                    },
                    "nextcloud_system_apps_app_updates_contacts": {
                        "name": "Contact updates"
                    },
                    "nextcloud_system_apps_app_updates_tasks": {
                        "name": "Task updates"
                    },
                    "nextcloud_system_apps_app_updates_twofactor_totp": {
                        "name": "Two factor authentication updates"
                    },
                    "nextcloud_system_apps_num_installed": {
                        "name": "Apps installed"
                    },
                    "nextcloud_system_apps_num_updates_available": {
                        "name": "Updates available"
                    },
                    "nextcloud_system_cpuload": {
                        "name": "CPU Load"
                    },
                    "nextcloud_system_freespace": {
                        "name": "Free space"
                    },
                    "nextcloud_system_mem_free": {
                        "name": "Free memory"
                    },
                    "nextcloud_system_mem_total": {
                        "name": "Total memory"
                    },
                    "nextcloud_system_memcache_distributed": {
                        "name": "System memcache distributed"
                    },
                    "nextcloud_system_memcache_local": {
                        "name": "System memcache local"
                    },
                    "nextcloud_system_memcache_locking": {
                        "name": "System memcache locking"
                    },
                    "nextcloud_system_swap_free": {
                        "name": "Free swap memory"
                    },
                    "nextcloud_system_swap_total": {
                        "name": "Total swap memory"
                    },
                    "nextcloud_system_theme": {
                        "name": "System theme"
                    },
                    "nextcloud_system_version": {
                        "name": "System version"
                    }
                }
            }
        },
        "notify": {
            "services": {
                "notify": {
                    "description": "Sends a notification message to selected targets.",
                    "fields": {
                        "data": {
                            "description": "Some integrations provide extended functionality. For information on how to use _data_, refer to the integration documentation.",
                            "name": "Data"
                        },
                        "message": {
                            "description": "Message body of the notification.",
                            "name": "Message"
                        },
                        "target": {
                            "description": "Some integrations allow you to specify the targets that receive the notification. For more information, refer to the integration documentation.",
                            "name": "Target"
                        },
                        "title": {
                            "description": "Title for your notification.",
                            "name": "Title"
                        }
                    },
                    "name": "Send a notification"
                },
                "persistent_notification": {
                    "description": "Sends a notification that is visible in the **Notifications** panel.",
                    "fields": {
                        "data": {
                            "description": "Some integrations provide extended functionality. For information on how to use _data_, refer to the integration documentation.",
                            "name": "Data"
                        },
                        "message": {
                            "description": "Message body of the notification.",
                            "name": "Message"
                        },
                        "title": {
                            "description": "Title of the notification.",
                            "name": "Title"
                        }
                    },
                    "name": "Send a persistent notification"
                }
            }
        },
        "notion": {
            "entity": {
                "sensor": {
                    "mold_risk": {
                        "name": "Mould risk"
                    }
                }
            }
        },
        "number": {
            "entity_component": {
                "ph": {
                    "name": "pH"
                }
            }
        },
        "ombi": {
            "services": {
                "submit_movie_request": {
                    "description": "Searches for a film and requests the first result.",
                    "fields": {
                        "name": {
                            "description": "Search parameter."
                        }
                    },
                    "name": "Submit film request"
                },
                "submit_music_request": {
                    "fields": {
                        "name": {
                            "description": "Search parameter."
                        }
                    }
                },
                "submit_tv_request": {
                    "fields": {
                        "name": {
                            "description": "Search parameter."
                        }
                    }
                }
            }
        },
        "ondilo_ico": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL."
                }
            },
            "entity": {
                "sensor": {
                    "oxydo_reduction_potential": {
                        "name": "Oxydo reduction potential"
                    },
                    "ph": {
                        "name": "pH"
                    },
                    "rssi": {
                        "name": "RSSI"
                    },
                    "salt": {
                        "name": "Salt"
                    },
                    "tds": {
                        "name": "TDS"
                    }
                }
            }
        },
        "openai_conversation": {
            "services": {
                "generate_image": {
                    "description": "Turn a prompt into an image",
                    "fields": {
                        "config_entry": {
                            "description": "The config entry to use for this service",
                            "name": "Config Entry"
                        },
                        "prompt": {
                            "description": "The text to turn into an image",
                            "example": "A photo of a dog",
                            "name": "Prompt"
                        },
                        "size": {
                            "description": "The size of the image to generate",
                            "name": "Size"
                        }
                    },
                    "name": "Generate image"
                }
            }
        },
        "opensky": {
            "config": {
                "step": {
                    "user": {
                        "data": {
                            "altitude": "Altitude",
                            "radius": "Radius"
                        },
                        "description": "Fill in the location to track."
                    }
                }
            }
        },
        "pegel_online": {
            "config": {
                "error": {
                    "no_stations": "Could not find any stations in range."
                },
                "step": {
                    "select_station": {
                        "data": {
                            "station": "Station"
                        },
                        "description": "Found {stations_count} stations in radius",
                        "title": "Select the measuring station to add"
                    },
                    "user": {
                        "data": {
                            "radius": "Search radius (in km)"
                        },
                        "description": "Select the area, where you want to search for water measuring stations"
                    }
                }
            },
            "entity": {
                "sensor": {
                    "air_temperature": {
                        "name": "Air temperature"
                    },
                    "clearance_height": {
                        "name": "Clearance height"
                    },
                    "current_measurement": {
                        "name": "Water level"
                    },
                    "oxygen_level": {
                        "name": "Oxygen level"
                    },
                    "water_flow": {
                        "name": "Water volume flow"
                    },
                    "water_level": {
                        "name": "Water level"
                    },
                    "water_speed": {
                        "name": "Water flow speed"
                    },
                    "water_temperature": {
                        "name": "Water temperature"
                    }
                }
            }
        },
        "persistent_notification": {
            "services": {
                "create": {
                    "description": "Shows a notification on the **Notifications** panel.",
                    "fields": {
                        "message": {
                            "description": "Message body of the notification.",
                            "name": "Message"
                        },
                        "notification_id": {
                            "description": "ID of the notification. This new notification will overwrite an existing notification with the same ID.",
                            "name": "Notification ID"
                        },
                        "title": {
                            "description": "Optional title of the notification.",
                            "name": "Title"
                        }
                    },
                    "name": "Create"
                },
                "dismiss": {
                    "description": "Removes a notification from the **Notifications** panel.",
                    "fields": {
                        "notification_id": {
                            "description": "ID of the notification to be removed.",
                            "name": "Notification ID"
                        }
                    },
                    "name": "Dismiss"
                },
                "dismiss_all": {
                    "description": "Removes all notifications from the **Notifications** panel.",
                    "name": "Dismiss all"
                }
            }
        },
        "philips_js": {
            "entity": {
                "light": {
                    "ambilight": {
                        "name": "Ambilight"
                    }
                },
                "switch": {
                    "ambilight_hue": {
                        "name": "Ambilight + Hue"
                    },
                    "screen_state": {
                        "name": "Screen state"
                    }
                }
            }
        },
        "pilight": {
            "services": {
                "send": {
                    "fields": {
                        "protocol": {
                            "description": "Protocol that Pilight recognises. See https:\/\/manual.pilight.org\/protocols\/index.html for supported protocols and additional parameters that each protocol supports."
                        }
                    }
                }
            }
        },
        "point": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL.",
                    "unknown_authorize_url_generation": "Unknown error generating an authorise URL."
                }
            }
        },
        "poolsense": {
            "entity": {
                "binary_sensor": {
                    "chlorine_status": {
                        "name": "Chlorine status"
                    },
                    "ph_status": {
                        "name": "pH status"
                    }
                },
                "sensor": {
                    "chlorine": {
                        "name": "Chlorine"
                    },
                    "chlorine_high": {
                        "name": "Chlorine high"
                    },
                    "chlorine_low": {
                        "name": "Chlorine low"
                    },
                    "last_seen": {
                        "name": "Last seen"
                    },
                    "ph": {
                        "name": "pH"
                    },
                    "ph_high": {
                        "name": "pH high"
                    },
                    "ph_low": {
                        "name": "pH low"
                    }
                }
            }
        },
        "radarr": {
            "entity": {
                "sensor": {
                    "movies": {
                        "name": "Films"
                    }
                }
            }
        },
        "radiotherm": {
            "entity": {
                "switch": {
                    "hold": {
                        "name": "Hold"
                    }
                }
            }
        },
        "rainmachine": {
            "services": {
                "stop_program": {
                    "name": "Stop programme"
                },
                "stop_zone": {
                    "description": "Stops a zone.",
                    "name": "Stop zone"
                },
                "unpause_watering": {
                    "description": "Unpauses all paused watering activities.",
                    "fields": {
                        "device_id": {
                            "description": "The controller whose watering activities should be unpaused."
                        }
                    },
                    "name": "Unpause all watering"
                },
                "unrestrict_watering": {
                    "description": "Unrestrict all watering activities.",
                    "fields": {
                        "device_id": {
                            "description": "The controller whose watering activities should be unrestricted."
                        }
                    },
                    "name": "Unrestrict all watering"
                }
            }
        },
        "rdw": {
            "config": {
                "error": {
                    "unknown_license_plate": "Unknown licence plate"
                },
                "step": {
                    "user": {
                        "data": {
                            "license_plate": "Licence plate"
                        }
                    }
                }
            }
        },
        "recorder": {
            "services": {
                "disable": {
                    "description": "Stops the recording of events and state changes.",
                    "name": "Disable"
                },
                "enable": {
                    "description": "Starts the recording of events and state changes.",
                    "name": "Enable"
                },
                "purge": {
                    "description": "Starts purge task - to clean up old data from your database.",
                    "fields": {
                        "apply_filter": {
                            "description": "Applies `entity_id` and `event_type` filters in addition to time-based purge.",
                            "name": "Apply filter"
                        },
                        "keep_days": {
                            "description": "Number of days to keep the data in the database. Starting today, counting backward. A value of `7` means that everything older than a week will be purged.",
                            "name": "Days to keep"
                        },
                        "repack": {
                            "description": "Attempt to save disk space by rewriting the entire database file.",
                            "name": "Repack"
                        }
                    },
                    "name": "Purge"
                },
                "purge_entities": {
                    "description": "Starts a purge task to remove the data related to specific entities from your database.",
                    "fields": {
                        "domains": {
                            "description": "List of domains for which the data needs to be removed from the recorder database.",
                            "name": "Domains to remove"
                        },
                        "entity_globs": {
                            "description": "List of glob patterns used to select the entities for which the data is to be removed from the recorder database.",
                            "name": "Entity globs to remove"
                        },
                        "keep_days": {
                            "description": "Number of days to keep the data for rows matching the filter. Starting today, counting backward. A value of `7` means that everything older than a week will be purged. The default of 0 days will remove all matching rows immediately.",
                            "name": "Days to keep"
                        }
                    },
                    "name": "Purge entities"
                }
            }
        },
        "remember_the_milk": {
            "services": {
                "complete_task": {
                    "description": "Completes a task that was previously created.",
                    "fields": {
                        "id": {
                            "description": "Identifier that was defined when creating the task."
                        }
                    }
                }
            }
        },
        "remote": {
            "services": {
                "delete_command": {
                    "description": "Deletes a command or a list of commands from the database.",
                    "fields": {
                        "command": {
                            "description": "The single command or the list of commands to be deleted.",
                            "name": "Command"
                        },
                        "device": {
                            "description": "Device from which commands will be deleted.",
                            "name": "Device"
                        }
                    },
                    "name": "Delete command"
                },
                "learn_command": {
                    "description": "Learns a command or a list of commands from a device.",
                    "fields": {
                        "alternative": {
                            "description": "If code must be stored as an alternative. This is useful for discrete codes. Discrete codes are used for toggles that only perform one function. For example, a code to only turn a device on. If it is on already, sending the code won't change the state.",
                            "name": "Alternative"
                        },
                        "command": {
                            "description": "A single command or a list of commands to learn.",
                            "name": "Command"
                        },
                        "command_type": {
                            "description": "The type of command to be learned.",
                            "name": "Command type"
                        },
                        "device": {
                            "description": "Device ID to learn command from.",
                            "name": "Device"
                        },
                        "timeout": {
                            "description": "Timeout for the command to be learned.",
                            "name": "Timeout"
                        }
                    },
                    "name": "Learn command"
                },
                "send_command": {
                    "description": "Sends a command or a list of commands to a device.",
                    "fields": {
                        "command": {
                            "description": "A single command or a list of commands to send.",
                            "name": "Command"
                        },
                        "delay_secs": {
                            "description": "The time you want to wait in between repeated commands.",
                            "name": "Delay seconds"
                        },
                        "device": {
                            "description": "Device ID to send command to.",
                            "name": "Device"
                        },
                        "hold_secs": {
                            "description": "The time you want to have it held before the release is sent.",
                            "name": "Hold seconds"
                        },
                        "num_repeats": {
                            "description": "The number of times you want to repeat the commands.",
                            "name": "Repeats"
                        }
                    },
                    "name": "Send command"
                },
                "toggle": {
                    "description": "Toggles a device on\/off.",
                    "name": "Toggle"
                },
                "turn_off": {
                    "description": "Turns the device off."
                },
                "turn_on": {
                    "description": "Sends the power on command.",
                    "fields": {
                        "activity": {
                            "description": "Activity ID or activity name to be started.",
                            "name": "Activity"
                        }
                    }
                }
            }
        },
        "renson": {
            "entity": {
                "sensor": {
                    "air_quality": {
                        "name": "Air quality"
                    },
                    "air_quality_category": {
                        "name": "Air quality category",
                        "state": {
                            "bad": "Bad",
                            "good": "Good",
                            "poor": "Poor"
                        }
                    },
                    "breeze_level": {
                        "name": "Breeze level",
                        "state": {
                            "breeze": "Breeze",
                            "level1": "Level 1",
                            "level2": "Level 2",
                            "level3": "Level 3",
                            "level4": "Level 4"
                        }
                    },
                    "breeze_temperature": {
                        "name": "Breeze temperature"
                    },
                    "bypass_activation_temperature": {
                        "name": "Bypass activation temperature"
                    },
                    "bypass_level": {
                        "name": "Bypass level"
                    },
                    "co2_hysteresis": {
                        "name": "CO2 hysteresis"
                    },
                    "co2_quality_category": {
                        "name": "CO2 quality category",
                        "state": {
                            "bad": "Bad",
                            "good": "Good",
                            "poor": "Poor"
                        }
                    },
                    "co2_threshold": {
                        "name": "CO2 threshold"
                    },
                    "day_pollution_level": {
                        "name": "Day pollution level",
                        "state": {
                            "level1": "Level 1",
                            "level2": "Level 2",
                            "level3": "Level 3",
                            "level4": "Level 4"
                        }
                    },
                    "extract_air_temperature": {
                        "name": "Extract air temperature"
                    },
                    "filter_change": {
                        "name": "Filter change"
                    },
                    "manual_level": {
                        "name": "Manual level",
                        "state": {
                            "breeze": "Breeze",
                            "holiday": "Holiday",
                            "level1": "Level 1",
                            "level2": "Level 2",
                            "level3": "Level 3",
                            "level4": "Level 4"
                        }
                    },
                    "night_pollution_level": {
                        "name": "Night pollution level",
                        "state": {
                            "level1": "Level 1",
                            "level2": "Level 2",
                            "level3": "Level 3",
                            "level4": "Level 4"
                        }
                    },
                    "outdoor_air_temperature": {
                        "name": "Outdoor air temperature"
                    },
                    "start_day_time": {
                        "name": "Start day time"
                    },
                    "start_night_time": {
                        "name": "Start night time"
                    },
                    "total_airflow_in": {
                        "name": "Total airflow in"
                    },
                    "total_airflow_out": {
                        "name": "Total airflow out"
                    },
                    "ventilation_level": {
                        "name": "Ventilation level",
                        "state": {
                            "breeze": "Breeze",
                            "holiday": "Holiday",
                            "level1": "Level 1",
                            "level2": "Level 2",
                            "level3": "Level 3",
                            "level4": "Level 4"
                        }
                    }
                }
            }
        },
        "reolink": {
            "config": {
                "error": {
                    "webhook_exception": "Home Assistant URL is not available, go to Settings > System > Network > Home Assistant URL and correct the URLs, see {more_info}"
                }
            },
            "entity": {
                "select": {
                    "day_night_mode": {
                        "state": {
                            "color": "Colour"
                        }
                    }
                }
            },
            "issues": {
                "firmware_update": {
                    "description": "\"{name}\" with model \"{model}\" and hardware version \"{hw_version}\" is running an old firmware version \"{current_firmware}\", while at least firmware version \"{required_firmware}\" is required for proper operation of the Reolink integration. The latest firmware can be downloaded from the [Reolink download centre]({download_link})."
                },
                "ssl": {
                    "description": "Global SSL certificate configured in the [configuration.yaml under http]({ssl_link}) while a local HTTP address `{base_url}` is configured under \"Home Assistant URL\" in the [network settings]({network_link}). Therefore the Reolink device can not reach Home Assistant to push its motion\/AI events. Please make sure the local HTTP adress is not covered by the SSL certificate, by for instance using [NGINX add-on]({nginx_link}) instead of a globally enforced SSL certificate.",
                    "title": "Reolink incompatible with global SSL certificate"
                }
            }
        },
        "rflink": {
            "services": {
                "send_command": {
                    "fields": {
                        "command": {
                            "name": "Command"
                        },
                        "device_id": {
                            "description": "RFLink device ID.",
                            "name": "Device ID"
                        }
                    },
                    "name": "Send command"
                }
            }
        },
        "rfxtrx": {
            "services": {
                "send": {
                    "description": "Sends a raw event on radio.",
                    "fields": {
                        "event": {
                            "description": "A hexadecimal string to send.",
                            "name": "Event"
                        }
                    },
                    "name": "Send"
                }
            }
        },
        "ring": {
            "services": {
                "update": {
                    "description": "Updates the data we have for all your ring devices.",
                    "name": "Update"
                }
            }
        },
        "roborock": {
            "entity": {
                "number": {
                    "volume": {
                        "name": "Volume"
                    }
                },
                "switch": {
                    "off_peak_switch": {
                        "name": "Off-peak charging"
                    }
                },
                "time": {
                    "dnd_end_time": {
                        "name": "Do not disturb end"
                    },
                    "dnd_start_time": {
                        "name": "Do not disturb begin"
                    },
                    "off_peak_end_time": {
                        "name": "Off-peak end"
                    },
                    "off_peak_start_time": {
                        "name": "Off-peak start"
                    }
                }
            }
        },
        "roku": {
            "services": {
                "search": {
                    "description": "Emulates opening the search screen and entering the search keyword.",
                    "fields": {
                        "keyword": {
                            "description": "The keyword to search for.",
                            "name": "Keyword"
                        }
                    },
                    "name": "Search"
                }
            }
        },
        "roon": {
            "config": {
                "step": {
                    "link": {
                        "description": "You must authorise Home Assistant in Roon. After you click submit, go to the Roon Core application, open Settings and enable HomeAssistant on the Extensions tab.",
                        "title": "Authorise HomeAssistant in Roon"
                    }
                }
            },
            "services": {
                "transfer": {
                    "description": "Transfers playback from one player to another.",
                    "fields": {
                        "transfer_id": {
                            "description": "ID of the destination player.",
                            "name": "Transfer ID"
                        }
                    },
                    "name": "Transfer"
                }
            }
        },
        "route53": {
            "services": {
                "update_records": {
                    "description": "Triggers update of records.",
                    "name": "Update records"
                }
            }
        },
        "ruuvi_gateway": {
            "config": {
                "step": {
                    "user": {
                        "data": {
                            "token": "Bearer token (configured during gateway setup)"
                        }
                    }
                }
            }
        },
        "sabnzbd": {
            "services": {
                "pause": {
                    "description": "Pauses downloads.",
                    "fields": {
                        "api_key": {
                            "description": "The SABnzbd API key to pause downloads.",
                            "name": "SABnzbd API key"
                        }
                    },
                    "name": "Pause"
                },
                "resume": {
                    "description": "Resumes downloads.",
                    "fields": {
                        "api_key": {
                            "description": "The SABnzbd API key to resume downloads.",
                            "name": "SABnzbd API key"
                        }
                    },
                    "name": "Resume"
                },
                "set_speed": {
                    "description": "Sets the download speed limit.",
                    "fields": {
                        "api_key": {
                            "description": "The SABnzbd API key to set speed limit."
                        }
                    }
                }
            }
        },
        "samsungtv": {
            "config": {
                "abort": {
                    "auth_missing": "Home Assistant is not authorised to connect to this Samsung TV. Check your TV's External Device Manager settings to authorise Home Assistant."
                },
                "step": {
                    "confirm": {
                        "description": "Do you want to set up {device}? If you never connected Home Assistant before you should see a popup on your TV asking for authorisation."
                    },
                    "user": {
                        "description": "Enter your Samsung TV information. If you never connected Home Assistant before you should see a popup on your TV asking for authorisation."
                    }
                }
            }
        },
        "scene": {
            "services": {
                "apply": {
                    "description": "Activates a scene with configuration.",
                    "fields": {
                        "entities": {
                            "description": "List of entities and their target state.",
                            "name": "Entities state"
                        },
                        "transition": {
                            "description": "Time it takes the devices to transition into the states defined in the scene.",
                            "name": "Transition"
                        }
                    },
                    "name": "Apply"
                },
                "create": {
                    "description": "Creates a new scene.",
                    "fields": {
                        "entities": {
                            "description": "List of entities and their target state. If your entities are already in the target state right now, use `snapshot_entities` instead.",
                            "name": "Entities state"
                        },
                        "scene_id": {
                            "description": "The entity ID of the new scene.",
                            "name": "Scene entity ID"
                        },
                        "snapshot_entities": {
                            "description": "List of entities to be included in the snapshot. By taking a snapshot, you record the current state of those entities. If you do not want to use the current state of all your entities for this scene, you can combine the `snapshot_entities` with `entities`.",
                            "name": "Snapshot entities"
                        }
                    },
                    "name": "Create"
                },
                "reload": {
                    "description": "Reloads the scenes from the YAML-configuration.",
                    "name": "Reload"
                },
                "turn_on": {
                    "description": "Activates a scene.",
                    "fields": {
                        "transition": {
                            "description": "Time it takes the devices to transition into the states defined in the scene.",
                            "name": "Transition"
                        }
                    },
                    "name": "Activate"
                }
            }
        },
        "schlage": {
            "entity": {
                "switch": {
                    "beeper": {
                        "name": "Keypress Beep"
                    },
                    "lock_and_leave": {
                        "name": "1-Touch Locking"
                    }
                }
            }
        },
        "scrape": {
            "selector": {
                "device_class": {
                    "options": {
                        "ph": "pH"
                    }
                }
            }
        },
        "screenlogic": {
            "services": {
                "set_color_mode": {
                    "description": "Sets the colour mode for all colour-capable lights attached to this ScreenLogic gateway.",
                    "fields": {
                        "color_mode": {
                            "description": "The ScreenLogic colour mode to set.",
                            "name": "Colour Mode"
                        }
                    },
                    "name": "Set Colour Mode"
                }
            }
        },
        "script": {
            "services": {
                "reload": {
                    "description": "Reloads all the available scripts.",
                    "name": "Reload"
                },
                "toggle": {
                    "description": "Toggle a script. Starts it, if isn't running, stops it otherwise.",
                    "name": "Toggle"
                },
                "turn_off": {
                    "description": "Stops a running script."
                }
            }
        },
        "select": {
            "services": {
                "select_first": {
                    "description": "Selects the first option.",
                    "name": "First"
                },
                "select_last": {
                    "description": "Selects the last option.",
                    "name": "Last"
                },
                "select_next": {
                    "description": "Selects the next option.",
                    "fields": {
                        "cycle": {
                            "description": "If the option should cycle from the last to the first.",
                            "name": "Cycle"
                        }
                    },
                    "name": "Next"
                },
                "select_option": {
                    "description": "Selects an option.",
                    "fields": {
                        "option": {
                            "description": "Option to be selected.",
                            "name": "Option"
                        }
                    },
                    "name": "Select"
                },
                "select_previous": {
                    "description": "Selects the previous option.",
                    "fields": {
                        "cycle": {
                            "description": "If the option should cycle from the first to the last.",
                            "name": "Cycle"
                        }
                    },
                    "name": "Previous"
                }
            }
        },
        "sensibo": {
            "entity": {
                "select": {
                    "horizontalswing": {
                        "state": {
                            "fixedcenter": "Fixed centre",
                            "fixedcenterleft": "Fixed centre left",
                            "fixedcenterright": "Fixed centre right",
                            "rangecenter": "Range centre"
                        }
                    }
                },
                "sensor": {
                    "climate_react_high": {
                        "state_attributes": {
                            "fanlevel": {
                                "state": {
                                    "medium_high": "Medium high",
                                    "quiet": "Quiet"
                                }
                            },
                            "horizontalswing": {
                                "name": "Horizontal swing",
                                "state": {
                                    "fixedcenter": "Fixed centre",
                                    "fixedcenterleft": "Fixed centre left",
                                    "fixedcenterright": "Fixed centre right",
                                    "rangecenter": "Range centre"
                                }
                            },
                            "mode": {
                                "name": "Mode"
                            },
                            "swing": {
                                "state": {
                                    "fixedbottom": "Fixed bottom",
                                    "fixedmiddle": "Fixed middle",
                                    "fixedmiddlebottom": "Fixed middle bottom",
                                    "fixedmiddletop": "Fixed middle top",
                                    "fixedtop": "Fixed top",
                                    "horizontal": "Horizontal",
                                    "rangebottom": "Range bottom",
                                    "rangefull": "Range full",
                                    "rangemiddle": "Range middle",
                                    "rangetop": "Range top"
                                }
                            },
                            "temperatureunit": {
                                "name": "Temperature unit",
                                "state": {
                                    "c": "Celsius",
                                    "f": "Fahrenheit"
                                }
                            }
                        }
                    },
                    "climate_react_low": {
                        "state_attributes": {
                            "fanlevel": {
                                "state": {
                                    "medium_high": "Medium high",
                                    "quiet": "Quiet"
                                }
                            },
                            "horizontalswing": {
                                "name": "Horizontal swing",
                                "state": {
                                    "fixedcenter": "Fixed centre",
                                    "fixedcenterleft": "Fixed centre left",
                                    "fixedcenterright": "Fixed centre right",
                                    "rangecenter": "Range centre"
                                }
                            },
                            "mode": {
                                "name": "Mode"
                            },
                            "swing": {
                                "state": {
                                    "fixedbottom": "Fixed bottom",
                                    "fixedmiddle": "Fixed middle",
                                    "fixedmiddlebottom": "Fixed middle bottom",
                                    "fixedmiddletop": "Fixed middle top",
                                    "fixedtop": "Fixed top",
                                    "horizontal": "Horizontal",
                                    "rangebottom": "Range bottom",
                                    "rangefull": "Range full",
                                    "rangemiddle": "Range middle",
                                    "rangetop": "Range top"
                                }
                            },
                            "temperatureunit": {
                                "name": "Temperature unit",
                                "state": {
                                    "c": "Celsius",
                                    "f": "Fahrenheit"
                                }
                            }
                        }
                    }
                },
                "switch": {
                    "climate_react_switch": {
                        "state_attributes": {
                            "type": {
                                "name": "Type",
                                "state": {
                                    "feelslike": "Feels like"
                                }
                            }
                        }
                    },
                    "timer_on_switch": {
                        "state_attributes": {
                            "id": {
                                "name": "ID"
                            },
                            "turn_on": {
                                "name": "Turns on"
                            }
                        }
                    }
                }
            }
        },
        "sensor": {
            "device_automation": {
                "condition_type": {
                    "is_ph": "Current {entity_name} pH level"
                },
                "trigger_type": {
                    "ph": "{entity_name} pH level changes"
                }
            },
            "entity_component": {
                "ph": {
                    "name": "pH"
                }
            }
        },
        "shelly": {
            "issues": {
                "device_not_calibrated": {
                    "description": "Shelly device {device_name} with IP address {ip_address} requires calibration. To calibrate the device, it must be rebooted after proper installation on the valve. You can reboot the device in its web panel, go to 'Settings' > 'Device Reboot'.",
                    "title": "Shelly device {device_name} is not calibrated"
                },
                "push_update_failure": {
                    "description": "Home Assistant is not receiving push updates from the Shelly device {device_name} with IP address {ip_address}. Check the CoIoT configuration in the web panel of the device and your network configuration.",
                    "title": "Shelly device {device_name} push update failure"
                }
            }
        },
        "shopping_list": {
            "services": {
                "complete_item": {
                    "name": "Complete item"
                },
                "incomplete_all": {
                    "description": "Marks all items as incomplete in the shopping list.",
                    "name": "Incomplete all"
                },
                "incomplete_item": {
                    "description": "Marks the first item with matching name as incomplete in the shopping list.",
                    "fields": {
                        "name": {
                            "description": "The name of the item to mark as incomplete."
                        }
                    },
                    "name": "Incomplete item"
                },
                "remove_item": {
                    "description": "Removes the first item with matching name from the shopping list.",
                    "fields": {
                        "name": {
                            "description": "The name of the item to remove."
                        }
                    },
                    "name": "Remove item"
                },
                "sort": {
                    "description": "Sorts all items by name in the shopping list.",
                    "fields": {
                        "reverse": {
                            "description": "Whether to sort in reverse (descending) order.",
                            "name": "Sort reverse"
                        }
                    },
                    "name": "Sort all items"
                }
            }
        },
        "simplisafe": {
            "config": {
                "step": {
                    "user": {
                        "description": "SimpliSafe authenticates users via its web app. Due to technical limitations, there is a manual step at the end of this process; please ensure that you read the [documentation](http:\/\/home-assistant.io\/integrations\/simplisafe#getting-an-authorization-code) before starting.\n\nWhen you are ready, click [here]({url}) to open the SimpliSafe web app and input your credentials. If you've already logged into SimpliSafe in your browser, you may want to open a new tab, then copy\/paste the above URL into that tab.\n\nWhen the process is complete, return here and input the authorisation code from the `com.simplisafe.mobile` URL."
                    }
                }
            },
            "services": {
                "remove_pin": {
                    "description": "Removes a PIN by its label or value.",
                    "fields": {
                        "device_id": {
                            "description": "The system to remove the PIN from.",
                            "name": "System"
                        },
                        "label_or_pin": {
                            "description": "The label\/value to remove.",
                            "name": "Label\/PIN"
                        }
                    },
                    "name": "Remove PIN"
                },
                "set_pin": {
                    "description": "Sets\/updates a PIN.",
                    "fields": {
                        "device_id": {
                            "description": "The system to set the PIN on.",
                            "name": "System"
                        },
                        "label": {
                            "description": "The label of the PIN.",
                            "name": "Label"
                        },
                        "pin": {
                            "description": "The value of the PIN.",
                            "name": "PIN"
                        }
                    },
                    "name": "Set PIN"
                },
                "set_system_properties": {
                    "description": "Sets one or more system properties.",
                    "fields": {
                        "alarm_duration": {
                            "description": "The length of a triggered alarm.",
                            "name": "Alarm duration"
                        },
                        "alarm_volume": {
                            "description": "The volume level of a triggered alarm.",
                            "name": "Alarm volume"
                        },
                        "chime_volume": {
                            "description": "The volume level of the door chime.",
                            "name": "Chime volume"
                        },
                        "device_id": {
                            "description": "The system whose properties should be set.",
                            "name": "System"
                        },
                        "entry_delay_away": {
                            "description": "How long to delay when entering while \"away\".",
                            "name": "Entry delay away"
                        },
                        "entry_delay_home": {
                            "description": "How long to delay when entering while \"home\".",
                            "name": "Entry delay home"
                        },
                        "exit_delay_away": {
                            "description": "How long to delay when exiting while \"away\".",
                            "name": "Exit delay away"
                        },
                        "exit_delay_home": {
                            "description": "How long to delay when exiting while \"home\".",
                            "name": "Exit delay home"
                        },
                        "light": {
                            "description": "Whether the armed light should be visible.",
                            "name": "Light"
                        },
                        "voice_prompt_volume": {
                            "description": "The volume level of the voice prompt.",
                            "name": "Voice prompt volume"
                        }
                    },
                    "name": "Set system properties"
                }
            }
        },
        "siren": {
            "services": {
                "toggle": {
                    "description": "Toggles the siren on\/off.",
                    "name": "Toggle"
                },
                "turn_off": {
                    "description": "Turns the siren off."
                },
                "turn_on": {
                    "description": "Turns the siren on.",
                    "fields": {
                        "duration": {
                            "description": "Number of seconds the sound is played. Must be supported by the integration.",
                            "name": "Duration"
                        },
                        "tone": {
                            "description": "The tone to emit. When `available_tones` property is a map, either the key or the value can be used. Must be supported by the integration.",
                            "name": "Tone"
                        },
                        "volume_level": {
                            "description": "The volume. 0 is inaudible, 1 is the maximum volume. Must be supported by the integration.",
                            "name": "Volume"
                        }
                    }
                }
            }
        },
        "smappee": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL."
                }
            }
        },
        "smartthings": {
            "config": {
                "error": {
                    "token_unauthorized": "The token is invalid or no longer authorised."
                },
                "step": {
                    "authorize": {
                        "title": "Authorise Home Assistant"
                    },
                    "select_location": {
                        "description": "Please select the SmartThings Location you wish to add to Home Assistant.  We will then open a new window and ask you to login and authorise installation of the Home Assistant integration into the selected location."
                    }
                }
            }
        },
        "smarttub": {
            "services": {
                "reset_reminder": {
                    "description": "Reset a reminder, and set the next time it will be triggered.",
                    "fields": {
                        "days": {
                            "description": "The number of days when the next reminder should trigger."
                        }
                    },
                    "name": "Reset a reminder"
                },
                "set_primary_filtration": {
                    "description": "Updates the primary filtration settings.",
                    "fields": {
                        "duration": {
                            "description": "The desired duration of the primary filtration cycle.",
                            "name": "Duration"
                        },
                        "start_hour": {
                            "description": "The hour of the day at which to begin the primary filtration cycle."
                        }
                    }
                }
            }
        },
        "snapcast": {
            "services": {
                "join": {
                    "fields": {
                        "master": {
                            "description": "Entity ID of the player to synchronise to."
                        }
                    }
                }
            }
        },
        "snooz": {
            "services": {
                "transition_off": {
                    "fields": {
                        "duration": {
                            "name": "Transition duration"
                        }
                    },
                    "name": "Transition off"
                },
                "transition_on": {
                    "description": "Transitions to a target volume level over time.",
                    "fields": {
                        "duration": {
                            "description": "Time it takes to reach the target volume level.",
                            "name": "Transition duration"
                        },
                        "volume": {
                            "description": "If not specified, the volume level is read from the device.",
                            "name": "Target volume"
                        }
                    },
                    "name": "Transition on"
                }
            }
        },
        "soma": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL."
                }
            }
        },
        "somfy": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL."
                }
            }
        },
        "songpal": {
            "services": {
                "set_sound_setting": {
                    "description": "Change sound setting.",
                    "fields": {
                        "name": {
                            "description": "Name of the setting."
                        },
                        "value": {
                            "description": "Value to set.",
                            "name": "Value"
                        }
                    },
                    "name": "Sets sound setting"
                }
            }
        },
        "sonos": {
            "entity": {
                "binary_sensor": {
                    "microphone": {
                        "name": "Microphone"
                    }
                },
                "number": {
                    "audio_delay": {
                        "name": "Audio delay"
                    },
                    "balance": {
                        "name": "Balance"
                    },
                    "bass": {
                        "name": "Bass"
                    },
                    "music_surround_level": {
                        "name": "Music surround level"
                    },
                    "sub_gain": {
                        "name": "Sub gain"
                    },
                    "surround_level": {
                        "name": "Surround level"
                    },
                    "treble": {
                        "name": "Treble"
                    }
                },
                "sensor": {
                    "audio_input_format": {
                        "name": "Audio input format"
                    }
                },
                "switch": {
                    "buttons_enabled": {
                        "name": "Touch controls"
                    },
                    "cross_fade": {
                        "name": "Crossfade"
                    },
                    "dialog_level": {
                        "name": "Speech enhancement"
                    },
                    "loudness": {
                        "name": "Loudness"
                    },
                    "night_mode": {
                        "name": "Night sound"
                    },
                    "status_light": {
                        "name": "Status light"
                    },
                    "sub_enabled": {
                        "name": "Subwoofer enabled"
                    },
                    "surround_enabled": {
                        "name": "Surround enabled"
                    },
                    "surround_mode": {
                        "name": "Surround music full volume"
                    }
                }
            },
            "services": {
                "clear_sleep_timer": {
                    "description": "Clears a Sonos timer.",
                    "name": "Clear timer"
                },
                "play_queue": {
                    "description": "Start playing the queue from the first item.",
                    "fields": {
                        "queue_position": {
                            "description": "Position of the song in the queue to start playing from.",
                            "name": "Queue position"
                        }
                    },
                    "name": "Play queue"
                },
                "remove_from_queue": {
                    "description": "Removes an item from the queue.",
                    "fields": {
                        "queue_position": {
                            "description": "Position in the queue to remove.",
                            "name": "Queue position"
                        }
                    },
                    "name": "Remove from queue"
                },
                "restore": {
                    "description": "Restores a snapshot of the media player.",
                    "fields": {
                        "entity_id": {
                            "description": "Name of entity that will be restored.",
                            "name": "Entity"
                        },
                        "with_group": {
                            "description": "True or False. Also restore the group layout.",
                            "name": "With group"
                        }
                    },
                    "name": "Restore"
                },
                "set_sleep_timer": {
                    "fields": {
                        "sleep_time": {
                            "name": "Sleep Time"
                        }
                    },
                    "name": "Set timer"
                },
                "snapshot": {
                    "description": "Takes a snapshot of the media player.",
                    "fields": {
                        "entity_id": {
                            "description": "Name of entity that will be snapshot.",
                            "name": "Entity"
                        },
                        "with_group": {
                            "description": "True or False. Also snapshot the group layout.",
                            "name": "With group"
                        }
                    },
                    "name": "Snapshot"
                },
                "update_alarm": {
                    "description": "Updates an alarm with new time and volume settings.",
                    "fields": {
                        "alarm_id": {
                            "description": "ID for the alarm to be updated.",
                            "name": "Alarm ID"
                        },
                        "enabled": {
                            "description": "Enable or disable the alarm.",
                            "name": "Alarm enabled"
                        },
                        "include_linked_zones": {
                            "description": "Enable or disable including grouped rooms.",
                            "name": "Include linked zones"
                        },
                        "time": {
                            "description": "Set time for the alarm.",
                            "name": "Time"
                        },
                        "volume": {
                            "description": "Set alarm volume level.",
                            "name": "Volume"
                        }
                    },
                    "name": "Update alarm"
                }
            }
        },
        "soundtouch": {
            "services": {
                "add_zone_slave": {
                    "description": "Adds a slave to a SoundTouch multi-room zone.",
                    "fields": {
                        "master": {
                            "description": "Name of the master entity that is coordinating the multi-room zone. Platform dependent.",
                            "name": "Master"
                        },
                        "slaves": {
                            "description": "Name of slaves entities to add to the existing zone."
                        }
                    },
                    "name": "Add zone slave"
                },
                "create_zone": {
                    "description": "Creates a SoundTouch multi-room zone.",
                    "fields": {
                        "master": {
                            "description": "Name of the master entity that will coordinate the multi-room zone. Platform dependent.",
                            "name": "Master"
                        },
                        "slaves": {
                            "description": "Name of slaves entities to add to the new zone."
                        }
                    }
                }
            }
        },
        "spider": {
            "entity": {
                "sensor": {
                    "power_consumption": {
                        "name": "Power consumption"
                    },
                    "total_energy_today": {
                        "name": "Total energy today"
                    }
                }
            }
        },
        "spotify": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL."
                }
            }
        },
        "sql": {
            "selector": {
                "device_class": {
                    "options": {
                        "ph": "pH"
                    }
                }
            }
        },
        "starline": {
            "entity": {
                "binary_sensor": {
                    "alarm": {
                        "name": "Alarm"
                    },
                    "doors": {
                        "name": "Doors"
                    },
                    "hand_brake": {
                        "name": "Hand brake"
                    },
                    "hood": {
                        "name": "Bonnet"
                    },
                    "trunk": {
                        "name": "Trunk"
                    }
                },
                "device_tracker": {
                    "location": {
                        "name": "Location"
                    }
                },
                "lock": {
                    "security": {
                        "name": "Security"
                    }
                },
                "sensor": {
                    "balance": {
                        "name": "Balance"
                    },
                    "engine_temperature": {
                        "name": "Engine temperature"
                    },
                    "errors": {
                        "name": "OBD errors"
                    },
                    "fuel": {
                        "name": "Fuel volume"
                    },
                    "gsm_signal": {
                        "name": "GSM signal"
                    },
                    "interior_temperature": {
                        "name": "Interior temperature"
                    },
                    "mileage": {
                        "name": "Mileage"
                    }
                },
                "switch": {
                    "additional_channel": {
                        "name": "Additional channel"
                    },
                    "engine": {
                        "name": "Engine"
                    },
                    "horn": {
                        "name": "Horn"
                    },
                    "webasto": {
                        "name": "Webasto"
                    }
                }
            },
            "services": {
                "set_scan_interval": {
                    "description": "Sets update frequency.",
                    "fields": {
                        "scan_interval": {
                            "description": "Update frequency.",
                            "name": "Scan interval"
                        }
                    },
                    "name": "Set scan interval"
                },
                "set_scan_obd_interval": {
                    "description": "Sets OBD info update frequency.",
                    "fields": {
                        "scan_interval": {
                            "description": "Update frequency.",
                            "name": "Scan interval"
                        }
                    },
                    "name": "Set scan OBD interval"
                },
                "update_state": {
                    "description": "Fetches the last state of the devices from the StarLine server.\n.",
                    "name": "Update state"
                }
            }
        },
        "starlink": {
            "entity": {
                "binary_sensor": {
                    "roaming": {
                        "name": "Roaming mode"
                    }
                }
            }
        },
        "statistics": {
            "issues": {
                "deprecation_warning_characteristic": {
                    "description": "The configuration parameter `state_characteristic` of the statistics integration will become mandatory.\n\nPlease add `state_characteristic: {characteristic}` to the configuration of sensor `{entity}` to keep the current behaviour.\n\nRead the documentation of the statistics integration for further details: https:\/\/www.home-assistant.io\/integrations\/statistics\/"
                },
                "deprecation_warning_size": {
                    "description": "The configuration parameter `sampling_size` of the statistics integration defaulted to the value 20 so far, which will change.\n\nPlease check the configuration for sensor `{entity}` and add suited boundaries, e.g., `sampling_size: 20` to keep the current behaviour. The configuration of the statistics integration will become more flexible with version 2022.12.0 and accept either `sampling_size` or `max_age`, or both settings. The request above prepares your configuration for this otherwise breaking change.\n\nRead the documentation of the statistics integration for further details: https:\/\/www.home-assistant.io\/integrations\/statistics\/"
                }
            }
        },
        "streamlabswater": {
            "services": {
                "set_away_mode": {
                    "description": "Sets the home\/away mode for a Streamlabs Water Monitor.",
                    "fields": {
                        "away_mode": {
                            "description": "Home or away.",
                            "name": "Away mode"
                        }
                    },
                    "name": "Set away mode"
                }
            }
        },
        "subaru": {
            "entity": {
                "lock": {
                    "door_locks": {
                        "name": "Door locks"
                    }
                },
                "sensor": {
                    "average_fuel_consumption": {
                        "name": "Average fuel consumption"
                    },
                    "ev_battery_level": {
                        "name": "EV battery level"
                    },
                    "ev_range": {
                        "name": "EV range"
                    },
                    "ev_time_to_full_charge": {
                        "name": "EV time to full charge"
                    },
                    "fuel_level": {
                        "name": "Fuel level"
                    },
                    "odometer": {
                        "name": "Odometer"
                    },
                    "range": {
                        "name": "Range"
                    },
                    "tire_pressure_front_left": {
                        "name": "Tyre pressure front left"
                    },
                    "tire_pressure_front_right": {
                        "name": "Tyre pressure front right"
                    },
                    "tire_pressure_rear_left": {
                        "name": "Tyre pressure rear left"
                    },
                    "tire_pressure_rear_right": {
                        "name": "Tyre pressure rear right"
                    }
                }
            },
            "services": {
                "unlock_specific_door": {
                    "description": "Unlocks specific door(s).",
                    "fields": {
                        "door": {
                            "description": "One of the following: 'all', 'driver', 'tailgate'.",
                            "name": "Door"
                        }
                    },
                    "name": "Unlock specific door"
                }
            }
        },
        "surepetcare": {
            "services": {
                "set_lock_state": {
                    "description": "Sets lock state.",
                    "fields": {
                        "flap_id": {
                            "description": "Flap ID to lock\/unlock.",
                            "name": "Flap ID"
                        },
                        "lock_state": {
                            "description": "New lock state.",
                            "name": "Lock state"
                        }
                    },
                    "name": "Set lock state"
                },
                "set_pet_location": {
                    "description": "Sets pet location.",
                    "fields": {
                        "location": {
                            "description": "Pet location (Inside or Outside)."
                        },
                        "pet_name": {
                            "description": "Name of pet.",
                            "name": "Pet name"
                        }
                    },
                    "name": "Set pet location"
                }
            }
        },
        "switch": {
            "services": {
                "toggle": {
                    "description": "Toggles a switch on\/off.",
                    "name": "Toggle"
                },
                "turn_off": {
                    "description": "Turns a switch off."
                },
                "turn_on": {
                    "description": "Turns a switch on."
                }
            }
        },
        "synology_dsm": {
            "entity": {
                "sensor": {
                    "cpu_other_load": {
                        "name": "CPU utilisation (other)"
                    },
                    "cpu_system_load": {
                        "name": "CPU utilisation (system)"
                    },
                    "cpu_total_load": {
                        "name": "CPU utilisation (total)"
                    },
                    "cpu_user_load": {
                        "name": "CPU utilisation (user)"
                    }
                }
            }
        },
        "system_bridge": {
            "services": {
                "send_keypress": {
                    "fields": {
                        "key": {
                            "description": "Key to press. List available here: http:\/\/robotjs.io\/docs\/syntax#keys.",
                            "name": "Key"
                        }
                    },
                    "name": "Send keyboard keypress"
                },
                "send_text": {
                    "description": "Sends text for the server to type.",
                    "fields": {
                        "text": {
                            "description": "Text to type.",
                            "name": "Text"
                        }
                    },
                    "name": "Send keyboard text"
                }
            }
        },
        "system_log": {
            "selector": {
                "level": {
                    "options": {
                        "critical": "Critical",
                        "debug": "Debug",
                        "error": "Error",
                        "info": "Info",
                        "warning": "Warning"
                    }
                }
            },
            "services": {
                "clear": {
                    "description": "Clears all log entries.",
                    "name": "Clear all"
                },
                "write": {
                    "description": "Write log entry.",
                    "fields": {
                        "level": {
                            "description": "Log level.",
                            "name": "Level"
                        },
                        "logger": {
                            "description": "Logger name under which to log the message. Defaults to `system_log.external`.",
                            "name": "Logger"
                        },
                        "message": {
                            "description": "Message to log.",
                            "name": "Message"
                        }
                    },
                    "name": "Write"
                }
            }
        },
        "tado": {
            "entity": {
                "binary_sensor": {
                    "connection_state": {
                        "name": "Connection state"
                    },
                    "early_start": {
                        "name": "Early start"
                    },
                    "overlay": {
                        "name": "Overlay"
                    }
                },
                "sensor": {
                    "ac": {
                        "name": "AC"
                    },
                    "automatic_geofencing": {
                        "name": "Automatic geofencing"
                    },
                    "geofencing_mode": {
                        "name": "Geofencing mode"
                    },
                    "heating": {
                        "name": "Heating"
                    },
                    "outdoor_temperature": {
                        "name": "Outdoor temperature"
                    },
                    "solar_percentage": {
                        "name": "Solar percentage"
                    },
                    "tado_mode": {
                        "name": "Tado mode"
                    },
                    "weather_condition": {
                        "name": "Weather condition"
                    }
                }
            },
            "services": {
                "set_climate_temperature_offset": {
                    "description": "Sets the temperature offset of climate entities.",
                    "fields": {
                        "offset": {
                            "description": "Offset you would like (depending on your device).",
                            "name": "Offset"
                        }
                    },
                    "name": "Set climate temperature offset"
                },
                "set_climate_timer": {
                    "description": "Turns on climate entities for a set time.",
                    "fields": {
                        "requested_overlay": {
                            "description": "Choose this or Time Period. Allows you to choose an overlay. MANUAL:=Overlay until user removes; NEXT_TIME_BLOCK:=Overlay until next timeblock; TADO_DEFAULT:=Overlay based on tado app setting.",
                            "name": "Overlay"
                        },
                        "temperature": {
                            "description": "Temperature to set climate entity to.",
                            "name": "Temperature"
                        },
                        "time_period": {
                            "description": "Choose this or Overlay. Set the time period for the change if you want to be specific. Alternatively use Overlay.",
                            "name": "Time period"
                        }
                    },
                    "name": "Set climate timer"
                },
                "set_water_heater_timer": {
                    "description": "Turns on water heater for a set time.",
                    "fields": {
                        "temperature": {
                            "description": "Temperature to set heater to.",
                            "name": "Temperature"
                        },
                        "time_period": {
                            "description": "Set the time period for the boost.",
                            "name": "Time period"
                        }
                    },
                    "name": "Set water heater timer"
                }
            }
        },
        "tautulli": {
            "entity": {
                "sensor": {
                    "full_title": {
                        "name": "Full title"
                    },
                    "lan_bandwidth": {
                        "name": "LAN bandwidth"
                    },
                    "progress": {
                        "name": "Progress"
                    },
                    "session_thumb": {
                        "name": "Session thumbnail"
                    },
                    "state": {
                        "name": "State"
                    },
                    "stream_count_direct_play": {
                        "name": "Direct plays"
                    },
                    "stream_count_direct_stream": {
                        "name": "Direct streams"
                    },
                    "stream_count_transcode": {
                        "name": "Transcodes"
                    },
                    "stream_resolution": {
                        "name": "Stream resolution"
                    },
                    "top_movies": {
                        "name": "Top film"
                    },
                    "top_tv": {
                        "name": "Top TV show"
                    },
                    "top_user": {
                        "name": "Top user"
                    },
                    "total_bandwidth": {
                        "name": "Total bandwidth"
                    },
                    "transcode_decision": {
                        "name": "Transcode decision"
                    },
                    "video_resolution": {
                        "name": "Video resolution"
                    },
                    "wan_bandwidth": {
                        "name": "WAN bandwidth"
                    },
                    "watching_count": {
                        "name": "Watching"
                    }
                }
            }
        },
        "telegram": {
            "services": {
                "reload": {
                    "description": "Reloads telegram notify services.",
                    "name": "Reload"
                }
            }
        },
        "telegram_bot": {
            "services": {
                "edit_message": {
                    "fields": {
                        "message": {
                            "description": "Message body of the notification.",
                            "name": "Message"
                        },
                        "message_id": {
                            "description": "ID of the message to edit.",
                            "name": "Message ID"
                        },
                        "title": {
                            "name": "Title"
                        }
                    },
                    "name": "Edit message"
                },
                "edit_replymarkup": {
                    "description": "Edit the inline keyboard of a previously sent message.",
                    "fields": {
                        "chat_id": {
                            "description": "The chat_id where to edit the reply_markup."
                        },
                        "message_id": {
                            "description": "ID of the message to edit.",
                            "name": "Message ID"
                        }
                    },
                    "name": "Edit reply markup"
                },
                "send_animation": {
                    "description": "Sends an animation.",
                    "fields": {
                        "authentication": {
                            "description": "Define which authentication method to use. Set to `digest` to use HTTP digest authentication, or `bearer_token` for OAuth 2.0 bearer token authentication. Defaults to `basic`.",
                            "name": "Authentication method"
                        },
                        "caption": {
                            "description": "The title of the animation.",
                            "name": "Caption"
                        },
                        "file": {
                            "description": "Local path to a GIF or H.264\/MPEG-4 AVC video without sound.",
                            "name": "File"
                        }
                    }
                },
                "send_document": {
                    "fields": {
                        "keyboard": {
                            "description": "List of rows of commands, comma-separated, to make a custom keyboard."
                        },
                        "password": {
                            "description": "Password (or bearer token) for a URL which require HTTP authentication."
                        },
                        "target": {
                            "description": "An array of pre-authorised chat_ids to send the document to. If not present, first allowed chat_id is the default.",
                            "name": "Target"
                        },
                        "timeout": {
                            "description": "Timeout for send document. Will help with timeout errors (poor internet connection, etc).",
                            "name": "Timeout"
                        },
                        "url": {
                            "description": "Remote path to a document."
                        },
                        "username": {
                            "description": "Username for a URL which require HTTP authentication."
                        },
                        "verify_ssl": {
                            "description": "Enable or disable SSL certificate verification. Set to false if you're downloading the file from a URL and you don't want to validate the SSL certificate of the server.",
                            "name": "Verify SSL"
                        }
                    },
                    "name": "Send document"
                },
                "send_location": {
                    "description": "Sends a location.",
                    "fields": {
                        "keyboard": {
                            "description": "List of rows of commands, comma-separated, to make a custom keyboard."
                        },
                        "latitude": {
                            "description": "The latitude to send."
                        },
                        "longitude": {
                            "description": "The longitude to send."
                        },
                        "target": {
                            "description": "An array of pre-authorised chat_ids to send the location to. If not present, first allowed chat_id is the default."
                        }
                    }
                },
                "send_message": {
                    "fields": {
                        "target": {
                            "description": "An array of pre-authorised chat_ids to send the notification to. If not present, first allowed chat_id is the default."
                        }
                    }
                },
                "send_photo": {
                    "fields": {
                        "authentication": {
                            "description": "Define which authentication method to use. Set to `digest` to use HTTP digest authentication, or `bearer_token` for OAuth 2.0 bearer token authentication. Defaults to `basic`.",
                            "name": "Authentication method"
                        },
                        "caption": {
                            "description": "The title of the image.",
                            "name": "Caption"
                        },
                        "file": {
                            "description": "Local path to an image.",
                            "name": "File"
                        },
                        "keyboard": {
                            "description": "List of rows of commands, comma-separated, to make a custom keyboard."
                        },
                        "password": {
                            "description": "Password (or bearer token) for a URL which require HTTP authentication."
                        },
                        "target": {
                            "description": "An array of pre-authorised chat_ids to send the document to. If not present, first allowed chat_id is the default.",
                            "name": "Target"
                        },
                        "timeout": {
                            "description": "Timeout for send photo. Will help with timeout errors (poor internet connection, etc).",
                            "name": "Timeout"
                        },
                        "url": {
                            "description": "Remote path to an image."
                        },
                        "username": {
                            "description": "Username for a URL which require HTTP authentication."
                        },
                        "verify_ssl": {
                            "description": "Enable or disable SSL certificate verification. Set to false if you're downloading the file from a URL and you don't want to validate the SSL certificate of the server.",
                            "name": "Verify SSL"
                        }
                    },
                    "name": "Send photo"
                },
                "send_poll": {
                    "description": "Sends a poll."
                },
                "send_sticker": {
                    "fields": {
                        "sticker_id": {
                            "description": "ID of a sticker that exists on telegram servers.",
                            "name": "Sticker ID"
                        },
                        "target": {
                            "description": "An array of pre-authorised chat_ids to send the document to. If not present, first allowed chat_id is the default.",
                            "name": "Target"
                        },
                        "timeout": {
                            "description": "Timeout for send sticker. Will help with timeout errors (poor internet connection, etc).",
                            "name": "Timeout"
                        },
                        "url": {
                            "description": "Remote path to a static .webp or animated .tgs sticker."
                        },
                        "username": {
                            "description": "Username for a URL which require HTTP authentication."
                        },
                        "verify_ssl": {
                            "description": "Enable or disable SSL certificate verification. Set to false if you're downloading the file from a URL and you don't want to validate the SSL certificate of the server.",
                            "name": "Verify SSL"
                        }
                    },
                    "name": "Send sticker"
                },
                "send_video": {
                    "description": "Sends a video.",
                    "fields": {
                        "authentication": {
                            "description": "Define which authentication method to use. Set to `digest` to use HTTP digest authentication, or `bearer_token` for OAuth 2.0 bearer token authentication. Defaults to `basic`.",
                            "name": "Authentication method"
                        },
                        "caption": {
                            "description": "The title of the video.",
                            "name": "Caption"
                        },
                        "file": {
                            "description": "Local path to a video.",
                            "name": "File"
                        },
                        "keyboard": {
                            "description": "List of rows of commands, comma-separated, to make a custom keyboard."
                        }
                    }
                },
                "send_voice": {
                    "fields": {
                        "target": {
                            "description": "An array of pre-authorised chat_ids to send the document to. If not present, first allowed chat_id is the default.",
                            "name": "Target"
                        },
                        "timeout": {
                            "description": "Timeout for send voice. Will help with timeout errors (poor internet connection, etc).",
                            "name": "Timeout"
                        },
                        "url": {
                            "description": "Remote path to a voice message."
                        },
                        "username": {
                            "description": "Username for a URL which require HTTP authentication."
                        },
                        "verify_ssl": {
                            "description": "Enable or disable SSL certificate verification. Set to false if you're downloading the file from a URL and you don't want to validate the SSL certificate of the server.",
                            "name": "Verify SSL"
                        }
                    },
                    "name": "Send voice"
                }
            }
        },
        "tellduslive": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL.",
                    "unknown_authorize_url_generation": "Unknown error generating an authorise URL."
                },
                "step": {
                    "auth": {
                        "description": "To link your TelldusLive account:\n 1. Click the link below\n 2. Login to Telldus Live\n 3. Authorise **{app_name}** (click **Yes**).\n 4. Come back here and click **SUBMIT**.\n\n [Link TelldusLive account]({auth_url})"
                    }
                }
            }
        },
        "template": {
            "config": {
                "step": {
                    "user": {
                        "menu_options": {
                            "binary_sensor": "Template a binary sensor"
                        }
                    }
                }
            },
            "services": {
                "reload": {
                    "description": "Reloads template entities from the YAML-configuration.",
                    "name": "Reload"
                }
            }
        },
        "tesla_wall_connector": {
            "entity": {
                "binary_sensor": {
                    "contactor_closed": {
                        "name": "Contactor closed"
                    },
                    "vehicle_connected": {
                        "name": "Vehicle connected"
                    }
                },
                "sensor": {
                    "current_a_a": {
                        "name": "Phase A current"
                    },
                    "current_b_a": {
                        "name": "Phase B current"
                    },
                    "current_c_a": {
                        "name": "Phase C current"
                    },
                    "evse_state": {
                        "name": "State"
                    },
                    "grid_hz": {
                        "name": "Grid frequency"
                    },
                    "grid_v": {
                        "name": "Grid voltage"
                    },
                    "handle_temp_c": {
                        "name": "Handle temperature"
                    },
                    "voltage_a_v": {
                        "name": "Phase A voltage"
                    },
                    "voltage_b_v": {
                        "name": "Phase B voltage"
                    },
                    "voltage_c_v": {
                        "name": "Phase C voltage"
                    }
                }
            }
        },
        "text": {
            "services": {
                "set_value": {
                    "description": "Sets the value.",
                    "fields": {
                        "value": {
                            "description": "Enter your text.",
                            "name": "Value"
                        }
                    },
                    "name": "Set value"
                }
            }
        },
        "time": {
            "services": {
                "set_value": {
                    "description": "Sets the time.",
                    "fields": {
                        "time": {
                            "description": "The time to set.",
                            "name": "Time"
                        }
                    },
                    "name": "Set Time"
                }
            }
        },
        "timer": {
            "services": {
                "cancel": {
                    "description": "Cancels a timer.",
                    "name": "Cancel"
                },
                "change": {
                    "description": "Changes a timer.",
                    "fields": {
                        "duration": {
                            "description": "Duration to add or subtract to the running timer.",
                            "name": "Duration"
                        }
                    },
                    "name": "Change"
                },
                "finish": {
                    "description": "Finishes a timer.",
                    "name": "Finish"
                },
                "pause": {
                    "description": "Pauses a timer.",
                    "name": "Pause"
                },
                "start": {
                    "description": "Starts a timer.",
                    "fields": {
                        "duration": {
                            "description": "Duration the timer requires to finish. [optional].",
                            "name": "Duration"
                        }
                    },
                    "name": "Start"
                }
            }
        },
        "todoist": {
            "services": {
                "new_task": {
                    "description": "Creates a new task and add it to a project.",
                    "fields": {
                        "assignee": {
                            "description": "A member's username of a shared project to assign this task to.",
                            "name": "Assignee"
                        },
                        "content": {
                            "description": "The name of the task.",
                            "name": "Content"
                        }
                    }
                }
            }
        },
        "tolo": {
            "entity": {
                "binary_sensor": {
                    "water_in_valve": {
                        "name": "Water in valve"
                    },
                    "water_out_valve": {
                        "name": "Water out valve"
                    }
                },
                "button": {
                    "next_color": {
                        "name": "Next colour"
                    }
                },
                "number": {
                    "fan_timer": {
                        "name": "Fan timer"
                    },
                    "power_timer": {
                        "name": "Power timer"
                    },
                    "salt_bath_timer": {
                        "name": "Salt bath timer"
                    }
                },
                "select": {
                    "lamp_mode": {
                        "name": "Lamp mode"
                    }
                },
                "sensor": {
                    "fan_timer_remaining": {
                        "name": "Fan timer"
                    },
                    "power_timer_remaining": {
                        "name": "Power timer"
                    },
                    "salt_bath_timer_remaining": {
                        "name": "Salt bath timer"
                    },
                    "tank_temperature": {
                        "name": "Tank temperature"
                    },
                    "water_level": {
                        "name": "Water level"
                    }
                }
            }
        },
        "tomorrowio": {
            "entity": {
                "sensor": {
                    "uv_index": {
                        "state": {
                            "extreme": "Extreme",
                            "high": "High",
                            "low": "Low",
                            "moderate": "Moderate",
                            "very_high": "Very high"
                        }
                    }
                }
            }
        },
        "toon": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL.",
                    "unknown_authorize_url_generation": "Unknown error generating an authorise URL."
                }
            }
        },
        "tplink": {
            "entity": {
                "sensor": {
                    "current_consumption": {
                        "name": "Current consumption"
                    },
                    "today_consumption": {
                        "name": "Today's consumption"
                    },
                    "total_consumption": {
                        "name": "Total consumption"
                    }
                },
                "switch": {
                    "led": {
                        "name": "LED"
                    }
                }
            },
            "services": {
                "random_effect": {
                    "fields": {
                        "backgrounds": {
                            "name": "Backgrounds"
                        },
                        "brightness": {
                            "description": "Initial brightness.",
                            "name": "Brightness"
                        },
                        "brightness_range": {
                            "description": "Range of brightness.",
                            "name": "Brightness range"
                        },
                        "duration": {
                            "description": "Duration.",
                            "name": "Duration"
                        },
                        "fadeoff": {
                            "description": "Fade off.",
                            "name": "Fade off"
                        },
                        "hue_range": {
                            "description": "Range of hue.",
                            "name": "Hue range"
                        },
                        "init_states": {
                            "description": "Initial HSV sequence.",
                            "name": "Initial states"
                        },
                        "random_seed": {
                            "description": "Random seed.",
                            "name": "Random seed"
                        },
                        "saturation_range": {
                            "description": "Range of saturation.",
                            "name": "Saturation range"
                        },
                        "segments": {
                            "description": "List of segments (0 for all).",
                            "name": "Segments"
                        },
                        "transition": {
                            "name": "Transition"
                        },
                        "transition_range": {
                            "description": "Range of transition.",
                            "name": "Transition range"
                        }
                    },
                    "name": "Random effect"
                },
                "sequence_effect": {
                    "description": "Sets a sequence effect.",
                    "fields": {
                        "brightness": {
                            "description": "Initial brightness.",
                            "name": "Brightness"
                        },
                        "direction": {
                            "description": "Direction.",
                            "name": "Direction"
                        },
                        "duration": {
                            "description": "Duration."
                        }
                    }
                }
            }
        },
        "tractive": {
            "entity": {
                "sensor": {
                    "activity_time": {
                        "name": "Activity time"
                    },
                    "calories": {
                        "name": "Calories burnt"
                    },
                    "minutes_day_sleep": {
                        "name": "Day sleep"
                    },
                    "minutes_night_sleep": {
                        "name": "Night sleep"
                    },
                    "minutes_rest": {
                        "name": "Minutes rest"
                    },
                    "rest_time": {
                        "name": "Rest time"
                    }
                }
            }
        },
        "tradfri": {
            "entity": {
                "sensor": {
                    "aqi": {
                        "name": "Air quality"
                    },
                    "filter_life_remaining": {
                        "name": "Filter time left"
                    }
                }
            }
        },
        "trafikverket_train": {
            "config": {
                "step": {
                    "user": {
                        "data": {
                            "filter_product": "Filter by product description"
                        },
                        "data_description": {
                            "filter_product": "To filter by product description add the phrase here to match"
                        }
                    }
                }
            },
            "entity": {
                "sensor": {
                    "actual_time": {
                        "name": "Actual time",
                        "state_attributes": {
                            "product_filter": {
                                "name": "Train filtering"
                            }
                        }
                    },
                    "cancelled": {
                        "name": "Cancelled",
                        "state_attributes": {
                            "product_filter": {
                                "name": "Train filtering"
                            }
                        }
                    },
                    "delayed_time": {
                        "name": "Delayed time",
                        "state_attributes": {
                            "product_filter": {
                                "name": "Train filtering"
                            }
                        }
                    },
                    "departure_state": {
                        "name": "Departure state",
                        "state": {
                            "canceled": "Cancelled",
                            "delayed": "Delayed",
                            "on_time": "On time"
                        },
                        "state_attributes": {
                            "product_filter": {
                                "name": "Train filtering"
                            }
                        }
                    },
                    "departure_time": {
                        "name": "Departure time",
                        "state_attributes": {
                            "actual_time": {
                                "name": "Actual time"
                            },
                            "canceled": {
                                "name": "Cancelled"
                            },
                            "departure_state": {
                                "name": "Departure state",
                                "state": {
                                    "canceled": "Cancelled",
                                    "delayed": "Delayed",
                                    "on_time": "On time"
                                }
                            },
                            "deviations": {
                                "name": "Deviations"
                            },
                            "estimated_time": {
                                "name": "Estimated time"
                            },
                            "number_of_minutes_delayed": {
                                "name": "Minutes delayed"
                            },
                            "other_information": {
                                "name": "Other information"
                            },
                            "planned_time": {
                                "name": "Planned time"
                            },
                            "product_filter": {
                                "name": "Train filtering"
                            }
                        }
                    },
                    "deviation": {
                        "name": "Deviation",
                        "state_attributes": {
                            "product_filter": {
                                "name": "Train filtering"
                            }
                        }
                    },
                    "estimated_time": {
                        "name": "Estimated time",
                        "state_attributes": {
                            "product_filter": {
                                "name": "Train filtering"
                            }
                        }
                    },
                    "other_info": {
                        "name": "Other information",
                        "state_attributes": {
                            "product_filter": {
                                "name": "Train filtering"
                            }
                        }
                    },
                    "planned_time": {
                        "name": "Planned time",
                        "state_attributes": {
                            "product_filter": {
                                "name": "Train filtering"
                            }
                        }
                    }
                }
            },
            "options": {
                "step": {
                    "init": {
                        "data": {
                            "filter_product": "Filter by product description"
                        },
                        "data_description": {
                            "filter_product": "To filter by product description add the phrase here to match"
                        }
                    }
                }
            }
        },
        "transmission": {
            "entity": {
                "sensor": {
                    "active_torrents": {
                        "name": "Active torrents"
                    },
                    "completed_torrents": {
                        "name": "Completed torrents"
                    },
                    "download_speed": {
                        "name": "Download speed"
                    },
                    "paused_torrents": {
                        "name": "Paused torrents"
                    },
                    "started_torrents": {
                        "name": "Started torrents"
                    },
                    "total_torrents": {
                        "name": "Total torrents"
                    },
                    "transmission_status": {
                        "name": "Status"
                    },
                    "upload_speed": {
                        "name": "Upload speed"
                    }
                }
            },
            "services": {
                "start_torrent": {
                    "fields": {
                        "id": {
                            "name": "ID"
                        }
                    },
                    "name": "Start torrent"
                },
                "stop_torrent": {
                    "description": "Stops a torrent.",
                    "fields": {
                        "id": {
                            "name": "ID"
                        }
                    },
                    "name": "Stop torrent"
                }
            }
        },
        "tts": {
            "services": {
                "clear_cache": {
                    "description": "Removes all cached text-to-speech files and purges the memory.",
                    "name": "Clear TTS cache"
                },
                "say": {
                    "description": "Says something using text-to-speech on a media player.",
                    "fields": {
                        "cache": {
                            "description": "Stores this message locally so that when the text is requested again, the output can be produced more quickly.",
                            "name": "Cache"
                        },
                        "entity_id": {
                            "description": "Media players to play the message.",
                            "name": "Entity"
                        },
                        "language": {
                            "description": "Language to use for speech generation.",
                            "name": "Language"
                        },
                        "message": {
                            "description": "The text you want to convert into speech so that you can listen to it on your device.",
                            "name": "Message"
                        },
                        "options": {
                            "description": "A dictionary containing integration-specific options.",
                            "name": "Options"
                        }
                    },
                    "name": "Say a TTS message"
                },
                "speak": {
                    "description": "Speaks something using text-to-speech on a media player.",
                    "fields": {
                        "cache": {
                            "description": "Stores this message locally so that when the text is requested again, the output can be produced more quickly.",
                            "name": "Cache"
                        },
                        "language": {
                            "description": "Language to use for speech generation.",
                            "name": "Language"
                        },
                        "media_player_entity_id": {
                            "description": "Media players to play the message.",
                            "name": "Media player entity"
                        },
                        "message": {
                            "description": "The text you want to convert into speech so that you can listen to it on your device.",
                            "name": "Message"
                        },
                        "options": {
                            "description": "A dictionary containing integration-specific options.",
                            "name": "Options"
                        }
                    },
                    "name": "Speak"
                }
            }
        },
        "tuya": {
            "entity": {
                "binary_sensor": {
                    "carbon_dioxide": {
                        "name": "Carbon dioxide"
                    },
                    "carbon_monoxide": {
                        "name": "Carbon monoxide"
                    },
                    "drop": {
                        "name": "Drop"
                    },
                    "feeding": {
                        "name": "Feeding"
                    },
                    "formaldehyde": {
                        "name": "Formaldehyde"
                    },
                    "methane": {
                        "name": "Methane"
                    },
                    "pm25": {
                        "name": "PM2.5"
                    },
                    "pressure": {
                        "name": "Pressure"
                    },
                    "tilt": {
                        "name": "Tilt"
                    },
                    "voc": {
                        "name": "VOCs"
                    }
                },
                "button": {
                    "reset_duster_cloth": {
                        "name": "Reset duster cloth"
                    },
                    "reset_edge_brush": {
                        "name": "Reset edge brush"
                    },
                    "reset_filter": {
                        "name": "Reset filter"
                    },
                    "reset_map": {
                        "name": "Reset map"
                    },
                    "reset_roll_brush": {
                        "name": "Reset roll brush"
                    },
                    "snooze": {
                        "name": "Snooze"
                    }
                },
                "cover": {
                    "curtain_2": {
                        "name": "Curtain 2"
                    },
                    "curtain_3": {
                        "name": "Curtain 3"
                    },
                    "door_2": {
                        "name": "Door 2"
                    },
                    "door_3": {
                        "name": "Door 3"
                    }
                },
                "light": {
                    "backlight": {
                        "name": "Backlight"
                    },
                    "light_2": {
                        "name": "Light 2"
                    },
                    "light_3": {
                        "name": "Light 3"
                    },
                    "night_light": {
                        "name": "Night light"
                    }
                },
                "number": {
                    "cloud_recipe": {
                        "name": "Cloud recipe"
                    },
                    "cook_temperature": {
                        "name": "Cooking temperature"
                    },
                    "cook_time": {
                        "name": "Cooking time"
                    },
                    "down_delay": {
                        "name": "Down delay"
                    },
                    "far_detection": {
                        "name": "Far detection"
                    },
                    "feed": {
                        "name": "Feed"
                    },
                    "heat_preservation_time": {
                        "name": "Heat preservation time"
                    },
                    "maximum_brightness": {
                        "name": "Maximum brightness"
                    },
                    "maximum_brightness_2": {
                        "name": "Maximum brightness 2"
                    },
                    "maximum_brightness_3": {
                        "name": "Maximum brightness 3"
                    },
                    "minimum_brightness": {
                        "name": "Minimum brightness"
                    },
                    "minimum_brightness_2": {
                        "name": "Minimum brightness 2"
                    },
                    "minimum_brightness_3": {
                        "name": "Minimum brightness 3"
                    },
                    "move_down": {
                        "name": "Move down"
                    },
                    "move_up": {
                        "name": "Move up"
                    },
                    "near_detection": {
                        "name": "Near detection"
                    },
                    "powder": {
                        "name": "Powder"
                    },
                    "sensitivity": {
                        "name": "Sensitivity"
                    }
                },
                "select": {
                    "curtain_motor_mode": {
                        "name": "Motor mode"
                    },
                    "decibel_sensitivity": {
                        "name": "Sound detection sensitivity"
                    },
                    "fingerbot_mode": {
                        "name": "Mode"
                    },
                    "horizontal_fan_angle": {
                        "name": "Horizontal swing flap angle",
                        "state": {
                            "30": "30°",
                            "60": "60°",
                            "90": "90°"
                        }
                    },
                    "humidifier_level": {
                        "name": "Spraying level"
                    },
                    "humidifier_moodlighting": {
                        "name": "Moodlighting"
                    },
                    "humidifier_spray_mode": {
                        "name": "Spray mode"
                    },
                    "ipc_work_mode": {
                        "name": "IPC mode"
                    },
                    "led_type": {
                        "name": "Light source type"
                    },
                    "led_type_2": {
                        "name": "Light 2 source type"
                    },
                    "led_type_3": {
                        "name": "Light 3 source type"
                    },
                    "light_mode": {
                        "name": "Indicator light mode"
                    },
                    "material": {
                        "name": "Material"
                    },
                    "mode": {
                        "name": "Mode"
                    },
                    "motion_sensitivity": {
                        "name": "Motion detection sensitivity"
                    },
                    "record_mode": {
                        "name": "Record mode"
                    },
                    "relay_status": {
                        "name": "Power on behaviour"
                    },
                    "target_humidity": {
                        "name": "Target humidity"
                    },
                    "temperature_level": {
                        "name": "Temperature level"
                    },
                    "vacuum_cistern": {
                        "name": "Water tank adjustment"
                    },
                    "vacuum_collection": {
                        "name": "Dust collection mode"
                    },
                    "vacuum_mode": {
                        "name": "Mode"
                    },
                    "vertical_fan_angle": {
                        "name": "Vertical swing flap angle",
                        "state": {
                            "30": "30°",
                            "60": "60°",
                            "90": "90°"
                        }
                    }
                },
                "sensor": {
                    "air_quality": {
                        "name": "Air quality"
                    },
                    "battery_state": {
                        "name": "Battery state"
                    },
                    "cleaning_area": {
                        "name": "Cleaning area"
                    },
                    "cleaning_time": {
                        "name": "Cleaning time"
                    },
                    "concentration_carbon_dioxide": {
                        "name": "Concentration of carbon dioxide"
                    },
                    "current_temperature": {
                        "name": "Current temperature"
                    },
                    "duster_cloth_life": {
                        "name": "Duster cloth lifetime"
                    },
                    "filter_life": {
                        "name": "Filter lifetime"
                    },
                    "filter_utilization": {
                        "name": "Filter utilisation"
                    },
                    "formaldehyde": {
                        "name": "Formaldehyde"
                    },
                    "gas": {
                        "name": "Gas"
                    },
                    "last_amount": {
                        "name": "Last amount"
                    },
                    "last_operation_duration": {
                        "name": "Last operation duration"
                    },
                    "luminosity": {
                        "name": "Luminosity"
                    },
                    "methane": {
                        "name": "Methane"
                    },
                    "phase_a_current": {
                        "name": "Phase A current"
                    },
                    "phase_a_power": {
                        "name": "Phase A power"
                    },
                    "phase_a_voltage": {
                        "name": "Phase A voltage"
                    },
                    "phase_b_current": {
                        "name": "Phase B current"
                    },
                    "phase_b_power": {
                        "name": "Phase B power"
                    },
                    "phase_b_voltage": {
                        "name": "Phase B voltage"
                    },
                    "phase_c_current": {
                        "name": "Phase C current"
                    },
                    "phase_c_power": {
                        "name": "Phase C power"
                    },
                    "phase_c_voltage": {
                        "name": "Phase C voltage"
                    },
                    "remaining_time": {
                        "name": "Remaining time"
                    },
                    "rolling_brush_life": {
                        "name": "Rolling brush lifetime"
                    },
                    "side_brush_life": {
                        "name": "Side brush lifetime"
                    },
                    "smoke_amount": {
                        "name": "Smoke amount"
                    },
                    "sous_vide_status": {
                        "name": "Status",
                        "state": {
                            "boiling_temp": "Boiling temperature",
                            "cooling": "Cooling",
                            "heating": "Heating",
                            "heating_temp": "Heating temperature",
                            "reserve_1": "Reserve 1",
                            "reserve_2": "Reserve 2",
                            "reserve_3": "Reserve 3",
                            "warm": "Heat preservation"
                        }
                    },
                    "status": {
                        "name": "Status"
                    },
                    "total_absorption_particles": {
                        "name": "Total absorption of particles"
                    },
                    "total_cleaning_area": {
                        "name": "Total cleaning area"
                    },
                    "total_cleaning_time": {
                        "name": "Total cleaning time"
                    },
                    "total_cleaning_times": {
                        "name": "Total cleaning times"
                    },
                    "total_energy": {
                        "name": "Total energy"
                    },
                    "total_operating_time": {
                        "name": "Total operating time"
                    },
                    "total_volatile_organic_compound": {
                        "name": "Total volatile organic compound"
                    },
                    "water_level": {
                        "name": "Water level"
                    }
                },
                "switch": {
                    "alarm_1": {
                        "name": "Alarm 1"
                    },
                    "alarm_2": {
                        "name": "Alarm 2"
                    },
                    "alarm_3": {
                        "name": "Alarm 3"
                    },
                    "alarm_4": {
                        "name": "Alarm 4"
                    },
                    "anion": {
                        "name": "Anion"
                    },
                    "battery_lock": {
                        "name": "Battery lock"
                    },
                    "child_lock": {
                        "name": "Child lock"
                    },
                    "cry_detection": {
                        "name": "Cry detection"
                    },
                    "disinfection": {
                        "name": "Disinfection"
                    },
                    "do_not_disturb": {
                        "name": "Do not disturb"
                    },
                    "energy_saving": {
                        "name": "Energy saving"
                    },
                    "filter_cartridge_reset": {
                        "name": "Filter cartridge reset"
                    },
                    "filter_reset": {
                        "name": "Filter reset"
                    },
                    "flip": {
                        "name": "Flip"
                    },
                    "heat_preservation": {
                        "name": "Heat preservation"
                    },
                    "humidification": {
                        "name": "Humidification"
                    },
                    "ionizer": {
                        "name": "Ionizer"
                    },
                    "motion_alarm": {
                        "name": "Motion alarm"
                    },
                    "motion_recording": {
                        "name": "Motion recording"
                    },
                    "motion_tracking": {
                        "name": "Motion tracking"
                    },
                    "mute": {
                        "name": "Mute"
                    },
                    "mute_voice": {
                        "name": "Mute voice"
                    },
                    "natural_wind": {
                        "name": "Natural wind"
                    },
                    "open_window_detection": {
                        "name": "Open window detection"
                    },
                    "oxygen_bar": {
                        "name": "Oxygen bar"
                    },
                    "plug": {
                        "name": "Plug"
                    },
                    "power": {
                        "name": "Power"
                    },
                    "privacy_mode": {
                        "name": "Privacy mode"
                    },
                    "radio": {
                        "name": "Radio"
                    },
                    "reset_of_water_usage_days": {
                        "name": "Reset of water usage days"
                    },
                    "reverse": {
                        "name": "Reverse"
                    },
                    "sleep": {
                        "name": "Sleep"
                    },
                    "sleep_aid": {
                        "name": "Sleep aid"
                    },
                    "slow_feed": {
                        "name": "Slow feed"
                    },
                    "socket": {
                        "name": "Socket"
                    },
                    "socket_1": {
                        "name": "Socket 1"
                    },
                    "socket_2": {
                        "name": "Socket 2"
                    },
                    "socket_3": {
                        "name": "Socket 3"
                    },
                    "socket_4": {
                        "name": "Socket 4"
                    },
                    "socket_5": {
                        "name": "Socket 5"
                    },
                    "socket_6": {
                        "name": "Socket 6"
                    },
                    "sound": {
                        "name": "Sound"
                    },
                    "sound_detection": {
                        "name": "Sound detection"
                    },
                    "spray": {
                        "name": "Spray"
                    },
                    "start": {
                        "name": "Start"
                    },
                    "sterilization": {
                        "name": "Sterilisation"
                    },
                    "switch": {
                        "name": "Switch"
                    },
                    "switch_1": {
                        "name": "Switch 1"
                    },
                    "switch_2": {
                        "name": "Switch 2"
                    },
                    "switch_3": {
                        "name": "Switch 3"
                    },
                    "switch_4": {
                        "name": "Switch 4"
                    },
                    "switch_5": {
                        "name": "Switch 5"
                    },
                    "switch_6": {
                        "name": "Switch 6"
                    },
                    "switch_7": {
                        "name": "Switch 7"
                    },
                    "switch_8": {
                        "name": "Switch 8"
                    },
                    "time_watermark": {
                        "name": "Time watermark"
                    },
                    "usb_1": {
                        "name": "USB 1"
                    },
                    "usb_2": {
                        "name": "USB 2"
                    },
                    "usb_3": {
                        "name": "USB 3"
                    },
                    "usb_4": {
                        "name": "USB 4"
                    },
                    "usb_5": {
                        "name": "USB 5"
                    },
                    "usb_6": {
                        "name": "USB 6"
                    },
                    "uv_sterilization": {
                        "name": "UV sterilisation"
                    },
                    "video_recording": {
                        "name": "Video recording"
                    },
                    "voice": {
                        "name": "Voice"
                    },
                    "water": {
                        "name": "Water"
                    },
                    "water_pump_reset": {
                        "name": "Water pump reset"
                    },
                    "wide_dynamic_range": {
                        "name": "Wide dynamic range"
                    }
                }
            }
        },
        "twentemilieu": {
            "entity": {
                "sensor": {
                    "christmas_tree_pickup": {
                        "name": "Christmas tree pickup"
                    },
                    "non_recyclable_waste_pickup": {
                        "name": "Non-recyclable waste pickup"
                    },
                    "organic_waste_pickup": {
                        "name": "Organic waste pickup"
                    },
                    "packages_waste_pickup": {
                        "name": "Packages waste pickup"
                    }
                }
            }
        },
        "unifi": {
            "services": {
                "reconnect_client": {
                    "description": "Tries to get wireless client to reconnect to UniFi Network.",
                    "fields": {
                        "device_id": {
                            "description": "Try reconnect client to wireless network."
                        }
                    },
                    "name": "Reconnect wireless client"
                },
                "remove_clients": {
                    "description": "Cleans up clients that has only been associated with the controller for a short period of time.",
                    "name": "Remove clients from the UniFi Network"
                }
            }
        },
        "unifiprotect": {
            "issues": {
                "deprecated_service_set_doorbell_message": {
                    "fix_flow": {
                        "step": {
                            "confirm": {
                                "description": "The `unifiprotect.set_doorbell_message` service is deprecated in favour of the new Doorbell Text entity added to each Doorbell device. It will be removed in v2023.3.0. Please update to use the [`text.set_value` service]({link})."
                            }
                        }
                    }
                }
            },
            "services": {
                "add_doorbell_text": {
                    "description": "Adds a new custom message for doorbells.",
                    "fields": {
                        "device_id": {
                            "description": "Any device from the UniFi Protect instance you want to change. In case you have multiple Protect Instances.",
                            "name": "UniFi Protect NVR"
                        },
                        "message": {
                            "description": "New custom message to add for doorbells. Must be less than 30 characters.",
                            "name": "Custom message"
                        }
                    },
                    "name": "Add custom doorbell text"
                },
                "remove_doorbell_text": {
                    "description": "Removes an existing message for doorbells.",
                    "fields": {
                        "device_id": {
                            "description": "Any device from the UniFi Protect instance you want to change. In case you have multiple Protect Instances.",
                            "name": "UniFi Protect NVR"
                        },
                        "message": {
                            "description": "Existing custom message to remove for doorbells.",
                            "name": "Custom message"
                        }
                    },
                    "name": "Remove custom doorbell text"
                },
                "set_chime_paired_doorbells": {
                    "description": "Use to set the paired doorbell(s) with a smart chime.",
                    "fields": {
                        "device_id": {
                            "description": "The chimes to link to the doorbells to.",
                            "name": "Chime"
                        },
                        "doorbells": {
                            "description": "The doorbells to link to the chime."
                        }
                    }
                }
            }
        },
        "upb": {
            "services": {
                "link_fade_start": {
                    "fields": {
                        "brightness_pct": {
                            "description": "Number indicating percentage of full brightness, where 0 turns the scene off, 1 is the minimum brightness and 100 is the maximum brightness."
                        },
                        "rate": {
                            "description": "Amount of time for scene to transition to new brightness."
                        }
                    },
                    "name": "Start link fade"
                },
                "link_fade_stop": {
                    "description": "Stops a link fade.",
                    "name": "Stop link fade"
                },
                "link_goto": {
                    "description": "Set scene to brightness.",
                    "fields": {
                        "brightness": {
                            "description": "Number indicating brightness, where 0 turns the scene off, 1 is the minimum brightness and 255 is the maximum brightness.",
                            "name": "Brightness"
                        },
                        "brightness_pct": {
                            "description": "Number indicating percentage of full brightness, where 0 turns the scene off, 1 is the minimum brightness and 100 is the maximum brightness."
                        },
                        "rate": {
                            "description": "Amount of time for scene to transition to new brightness."
                        }
                    },
                    "name": "Go to link"
                }
            }
        },
        "update": {
            "services": {
                "clear_skipped": {
                    "description": "Removes the skipped version marker from an update.",
                    "name": "Clear skipped update"
                },
                "install": {
                    "description": "Installs an update for this device or service.",
                    "fields": {
                        "backup": {
                            "description": "If supported by the integration, this creates a backup before starting the update.",
                            "name": "Backup"
                        },
                        "version": {
                            "description": "The version to install. If omitted, the latest version will be installed.",
                            "name": "Version"
                        }
                    },
                    "name": "Install update"
                },
                "skip": {
                    "description": "Marks currently available update as skipped.",
                    "name": "Skip update"
                }
            }
        },
        "upnp": {
            "entity": {
                "binary_sensor": {
                    "wan_status": {
                        "name": "WAN status"
                    }
                },
                "sensor": {
                    "data_received": {
                        "name": "Data received"
                    },
                    "data_sent": {
                        "name": "Data sent"
                    },
                    "download_speed": {
                        "name": "Download speed"
                    },
                    "external_ip": {
                        "name": "External IP"
                    },
                    "packet_download_speed": {
                        "name": "Packet download speed"
                    },
                    "packet_upload_speed": {
                        "name": "Packet upload speed"
                    },
                    "packets_received": {
                        "name": "Packets received"
                    },
                    "packets_sent": {
                        "name": "Packets sent"
                    },
                    "upload_speed": {
                        "name": "Upload speed"
                    },
                    "uptime": {
                        "name": "Uptime"
                    },
                    "wan_status": {
                        "name": "WAN status"
                    }
                }
            }
        },
        "utility_meter": {
            "services": {
                "calibrate": {
                    "description": "Calibrates a utility meter sensor.",
                    "fields": {
                        "value": {
                            "description": "Value to which set the meter.",
                            "name": "Value"
                        }
                    },
                    "name": "Calibrate"
                },
                "reset": {
                    "description": "Resets all counters of a utility meter.",
                    "name": "Reset"
                }
            }
        },
        "vacuum": {
            "services": {
                "clean_spot": {
                    "description": "Tells the vacuum cleaner to do a spot clean-up.",
                    "name": "Clean spot"
                },
                "locate": {
                    "description": "Locates the vacuum cleaner robot.",
                    "name": "Locate"
                },
                "pause": {
                    "description": "Pauses the cleaning task.",
                    "name": "Pause"
                },
                "return_to_base": {
                    "description": "Tells the vacuum cleaner to return to its dock.",
                    "name": "Return to dock"
                },
                "send_command": {
                    "description": "Sends a command to the vacuum cleaner.",
                    "fields": {
                        "command": {
                            "description": "Command to execute. The commands are integration-specific.",
                            "name": "Command"
                        },
                        "params": {
                            "description": "Parameters for the command. The parameters are integration-specific.",
                            "name": "Parameters"
                        }
                    },
                    "name": "Send command"
                },
                "set_fan_speed": {
                    "description": "Sets the fan speed of the vacuum cleaner.",
                    "fields": {
                        "fan_speed": {
                            "description": "Fan speed. The value depends on the integration. Some integrations have speed steps, like 'medium'. Some use a percentage, between 0 and 100.",
                            "name": "Fan speed"
                        }
                    },
                    "name": "Set fan speed"
                },
                "start": {
                    "description": "Starts or resumes the cleaning task.",
                    "name": "Start"
                },
                "start_pause": {
                    "description": "Starts, pauses, or resumes the cleaning task.",
                    "name": "Start\/pause"
                },
                "stop": {
                    "description": "Stops the current cleaning task.",
                    "name": "Stop"
                },
                "turn_off": {
                    "description": "Stops the current cleaning task and returns to its dock."
                },
                "turn_on": {
                    "description": "Starts a new cleaning task."
                }
            }
        },
        "vallox": {
            "entity": {
                "binary_sensor": {
                    "post_heater": {
                        "name": "Post heater"
                    }
                },
                "number": {
                    "supply_air_target_away": {
                        "name": "Supply air temperature (Away)"
                    },
                    "supply_air_target_boost": {
                        "name": "Supply air temperature (Boost)"
                    },
                    "supply_air_target_home": {
                        "name": "Supply air temperature (Home)"
                    }
                },
                "sensor": {
                    "cell_state": {
                        "name": "Cell state"
                    },
                    "current_profile": {
                        "name": "Current profile"
                    },
                    "efficiency": {
                        "name": "Efficiency"
                    },
                    "exhaust_air": {
                        "name": "Exhaust air"
                    },
                    "extract_air": {
                        "name": "Extract air"
                    },
                    "extract_fan_speed": {
                        "name": "Extract fan speed"
                    },
                    "fan_speed": {
                        "name": "Fan speed"
                    },
                    "optional_air": {
                        "name": "Optional air"
                    },
                    "outdoor_air": {
                        "name": "Outdoor air"
                    },
                    "remaining_time_for_filter": {
                        "name": "Remaining time for filter"
                    },
                    "supply_air": {
                        "name": "Supply air"
                    },
                    "supply_cell_air": {
                        "name": "Supply cell air"
                    },
                    "supply_fan_speed": {
                        "name": "Supply fan speed"
                    }
                },
                "switch": {
                    "bypass_locked": {
                        "name": "Bypass locked"
                    }
                }
            },
            "services": {
                "set_profile_fan_speed_away": {
                    "description": "Sets the fan speed of the Away profile.",
                    "fields": {
                        "fan_speed": {
                            "name": "Fan speed"
                        }
                    },
                    "name": "Set profile fan speed away"
                },
                "set_profile_fan_speed_boost": {
                    "description": "Sets the fan speed of the Boost profile.",
                    "fields": {
                        "fan_speed": {
                            "name": "Fan speed"
                        }
                    },
                    "name": "Set profile fan speed boost"
                },
                "set_profile_fan_speed_home": {
                    "description": "Sets the fan speed of the Home profile."
                }
            }
        },
        "verisure": {
            "services": {
                "disable_autolock": {
                    "name": "Disable autolock"
                },
                "enable_autolock": {
                    "description": "Enables autolock of a Verisure Lockguard Smartlock.",
                    "name": "Enable autolock"
                }
            }
        },
        "version": {
            "title": "Version"
        },
        "vesync": {
            "entity": {
                "sensor": {
                    "energy_month": {
                        "name": "Energy use monthly"
                    },
                    "energy_today": {
                        "name": "Energy use today"
                    },
                    "energy_week": {
                        "name": "Energy use weekly"
                    },
                    "energy_year": {
                        "name": "Energy use yearly"
                    },
                    "filter_life": {
                        "name": "Filter lifetime"
                    }
                }
            },
            "services": {
                "update_devices": {
                    "description": "Adds new VeSync devices to Home Assistant.",
                    "name": "Update devices"
                }
            }
        },
        "vicare": {
            "services": {
                "set_vicare_mode": {
                    "description": "Set a ViCare mode.",
                    "fields": {
                        "vicare_mode": {
                            "description": "ViCare mode.",
                            "name": "ViCare mode"
                        }
                    },
                    "name": "Set ViCare mode"
                }
            }
        },
        "vizio": {
            "services": {
                "update_setting": {
                    "description": "Updates the value of a setting on a Vizio media player device.",
                    "fields": {
                        "new_value": {
                            "description": "The new value for the setting.",
                            "name": "New value"
                        },
                        "setting_name": {
                            "description": "The name of the setting to be changed. Available settings for a given setting_type are listed in the '[setting_type]_settings' property.",
                            "name": "Setting name"
                        },
                        "setting_type": {
                            "description": "The type of setting to be changed. Available types are listed in the 'setting_types' property.",
                            "name": "Setting type"
                        }
                    },
                    "name": "Update setting"
                }
            }
        },
        "wake_on_lan": {
            "services": {
                "send_magic_packet": {
                    "description": "Sends a 'magic packet' to wake up a device with 'Wake-On-LAN' capabilities.",
                    "fields": {
                        "broadcast_address": {
                            "description": "Broadcast IP where to send the magic packet.",
                            "name": "Broadcast address"
                        },
                        "broadcast_port": {
                            "description": "Port where to send the magic packet.",
                            "name": "Broadcast port"
                        },
                        "mac": {
                            "description": "MAC address of the device to wake up.",
                            "name": "MAC address"
                        }
                    },
                    "name": "Send magic packet"
                }
            }
        },
        "water_heater": {
            "services": {
                "turn_off": {
                    "description": "Turns water heater off."
                },
                "turn_on": {
                    "description": "Turns water heater on."
                }
            }
        },
        "weather": {
            "entity_component": {
                "_": {
                    "state_attributes": {
                        "uv_index": {
                            "name": "UV index"
                        }
                    }
                }
            },
            "selector": {
                "forecast_type": {
                    "options": {
                        "daily": "Daily",
                        "hourly": "Hourly",
                        "twice_daily": "Twice daily"
                    }
                }
            },
            "services": {
                "get_forecast": {
                    "description": "Get weather forecast.",
                    "fields": {
                        "type": {
                            "description": "Forecast type: daily, hourly or twice daily.",
                            "name": "Forecast type"
                        }
                    },
                    "name": "Get forecast"
                }
            }
        },
        "webostv": {
            "services": {
                "button": {
                    "description": "Sends a button press command.",
                    "fields": {
                        "button": {
                            "description": "Name of the button to press.  Known possible values are LEFT, RIGHT, DOWN, UP, HOME, MENU, BACK, ENTER, DASH, INFO, ASTERISK, CC, EXIT, MUTE, RED, GREEN, BLUE, YELLOW, VOLUMEUP, VOLUMEDOWN, CHANNELUP, CHANNELDOWN, PLAY, PAUSE, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.",
                            "name": "Button"
                        },
                        "entity_id": {
                            "description": "Name(s) of the webostv entities where to run the API method.",
                            "name": "Entity"
                        }
                    },
                    "name": "Button"
                },
                "command": {
                    "description": "Sends a command.",
                    "fields": {
                        "command": {
                            "description": "Endpoint of the command.",
                            "name": "Command"
                        },
                        "entity_id": {
                            "description": "Name(s) of the webostv entities where to run the API method.",
                            "name": "Entity"
                        },
                        "payload": {
                            "description": "An optional payload to provide to the endpoint in the format of key value pair(s).",
                            "name": "Payload"
                        }
                    }
                }
            }
        },
        "whirlpool": {
            "entity": {
                "sensor": {
                    "end_time": {
                        "name": "End time"
                    },
                    "whirlpool_machine": {
                        "name": "State",
                        "state": {
                            "system_initialize": "System Initialise"
                        }
                    },
                    "whirlpool_tank": {
                        "name": "Washing powder level"
                    }
                }
            }
        },
        "whois": {
            "entity": {
                "sensor": {
                    "admin": {
                        "name": "Admin"
                    },
                    "creation_date": {
                        "name": "Created"
                    },
                    "days_until_expiration": {
                        "name": "Days until expiration"
                    },
                    "expiration_date": {
                        "name": "Expires"
                    },
                    "last_updated": {
                        "name": "Last updated"
                    },
                    "owner": {
                        "name": "Owner"
                    },
                    "registrant": {
                        "name": "Registrant"
                    },
                    "registrar": {
                        "name": "Registrar"
                    },
                    "reseller": {
                        "name": "Reseller"
                    }
                }
            }
        },
        "wilight": {
            "entity": {
                "switch": {
                    "pause": {
                        "name": "Pause"
                    },
                    "watering": {
                        "name": "Watering"
                    }
                }
            }
        },
        "withings": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL."
                }
            }
        },
        "wiz": {
            "entity": {
                "number": {
                    "dual_head_ratio": {
                        "name": "Dual head ratio"
                    },
                    "effect_speed": {
                        "name": "Effect speed"
                    }
                }
            }
        },
        "wled": {
            "services": {
                "effect": {
                    "fields": {
                        "effect": {
                            "name": "Effect"
                        },
                        "intensity": {
                            "description": "Intensity of the effect. Number between 0 and 255.",
                            "name": "Effect intensity"
                        },
                        "palette": {
                            "description": "Name or ID of the WLED light palette.",
                            "name": "Colour palette"
                        },
                        "reverse": {
                            "description": "Reverse the effect. Either true to reverse or false otherwise.",
                            "name": "Reverse effect"
                        },
                        "speed": {
                            "description": "Speed of the effect.",
                            "name": "Effect speed"
                        }
                    },
                    "name": "Set effect"
                },
                "preset": {
                    "description": "Sets a preset for the WLED device.",
                    "fields": {
                        "preset": {
                            "description": "ID of the WLED preset.",
                            "name": "Preset ID"
                        }
                    },
                    "name": "Set preset (deprecated)"
                }
            }
        },
        "xbox": {
            "config": {
                "abort": {
                    "authorize_url_timeout": "Timeout generating authorise URL."
                }
            }
        },
        "xiaomi_aqara": {
            "services": {
                "add_device": {
                    "description": "Enables the join permission of the Xiaomi Aqara Gateway for 30 seconds. A new device can be added afterwards by pressing the pairing button once.",
                    "fields": {
                        "gw_mac": {
                            "description": "MAC address of the Xiaomi Aqara Gateway.",
                            "name": "Gateway MAC"
                        }
                    },
                    "name": "Add device"
                },
                "play_ringtone": {
                    "description": "Plays a specific ringtone. The version of the gateway firmware must be 1.4.1_145 at least.",
                    "fields": {
                        "gw_mac": {
                            "description": "MAC address of the Xiaomi Aqara Gateway.",
                            "name": "Gateway MAC"
                        },
                        "ringtone_id": {
                            "description": "One of the allowed ringtone IDs.",
                            "name": "Ringtone ID"
                        },
                        "ringtone_vol": {
                            "description": "The volume in percent.",
                            "name": "Ringtone volume"
                        }
                    },
                    "name": "Play ringtone"
                },
                "remove_device": {
                    "description": "Removes a specific device. The removal is required if a device shall be paired with another gateway.",
                    "fields": {
                        "device_id": {
                            "description": "Hardware address of the device to remove.",
                            "name": "Device ID"
                        },
                        "gw_mac": {
                            "description": "MAC address of the Xiaomi Aqara Gateway.",
                            "name": "Gateway MAC"
                        }
                    }
                }
            }
        },
        "xiaomi_miio": {
            "entity": {
                "select": {
                    "airpurifier_mode": {
                        "state": {
                            "favorite": "Favourite"
                        }
                    }
                }
            },
            "services": {
                "light_reminder_off": {
                    "description": "Disables the eye fatigue reminder\/notification (EYECARE SMART LAMP 2 ONLY).",
                    "fields": {
                        "entity_id": {
                            "description": "Name of the entity to act on.",
                            "name": "Entity ID"
                        }
                    },
                    "name": "Light reminder off"
                },
                "light_reminder_on": {
                    "description": "Enables the eye fatigue reminder\/notification (EYECARE SMART LAMP 2 ONLY).",
                    "fields": {
                        "entity_id": {
                            "description": "Name of the entity to act on.",
                            "name": "Entity ID"
                        }
                    },
                    "name": "Light reminder on"
                },
                "light_set_delayed_turn_off": {
                    "description": "Delayed turn off.",
                    "fields": {
                        "entity_id": {
                            "description": "Name of the light entity.",
                            "name": "Entity ID"
                        },
                        "time_period": {
                            "description": "Time period for the delayed turn off.",
                            "name": "Time period"
                        }
                    },
                    "name": "Light set delayed turn off"
                },
                "light_set_scene": {
                    "description": "Sets a fixed scene.",
                    "fields": {
                        "entity_id": {
                            "description": "Name of the light entity.",
                            "name": "Entity ID"
                        },
                        "scene": {
                            "description": "Number of the fixed scene.",
                            "name": "Scene"
                        }
                    },
                    "name": "Light set scene"
                },
                "remote_learn_command": {
                    "description": "Learns an IR command, press \"Call Service\", point the remote at the IR device, and the learned command will be shown as a notification in Overview.",
                    "fields": {
                        "slot": {
                            "description": "Define the slot used to save the IR command.",
                            "name": "Slot"
                        },
                        "timeout": {
                            "description": "Define the timeout, before which the command must be learned.",
                            "name": "Timeout"
                        }
                    },
                    "name": "Remote learn command"
                },
                "remote_set_led_off": {
                    "description": "Turns off blue LED.",
                    "name": "Remote set LED off"
                },
                "remote_set_led_on": {
                    "description": "Turns on blue LED.",
                    "name": "Remote set LED on"
                },
                "vacuum_clean_zone": {
                    "name": "Vacuum clean zone"
                },
                "vacuum_goto": {
                    "description": "Go to the specified coordinates.",
                    "fields": {
                        "x_coord": {
                            "description": "X-coordinate.",
                            "name": "X coordinate"
                        },
                        "y_coord": {
                            "description": "Y-coordinate.",
                            "name": "Y coordinate"
                        }
                    },
                    "name": "Vacuum go to"
                },
                "vacuum_remote_control_move": {
                    "description": "Remote controls the vacuum cleaner, make sure you first set it in remote control mode with `remote_control_start`.",
                    "fields": {
                        "duration": {
                            "description": "Duration of the movement.",
                            "name": "Duration"
                        },
                        "rotation": {
                            "description": "Rotation, between -179 degrees and 179 degrees.",
                            "name": "Rotation"
                        },
                        "velocity": {
                            "description": "Speed.",
                            "name": "Velocity"
                        }
                    },
                    "name": "Vacuum remote control move"
                },
                "vacuum_remote_control_move_step": {
                    "description": "Remote controls the vacuum cleaner, only makes one move and then stops.",
                    "fields": {
                        "duration": {
                            "description": "Duration of the movement.",
                            "name": "Duration"
                        },
                        "rotation": {
                            "description": "Rotation.",
                            "name": "Rotation"
                        },
                        "velocity": {
                            "description": "Speed.",
                            "name": "Velocity"
                        }
                    },
                    "name": "Vacuum remote control move step"
                },
                "vacuum_remote_control_start": {
                    "description": "Starts remote control of the vacuum cleaner. You can then move it with `remote_control_move`, when done call `remote_control_stop`.",
                    "name": "Vacuum remote control start"
                },
                "vacuum_remote_control_stop": {
                    "description": "Stops remote control mode of the vacuum cleaner.",
                    "name": "Vacuum remote control stop"
                }
            }
        },
        "yalexs_ble": {
            "entity": {
                "sensor": {
                    "battery_voltage": {
                        "name": "Battery voltage"
                    }
                }
            }
        },
        "yamaha": {
            "services": {
                "enable_output": {
                    "description": "Enables or disables an output port.",
                    "fields": {
                        "enabled": {
                            "description": "Indicate if port should be enabled or not."
                        }
                    }
                },
                "select_scene": {
                    "fields": {
                        "scene": {
                            "description": "Name of the scene. Standard for RX-V437 is 'BD\/DVD Film Viewing', 'TV Viewing', 'NET Audio Listening' or 'Radio Listening'."
                        }
                    }
                }
            }
        },
        "yamaha_musiccast": {
            "entity": {
                "select": {
                    "zone_surr_decoder_type": {
                        "state": {
                            "dolby_pl2x_movie": "Dolby ProLogic 2x Film"
                        }
                    }
                }
            },
            "platform": {
                "select": {
                    "state": {
                        "yamaha_musiccast__zone_surr_decoder_type": {
                            "dolby_pl2x_movie": "Dolby ProLogic 2x Film"
                        }
                    }
                }
            }
        },
        "yeelight": {
            "entity": {
                "binary_sensor": {
                    "nightlight": {
                        "name": "Nightlight"
                    }
                },
                "light": {
                    "ambilight": {
                        "name": "Ambilight"
                    },
                    "nightlight": {
                        "name": "Nightlight"
                    }
                }
            },
            "selector": {
                "mode": {
                    "options": {
                        "color_flow": "Colour Flow"
                    }
                }
            },
            "services": {
                "set_auto_delay_off_scene": {
                    "description": "Turns the light on to the specified brightness and sets a timer to turn it back off after the given number of minutes. If the light is off, Set a colour scene, if light is off, it will be turned on."
                },
                "set_color_flow_scene": {
                    "description": "Starts a colour flow. If the light is off, it will be turned on.",
                    "fields": {
                        "action": {
                            "description": "The action to take after the flow stops.",
                            "name": "Action"
                        },
                        "count": {
                            "description": "The number of times to run this flow (0 to run forever).",
                            "name": "Count"
                        },
                        "transitions": {
                            "description": "Array of transitions, for desired effect. Examples https:\/\/yeelight.readthedocs.io\/en\/stable\/flow.html.",
                            "name": "Transitions"
                        }
                    }
                },
                "set_color_scene": {
                    "description": "Changes the light to the specified RGB colour and brightness. If the light is off, it will be turned on.",
                    "fields": {
                        "brightness": {
                            "description": "The brightness value to set.",
                            "name": "Brightness"
                        },
                        "rgb_color": {
                            "description": "Colour for the light in RGB-format.",
                            "name": "RGB colour"
                        }
                    },
                    "name": "Set colour scene"
                },
                "set_color_temp_scene": {
                    "description": "Changes the light to the specified colour temperature. If the light is off, it will be turned on.",
                    "fields": {
                        "brightness": {
                            "description": "The brightness value to set.",
                            "name": "Brightness"
                        },
                        "kelvin": {
                            "description": "Colour temperature for the light in Kelvin.",
                            "name": "Kelvin"
                        }
                    },
                    "name": "Set colour temperature scene"
                },
                "set_hsv_scene": {
                    "description": "Changes the light to the specified HSV colour and brightness. If the light is off, it will be turned on.",
                    "fields": {
                        "hs_color": {
                            "description": "Colour for the light in hue\/sat format. Hue is 0-359 and Sat is 0-100.",
                            "name": "Hue\/sat colour"
                        }
                    }
                },
                "set_music_mode": {
                    "fields": {
                        "music_mode": {
                            "name": "Music mode"
                        }
                    },
                    "name": "Set music mode"
                },
                "start_flow": {
                    "description": "Start a custom flow, using transitions from https:\/\/yeelight.readthedocs.io\/en\/stable\/yeelight.html#flow-objects.",
                    "fields": {
                        "action": {
                            "description": "The action to take after the flow stops.",
                            "name": "Action"
                        },
                        "count": {
                            "description": "The number of times to run this flow (0 to run forever).",
                            "name": "Count"
                        },
                        "transitions": {
                            "description": "Array of transitions, for desired effect. Examples https:\/\/yeelight.readthedocs.io\/en\/stable\/flow.html.",
                            "name": "Transitions"
                        }
                    },
                    "name": "Start flow"
                }
            }
        },
        "yolink": {
            "entity": {
                "sensor": {
                    "power_failure_alarm": {
                        "name": "Power failure alarm",
                        "state": {
                            "alert": "Alert",
                            "normal": "Normal"
                        }
                    },
                    "power_failure_alarm_beep": {
                        "name": "Power failure alarm beep"
                    },
                    "power_failure_alarm_mute": {
                        "name": "Power failure alarm mute",
                        "state": {
                            "muted": "Muted",
                            "unmuted": "Unmuted"
                        }
                    },
                    "power_failure_alarm_volume": {
                        "name": "Power failure alarm volume",
                        "state": {
                            "high": "High",
                            "low": "Low",
                            "medium": "Medium"
                        }
                    }
                },
                "switch": {
                    "plug_1": {
                        "name": "Plug 1"
                    },
                    "plug_2": {
                        "name": "Plug 2"
                    },
                    "plug_3": {
                        "name": "Plug 3"
                    },
                    "plug_4": {
                        "name": "Plug 4"
                    },
                    "usb_ports": {
                        "name": "USB ports"
                    }
                }
            }
        },
        "youtube": {
            "entity": {
                "sensor": {
                    "latest_upload": {
                        "state_attributes": {
                            "published_at": {
                                "name": "Published at"
                            },
                            "video_id": {
                                "name": "Video ID"
                            }
                        }
                    }
                }
            }
        },
        "zeversolar": {
            "entity": {
                "sensor": {
                    "energy_today": {
                        "name": "Energy today"
                    }
                }
            }
        },
        "zha": {
            "config_panel": {
                "zha_options": {
                    "always_prefer_xy_color_mode": "Always prefer XY colour mode",
                    "enhanced_light_transition": "Enable enhanced light colour\/temperature transition from an off-state"
                }
            },
            "services": {
                "clear_lock_user_code": {
                    "description": "Clears a user code from a lock.",
                    "fields": {
                        "code_slot": {
                            "description": "Code slot to clear code from.",
                            "name": "Code slot"
                        }
                    },
                    "name": "Clear lock user"
                },
                "disable_lock_user_code": {
                    "description": "Disables a user code on a lock.",
                    "fields": {
                        "code_slot": {
                            "description": "Code slot to disable.",
                            "name": "Code slot"
                        }
                    },
                    "name": "Disable lock user"
                },
                "enable_lock_user_code": {
                    "description": "Enables a user code on a lock.",
                    "fields": {
                        "code_slot": {
                            "description": "Code slot to enable.",
                            "name": "Code slot"
                        }
                    },
                    "name": "Enable lock user"
                },
                "issue_zigbee_cluster_command": {
                    "description": "Issues a command on the specified cluster on the specified entity.",
                    "fields": {
                        "args": {
                            "description": "Arguments to pass to the command.",
                            "name": "Args"
                        },
                        "command": {
                            "description": "ID of the command to execute.",
                            "name": "Command"
                        },
                        "command_type": {
                            "description": "Type of the command to execute.",
                            "name": "Command Type"
                        },
                        "ieee": {
                            "name": "IEEE"
                        },
                        "params": {
                            "description": "Parameters to pass to the command.",
                            "name": "Params"
                        }
                    },
                    "name": "Issue Zigbee cluster command"
                },
                "issue_zigbee_group_command": {
                    "description": "Issue command on the specified cluster on the specified group.",
                    "fields": {
                        "args": {
                            "description": "Arguments to pass to the command.",
                            "name": "Args"
                        },
                        "cluster_id": {
                            "description": "ZCL cluster to send command to."
                        },
                        "cluster_type": {
                            "name": "Cluster type"
                        },
                        "command": {
                            "description": "ID of the command to execute.",
                            "name": "Command"
                        },
                        "group": {
                            "description": "Hexadecimal address of the group.",
                            "name": "Group"
                        }
                    },
                    "name": "Issue Zigbee group command"
                },
                "permit": {
                    "description": "Allows nodes to join the Zigbee network.",
                    "fields": {
                        "duration": {
                            "description": "Time to permit joins.",
                            "name": "Duration"
                        },
                        "ieee": {
                            "description": "IEEE address of the node permitting new joins.",
                            "name": "IEEE"
                        },
                        "install_code": {
                            "description": "Install code of the joining device (must be used with the source_ieee).",
                            "name": "Install code"
                        },
                        "qr_code": {
                            "description": "Value of the QR install code (different between vendors).",
                            "name": "QR code"
                        },
                        "source_ieee": {
                            "description": "IEEE address of the joining device (must be used with the install code).",
                            "name": "Source IEEE"
                        }
                    },
                    "name": "Permit"
                },
                "reconfigure_device": {
                    "description": "Reconfigures a ZHA device (heal device). Use this if you are having issues with the device. If the device in question is a battery-powered device, ensure it is awake and accepting commands when you use this service.",
                    "fields": {
                        "ieee": {
                            "description": "IEEE address of the device to reconfigure.",
                            "name": "IEEE"
                        }
                    },
                    "name": "Reconfigure device"
                },
                "remove": {
                    "description": "Removes a node from the Zigbee network.",
                    "fields": {
                        "ieee": {
                            "description": "IEEE address of the node to remove.",
                            "name": "IEEE"
                        }
                    },
                    "name": "Remove"
                },
                "set_lock_user_code": {
                    "description": "Sets a user code on a lock."
                },
                "warning_device_squawk": {
                    "fields": {
                        "strobe": {
                            "description": "The strobe field is used as a Boolean, and determines if the visual indication is also required in addition to the audible squawk, as shown in Table 8-25 of the ZCL spec - Strobe Bit.",
                            "name": "Strobe"
                        }
                    },
                    "name": "Warning device squawk"
                },
                "warning_device_warn": {
                    "description": "This service starts the operation of the warning device. The warning device alerts the surrounding area by audible (siren) and visual (strobe) signals.",
                    "fields": {
                        "duration": {
                            "description": "Requested duration of warning, in seconds (16 bit). If both Strobe and Warning Mode are \"0\" this field is ignored.",
                            "name": "Duration"
                        },
                        "duty_cycle": {
                            "description": "Indicates the length of the flash cycle. This allows you to vary the flash duration for different alarm types (e.g., fire, police, burglar). The valid range is 0-100 in increments of 10. All other values must be rounded to the nearest valid value. Strobe calculates a duty cycle over a duration of one second. The ON state must precede the OFF state. For example, if the Strobe Duty Cycle field specifies “40,”, then the strobe flashes ON for 4\/10ths of a second and then turns OFF for 6\/10ths of a second.",
                            "name": "Duty cycle"
                        },
                        "ieee": {
                            "name": "IEEE"
                        },
                        "intensity": {
                            "description": "Indicates the intensity of the strobe as shown in Table 8-23 of the ZCL spec. This attribute is designed to vary the output of the strobe (i.e., brightness) and not its frequency, which is detailed in section 8.4.2.3.1.6 of the ZCL spec.",
                            "name": "Intensity"
                        },
                        "level": {
                            "description": "The Siren Level field is used as a 2-bit enumeration, and indicates the intensity of audible squawk sound as shown in Table 8-22 of the ZCL spec.",
                            "name": "Level"
                        },
                        "mode": {
                            "description": "The Warning Mode field is used as a 4-bit enumeration, can have one of the values 0-6 defined below in table 8-20 of the ZCL spec. The exact behaviour of the warning device in each mode is according to the relevant security standards."
                        },
                        "strobe": {
                            "description": "The Strobe field is used as a 2-bit enumeration, and determines if the visual indication is required in addition to the audible siren, as indicated in Table 8-21 of the ZCL spec. \"0\" means no strobe, \"1\" means strobe. If the strobe field is “1” and the Warning Mode is “0” (“Stop”), then only the strobe is activated.",
                            "name": "Strobe"
                        }
                    },
                    "name": "Warning device starts alert"
                }
            }
        },
        "zoneminder": {
            "services": {
                "set_run_state": {
                    "description": "Sets the ZoneMinder run state.",
                    "fields": {
                        "name": {
                            "description": "The string name of the ZoneMinder run state to set as active."
                        }
                    },
                    "name": "Set run state"
                }
            }
        },
        "zwave_js": {
            "issues": {
                "device_config_file_changed": {
                    "fix_flow": {
                        "step": {
                            "confirm": {
                                "description": "Z-Wave JS discovers a lot of device metadata by interviewing the device. However, some of the information has to be loaded from a configuration file. Some of this information is only evaluated once, during the device interview.\n\nWhen a device config file is updated, this information may be stale and and the device must be re-interviewed to pick up the changes.\n\n This is not a required operation and device functionality will be impacted during the re-interview process, but you may see improvements for your device once it is complete.\n\nIf you'd like to proceed, click on SUBMIT below. The re-interview will take place in the background.",
                                "title": "Z-Wave device configuration file changed: {device_name}"
                            }
                        }
                    },
                    "title": "Z-Wave device configuration file changed: {device_name}"
                },
                "dry_fan_presets_deprecation": {
                    "fix_flow": {
                        "step": {
                            "confirm": {
                                "description": "You are using the Dry or Fan preset modes in your entity `{entity_id}`.\n\nDry and Fan preset modes are deprecated and will be removed. Please update your automations to use the corresponding Dry and Fan **HVAC modes** instead.\n\nClick on SUBMIT below once you have manually fixed this issue.",
                                "title": "Dry and Fan preset modes will be removed: {entity_id}"
                            }
                        }
                    },
                    "title": "Dry and Fan preset modes will be removed: {entity_id}"
                }
            },
            "services": {
                "bulk_set_partial_config_parameters": {
                    "description": "Allows for bulk setting partial parameters. Useful when multiple partial parameters have to be set at the same time.",
                    "fields": {
                        "endpoint": {
                            "description": "The configuration parameter's endpoint.",
                            "name": "Endpoint"
                        },
                        "parameter": {
                            "description": "The name (or ID) of the configuration parameter you want to configure.",
                            "name": "Parameter"
                        },
                        "value": {
                            "description": "The new value(s) to set for this configuration parameter. Can either be a raw integer value to represent the bulk change or a mapping where the key is the bitmask (either in hex or integer form) and the value is the new value you want to set for that partial parameter.",
                            "name": "Value"
                        }
                    },
                    "name": "Bulk set partial configuration parameters (advanced)."
                },
                "clear_lock_usercode": {
                    "description": "Clears a user code from a lock.",
                    "fields": {
                        "code_slot": {
                            "description": "Code slot to clear code from.",
                            "name": "Code slot"
                        }
                    },
                    "name": "Clear lock user code"
                },
                "invoke_cc_api": {
                    "description": "Calls a Command Class API on a node. Some Command Classes can't be fully controlled via the `set_value` service and require direct calls to the Command Class API.",
                    "fields": {
                        "command_class": {
                            "description": "The ID of the command class that you want to issue a command to.",
                            "name": "Command class"
                        },
                        "endpoint": {
                            "description": "The endpoint to call the API on. If an endpoint is specified, that endpoint will be targeted for all nodes associated with the target areas, devices, and\/or entities. If an endpoint is not specified, the root endpoint (0) will be targeted for nodes associated with target areas and devices, and the endpoint for the primary value of each entity will be targeted.",
                            "name": "Endpoint"
                        },
                        "method_name": {
                            "description": "The name of the API method to call. Refer to the Z-Wave JS Command Class API documentation (https:\/\/zwave-js.github.io\/node-zwave-js\/#\/api\/CCs\/index) for available methods.",
                            "name": "Method name"
                        },
                        "parameters": {
                            "description": "A list of parameters to pass to the API method. Refer to the Z-Wave JS Command Class API documentation (https:\/\/zwave-js.github.io\/node-zwave-js\/#\/api\/CCs\/index) for parameters.",
                            "name": "Parameters"
                        }
                    },
                    "name": "Invoke a Command Class API on a node (advanced)"
                },
                "multicast_set_value": {
                    "description": "Changes any value that Z-Wave JS recognizes on multiple Z-Wave devices using multicast, so all devices receive the message simultaneously. This service has minimal validation so only use this service if you know what you are doing.",
                    "fields": {
                        "broadcast": {
                            "description": "Whether the command should be broadcast to all devices on the network?",
                            "name": "Broadcast?"
                        },
                        "command_class": {
                            "description": "The ID of the command class for the value.",
                            "name": "Command class"
                        },
                        "endpoint": {
                            "description": "The endpoint for the value.",
                            "name": "Endpoint"
                        },
                        "options": {
                            "description": "Set value options map. Refer to the Z-Wave JS documentation for more information on what options can be set.",
                            "name": "Options"
                        },
                        "property": {
                            "description": "The ID of the property for the value.",
                            "name": "Property"
                        },
                        "property_key": {
                            "description": "The ID of the property key for the value.",
                            "name": "Property key"
                        },
                        "value": {
                            "description": "The new value to set.",
                            "name": "Value"
                        }
                    },
                    "name": "Set a value on multiple devices via multicast (advanced)"
                },
                "ping": {
                    "description": "Forces Z-Wave JS to try to reach a node. This can be used to update the status of the node in Z-Wave JS when you think it doesn't accurately reflect reality, e.g. reviving a failed\/dead node or marking the node as asleep.",
                    "name": "Ping a node"
                },
                "refresh_value": {
                    "description": "Force updates the values of a Z-Wave entity.",
                    "fields": {
                        "entity_id": {
                            "description": "Entities to refresh.",
                            "name": "Entities"
                        },
                        "refresh_all_values": {
                            "description": "Whether to refresh all values (true) or just the primary value (false).",
                            "name": "Refresh all values?"
                        }
                    },
                    "name": "Refresh values"
                },
                "reset_meter": {
                    "description": "Resets the meters on a node.",
                    "fields": {
                        "meter_type": {
                            "description": "The type of meter to reset. Not all meters support the ability to pick a meter type to reset.",
                            "name": "Meter type"
                        },
                        "value": {
                            "description": "The value that meters should be reset to. Not all meters support the ability to be reset to a specific value.",
                            "name": "Target value"
                        }
                    },
                    "name": "Reset meters on a node"
                },
                "set_config_parameter": {
                    "description": "Changes the configuration parameters of your Z-Wave devices.",
                    "fields": {
                        "bitmask": {
                            "description": "Target a specific bitmask (see the documentation for more information).",
                            "name": "Bitmask"
                        },
                        "endpoint": {
                            "description": "The configuration parameter's endpoint.",
                            "name": "Endpoint"
                        },
                        "parameter": {
                            "description": "The name (or ID) of the configuration parameter you want to configure.",
                            "name": "Parameter"
                        },
                        "value": {
                            "description": "The new value to set for this configuration parameter.",
                            "name": "Value"
                        }
                    },
                    "name": "Set device configuration parameter"
                },
                "set_lock_usercode": {
                    "description": "Sets a user code on a lock.",
                    "fields": {
                        "code_slot": {
                            "description": "Code slot to set the code.",
                            "name": "Code slot"
                        },
                        "usercode": {
                            "description": "Lock code to set.",
                            "name": "Code"
                        }
                    },
                    "name": "Set lock user code"
                },
                "set_value": {
                    "description": "Changes any value that Z-Wave JS recognizes on a Z-Wave device. This service has minimal validation so only use this service if you know what you are doing.",
                    "fields": {
                        "command_class": {
                            "description": "The ID of the command class for the value.",
                            "name": "Command class"
                        },
                        "endpoint": {
                            "description": "The endpoint for the value.",
                            "name": "Endpoint"
                        },
                        "options": {
                            "description": "Set value options map. Refer to the Z-Wave JS documentation for more information on what options can be set.",
                            "name": "Options"
                        },
                        "property": {
                            "description": "The ID of the property for the value.",
                            "name": "Property"
                        },
                        "property_key": {
                            "description": "The ID of the property key for the value.",
                            "name": "Property key"
                        },
                        "value": {
                            "description": "The new value to set.",
                            "name": "Value"
                        },
                        "wait_for_result": {
                            "description": "Whether to wait for a response from the node. If not included in the payload, the integration will decide whether to wait or not. If set to `true`, note that the service call can take a while if setting a value on an asleep battery device.",
                            "name": "Wait for result?"
                        }
                    },
                    "name": "Set a value (advanced)"
                }
            }
        }
    }
}